I"6<h2 id="the-history">The history</h2>

<p>Cowsay is a terminal program that generates ascii pictures of a cow saying what you tell the cow to say in a bubble. See the Wikipedia page for more information: <a href="http://en.wikipedia.org/wiki/Cowsay">http://en.wikipedia.org/wiki/Cowsay</a>.</p>

<p>Install cowsay to use in your terminal (on OSX):</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew update
brew install cowsay
</code></pre></div></div>

<p>Type <code class="highlighter-rouge">cowsay hello world!</code>, and you get:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ______________
&lt; hello world! &gt;
 --------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||
</code></pre></div></div>

<p>Optionally, you can install <a href="http://en.wikipedia.org/wiki/Fortune_(Unix)">fortune</a> to get pseudorandom messages from a database of quotations. On OSX do <code class="highlighter-rouge">brew install fortune</code>, then you can pipe a fortune quote to <code class="highlighter-rouge">cowsay</code>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fortune | cowsay
</code></pre></div></div>

<p>And get something like:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ______________________________________
/ "To take a significant step forward, \
| you must make a series of finite     |
| improvements." -- Donald J. Atwood,  |
\ General Motors                       /
 --------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||
</code></pre></div></div>

<p>You can also get different animals. Try <code class="highlighter-rouge">cowsay -f tux &lt;yourmessage&gt;</code></p>

<h2 id="cowsay-in-r">Cowsay in R</h2>

<p>Why cowsay for R?  Why not. You never know what you will learn in fun side projects. Basically, this cowsay R package we are making prints messages that you pass to the function <code class="highlighter-rouge">say</code>.  There are three arguments to the <code class="highlighter-rouge">say</code> function:</p>

<ul>
  <li><strong>what</strong>: What do you want to say?  You can pass it a custom message, anything you want, like <em>what’s up</em>, or <em>howdy!</em>. You can also get R’s version of fortunes, quotes about R. Just pass the exact term <em>forture</em>. If you want a fact about cats from the <a href="http://catfacts-api.appspot.com/">Cat Facts API</a>, pass in <em>catfact</em>. Last, you can get the current time by passing <em>time</em> to this parameter.</li>
  <li><strong>by</strong>: Type of animal, one of cow, chicken, poop, cat, ant, pumpkin, ghost, spider, rabbit, pig, snowman, or frog. If you want more animals, send a pull request, or ask and at some point it will be added.</li>
  <li><strong>type</strong>: One of message (default), warning, or string (returns string). You could use string to pass into other functions, etc., instead of printing a warning or message.</li>
</ul>

<p>There are three other contributors so far (a big thanks to them):</p>

<ul>
  <li>Tyler Rinker</li>
  <li>Thomas Leeper</li>
  <li>Noam Ross</li>
</ul>

<h3 id="installation">Installation</h3>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">devtools</span><span class="p">)</span><span class="w">
</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"cowsay"</span><span class="p">,</span><span class="w"> </span><span class="s2">"sckott"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">cowsay</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>p.s. or <code class="highlighter-rouge">install_github("sckott/cowsay")</code> if you have a newer version of devtools</p>

<h3 id="get-time">Get time</h3>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">say</span><span class="p">(</span><span class="s2">"time"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
 ----- 
 2014-02-20 14:15:35 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">say</span><span class="p">(</span><span class="s2">"time"</span><span class="p">,</span><span class="w"> </span><span class="s2">"chicken"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>

 ----- 
 2014-02-20 14:15:35 
 ------ 
    \   
     \  
         _
       _/ }
      `&gt;' \
      `|   \
       |   /'-.     .-.
        \'     ';`--' .'
         \'.    `'-./
          '.`-..-;`
            `;-..'
            _| _|
            /` /`
  
</code></pre></div></div>

<h3 id="vary-type-of-output-default-calls-message">Vary type of output, default calls message</h3>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">say</span><span class="p">(</span><span class="s2">"hello world"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
 ----- 
 hello world 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">say</span><span class="p">(</span><span class="s2">"hello world"</span><span class="p">,</span><span class="w"> </span><span class="n">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"warning"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Warning: 
 ----- 
 hello world 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">say</span><span class="p">(</span><span class="s2">"hello world"</span><span class="p">,</span><span class="w"> </span><span class="n">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"string"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1] "\n ----- \n hello world \n ------ \n    \\   ^__^ \n     \\  (oo)\\ ________ \n        (__)\\         )\\ /\\ \n             ||------w|\n             ||      ||"
</code></pre></div></div>

<h3 id="catfacts">Catfacts!!!!</h3>

<p>From the <a href="http://catfacts-api.appspot.com/">catfacts API</a>, we can get random cat facts. If you put in <em>catfact</em> you by default get a cat saying it.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">say</span><span class="p">(</span><span class="s2">"catfact"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cat"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>

 ----- 
 Neutering a cat extends its life span by two or three years. 
 ------ 
    \   
     \  
               \`*-.
                 )  _`-.                 
                .  : `. .                
                : _   '                 
                ; *` _.   `*-._          
                `-.-'          `-.       
                  ;       `       `.     
                  :.       .       \
                  .\  .   :   .-'   .   
                  '  `+.;  ;  '      :   
                  :  '  |    ;       ;-. 
                  ; '   : :`-:     _.`* ;
               .*' /  .*' ; .*`- +'  `*' 
               `*-*   `*-*  `*-*'        
    
</code></pre></div></div>

<h3 id="r-fortunes">R fortunes</h3>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">say</span><span class="p">(</span><span class="s2">"fortune"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
 ----- 
 If I were to be treated by a cure created by stepwise regression, I would prefer voodoo.
 Dieter Menne
 in a thread about regressions with many variables
 R-help
 October 2009 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">say</span><span class="p">(</span><span class="s2">"fortune"</span><span class="p">,</span><span class="w"> </span><span class="s2">"pig"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>

 ----- 
 Cross posting is sociopathic.
 Roger Koenker
 NA
 R-help
 November 2008 
 ------ 
    \   
     \  
       _//| .-~~~-.
     _/oo  }       }-@
    ('')_  }       |
     `--'| { }--{  }
          //_/  /_/
  
</code></pre></div></div>

<h3 id="incorporate-into-a-function">Incorporate into a function</h3>

<p>Define a function</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">foo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">5</span><span class="p">)</span><span class="w"> 
        </span><span class="n">say</span><span class="p">(</span><span class="s2">"woops, x should be 5 or greater"</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Call the function, with an error on purpose</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">foo</span><span class="p">(</span><span class="m">3</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
 ----- 
 woops, x should be 5 or greater 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
</code></pre></div></div>

<p>Or capture a warning or message and pass to the <code class="highlighter-rouge">say</code> function</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">foo2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">err</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tryCatch</span><span class="p">(</span><span class="n">x</span><span class="o">^</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">error</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">e</span><span class="p">)</span><span class="w"> </span><span class="n">e</span><span class="p">)</span><span class="w">
    </span><span class="n">say</span><span class="p">(</span><span class="n">err</span><span class="o">$</span><span class="n">message</span><span class="p">,</span><span class="w"> </span><span class="s2">"frog"</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Then call the function</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">foo2</span><span class="p">(</span><span class="s2">"hello"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>

 ----- 
 non-numeric argument to binary operator 
 ------ 
    \   
     \  
        (.)_(.)
     _ (   _   ) _
    / \/`-----'\/ \
  __\ ( (     ) ) /__
  )   /\ \._./ /\   (
   )_/ /|\   /|\ \_(
  
</code></pre></div></div>

<p>Awesome. Much better to have an error message from a frog than just the harsh console alone :)</p>
:ET