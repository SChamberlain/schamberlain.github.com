I"g^<p>Recently Iâ€™ve had fun playing with the GitHub API, and here are some notes to self about this fun having.</p>

<h2 id="setup">Setup</h2>

<p>Get/load packages</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s1">'devtools'</span><span class="p">,</span><span class="s1">'jsonlite'</span><span class="p">,</span><span class="s1">'httr'</span><span class="p">,</span><span class="s1">'yaml'</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="s2">"devtools"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="s2">"httr"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="s2">"yaml"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="define-a-vector-of-package-names">Define a vector of package names</h2>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pkgs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"alm"</span><span class="p">,</span><span class="w"> </span><span class="s2">"bmc"</span><span class="p">,</span><span class="w"> </span><span class="s2">"bold"</span><span class="p">,</span><span class="w"> </span><span class="s2">"clifro"</span><span class="p">,</span><span class="w"> </span><span class="s2">"ecoengine"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"elastic"</span><span class="p">,</span><span class="w"> </span><span class="s2">"fulltext"</span><span class="p">,</span><span class="w"> </span><span class="s2">"geonames"</span><span class="p">,</span><span class="w"> </span><span class="s2">"gistr"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"RNeXML"</span><span class="p">,</span><span class="w"> </span><span class="s2">"rnoaa"</span><span class="p">,</span><span class="w"> </span><span class="s2">"rnpn"</span><span class="p">,</span><span class="w"> </span><span class="s2">"traits"</span><span class="p">,</span><span class="w"> </span><span class="s2">"rplos"</span><span class="p">,</span><span class="w"> </span><span class="s2">"rsnps"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"rWBclimate"</span><span class="p">,</span><span class="w"> </span><span class="s2">"solr"</span><span class="p">,</span><span class="w"> </span><span class="s2">"spocc"</span><span class="p">,</span><span class="w"> </span><span class="s2">"taxize"</span><span class="p">,</span><span class="w"> </span><span class="s2">"togeojson"</span><span class="p">,</span><span class="w"> </span><span class="s2">"treeBASE"</span><span class="p">)</span><span class="w">
</span><span class="n">pkgs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sort</span><span class="p">(</span><span class="n">pkgs</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="define-functions">Define functions</h2>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">github_auth</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">appname</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getOption</span><span class="p">(</span><span class="s2">"gh_appname"</span><span class="p">),</span><span class="w"> </span><span class="n">key</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getOption</span><span class="p">(</span><span class="s2">"gh_id"</span><span class="p">),</span><span class="w">
                        </span><span class="n">secret</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getOption</span><span class="p">(</span><span class="s2">"gh_secret"</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nf">is.null</span><span class="p">(</span><span class="n">getOption</span><span class="p">(</span><span class="s2">"gh_token"</span><span class="p">)))</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">myapp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">oauth_app</span><span class="p">(</span><span class="n">appname</span><span class="p">,</span><span class="w"> </span><span class="n">key</span><span class="p">,</span><span class="w"> </span><span class="n">secret</span><span class="p">)</span><span class="w">
    </span><span class="n">token</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">oauth2.0_token</span><span class="p">(</span><span class="n">oauth_endpoints</span><span class="p">(</span><span class="s2">"github"</span><span class="p">),</span><span class="w"> </span><span class="n">myapp</span><span class="p">)</span><span class="w">
    </span><span class="n">options</span><span class="p">(</span><span class="n">gh_token</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">token</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">token</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getOption</span><span class="p">(</span><span class="s2">"gh_token"</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">token</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">make_url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">z</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">sprintf</span><span class="p">(</span><span class="s2">"https://api.github.com/repos/%s/%s/%s"</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">z</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">process_result</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">stop_for_status</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w">
  </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="n">x</span><span class="o">$</span><span class="n">headers</span><span class="o">$</span><span class="n">`content-type`</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"application/json; charset=utf-8"</span><span class="p">)</span><span class="w">
    </span><span class="n">stop</span><span class="p">(</span><span class="s2">"content type mismatch"</span><span class="p">)</span><span class="w">
  </span><span class="n">tmp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">content</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">as</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"text"</span><span class="p">)</span><span class="w">
  </span><span class="n">jsonlite</span><span class="o">::</span><span class="n">fromJSON</span><span class="p">(</span><span class="n">tmp</span><span class="p">,</span><span class="w"> </span><span class="n">flatten</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">parse_file</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">tmp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"\n\\s+"</span><span class="p">,</span><span class="w"> </span><span class="s2">"\n"</span><span class="p">,</span><span class="w"> 
              </span><span class="n">paste</span><span class="p">(</span><span class="n">vapply</span><span class="p">(</span><span class="n">strsplit</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="s2">"\n"</span><span class="p">)[[</span><span class="m">1</span><span class="p">]],</span><span class="w"> </span><span class="n">RCurl</span><span class="o">::</span><span class="n">base64Decode</span><span class="p">,</span><span class="w">
                           </span><span class="n">character</span><span class="p">(</span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">USE.NAMES</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">),</span><span class="w"> </span><span class="n">collapse</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" "</span><span class="p">))</span><span class="w">
  </span><span class="n">lines</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">readLines</span><span class="p">(</span><span class="n">textConnection</span><span class="p">(</span><span class="n">tmp</span><span class="p">))</span><span class="w">
  </span><span class="n">vapply</span><span class="p">(</span><span class="n">lines</span><span class="p">,</span><span class="w"> </span><span class="n">gsub</span><span class="p">,</span><span class="w"> </span><span class="n">character</span><span class="p">(</span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"\\s"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
         </span><span class="n">USE.NAMES</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">request</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">owner</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"ropensci"</span><span class="p">,</span><span class="w"> </span><span class="n">repo</span><span class="p">,</span><span class="w"> </span><span class="n">file</span><span class="o">=</span><span class="s2">"DESCRIPTION"</span><span class="p">,</span><span class="w"> </span><span class="n">...</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">req</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GET</span><span class="p">(</span><span class="n">make_url</span><span class="p">(</span><span class="n">owner</span><span class="p">,</span><span class="w"> </span><span class="n">repo</span><span class="p">,</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"contents/"</span><span class="p">,</span><span class="w"> </span><span class="n">file</span><span class="p">)),</span><span class="w"> 
             </span><span class="n">config</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">token</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">github_auth</span><span class="p">(),</span><span class="w"> </span><span class="n">...</span><span class="p">))</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="n">req</span><span class="o">$</span><span class="n">status_code</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">200</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="kc">NA</span><span class="w"> </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">cts</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">process_result</span><span class="p">(</span><span class="n">req</span><span class="p">)</span><span class="o">$</span><span class="n">content</span><span class="w">
    </span><span class="n">parse_file</span><span class="p">(</span><span class="n">cts</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">has_term</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">what</span><span class="p">,</span><span class="w"> </span><span class="n">...</span><span class="p">)</span><span class="w"> </span><span class="nf">any</span><span class="p">(</span><span class="n">grepl</span><span class="p">(</span><span class="n">what</span><span class="p">,</span><span class="w"> </span><span class="n">request</span><span class="p">(</span><span class="n">...</span><span class="p">)))</span><span class="w">
</span><span class="n">has_file</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">what</span><span class="p">,</span><span class="w"> </span><span class="n">...</span><span class="p">)</span><span class="w"> </span><span class="k">if</span><span class="p">(</span><span class="nf">all</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">request</span><span class="p">(</span><span class="n">file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">what</span><span class="p">,</span><span class="w"> </span><span class="n">...</span><span class="p">))))</span><span class="w"> </span><span class="kc">FALSE</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">
</span></code></pre></div></div>

<h2 id="do-stuff">Do stuff</h2>

<p>Does a package depend on a particular package? e.g., look for <code class="highlighter-rouge">httr</code> in the <code class="highlighter-rouge">DESCRIPTION</code> file (which is the default file name in <code class="highlighter-rouge">request()</code> above)</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">has_term</span><span class="p">(</span><span class="s2">"httr"</span><span class="p">,</span><span class="w"> </span><span class="n">repo</span><span class="o">=</span><span class="s2">"taxize"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="n">has_term</span><span class="p">(</span><span class="s2">"maptools"</span><span class="p">,</span><span class="w"> </span><span class="n">repo</span><span class="o">=</span><span class="s2">"taxize"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; [1] FALSE</span><span class="w">
</span></code></pre></div></div>

<p>Do a series of R packages have a file for how to contribute <code class="highlighter-rouge">CONTRIBUTING.md</code>?</p>

<p>Yes</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">has_file</span><span class="p">(</span><span class="s2">"CONTRIBUTING.md"</span><span class="p">,</span><span class="w"> </span><span class="n">repo</span><span class="o">=</span><span class="s2">"taxize"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span></code></pre></div></div>

<p>Many packages</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">vapply</span><span class="p">(</span><span class="n">pkgs</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="n">has_file</span><span class="p">(</span><span class="s2">"CONTRIBUTING.md"</span><span class="p">,</span><span class="w"> </span><span class="n">repo</span><span class="o">=</span><span class="n">x</span><span class="p">),</span><span class="w"> </span><span class="n">logical</span><span class="p">(</span><span class="m">1</span><span class="p">))</span><span class="w">
</span><span class="c1">#&gt;        alm        bmc       bold     clifro  ecoengine    elastic </span><span class="w">
</span><span class="c1">#&gt;      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE </span><span class="w">
</span><span class="c1">#&gt;   fulltext   geonames      gistr     RNeXML      rnoaa       rnpn </span><span class="w">
</span><span class="c1">#&gt;       TRUE      FALSE      FALSE       TRUE       TRUE      FALSE </span><span class="w">
</span><span class="c1">#&gt;      rplos      rsnps rWBclimate       solr      spocc     taxize </span><span class="w">
</span><span class="c1">#&gt;      FALSE      FALSE      FALSE      FALSE       TRUE       TRUE </span><span class="w">
</span><span class="c1">#&gt;  togeojson     traits   treeBASE </span><span class="w">
</span><span class="c1">#&gt;      FALSE      FALSE      FALSE</span><span class="w">
</span></code></pre></div></div>

<h2 id="check-rate-limit">Check rate limit</h2>

<p>Define function</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rate_limit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">...</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">token</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">github_auth</span><span class="p">()</span><span class="w">
  </span><span class="n">req</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GET</span><span class="p">(</span><span class="s2">"https://api.github.com/rate_limit"</span><span class="p">,</span><span class="w"> </span><span class="n">config</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">token</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">token</span><span class="p">,</span><span class="w"> </span><span class="n">...</span><span class="p">))</span><span class="w">
  </span><span class="n">process_result</span><span class="p">(</span><span class="n">req</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Check it</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rate_limit</span><span class="p">()</span><span class="w">
</span><span class="c1">#&gt; $resources</span><span class="w">
</span><span class="c1">#&gt; $resources$core</span><span class="w">
</span><span class="c1">#&gt; $resources$core$limit</span><span class="w">
</span><span class="c1">#&gt; [1] 5000</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $resources$core$remaining</span><span class="w">
</span><span class="c1">#&gt; [1] 4925</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $resources$core$reset</span><span class="w">
</span><span class="c1">#&gt; [1] 1417031016</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $resources$search</span><span class="w">
</span><span class="c1">#&gt; $resources$search$limit</span><span class="w">
</span><span class="c1">#&gt; [1] 30</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $resources$search$remaining</span><span class="w">
</span><span class="c1">#&gt; [1] 30</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $resources$search$reset</span><span class="w">
</span><span class="c1">#&gt; [1] 1417028069</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rate</span><span class="w">
</span><span class="c1">#&gt; $rate$limit</span><span class="w">
</span><span class="c1">#&gt; [1] 5000</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rate$remaining</span><span class="w">
</span><span class="c1">#&gt; [1] 4925</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rate$reset</span><span class="w">
</span><span class="c1">#&gt; [1] 1417031016</span><span class="w">
</span></code></pre></div></div>

<p>Convert time to reset to human readable form</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">as.POSIXct</span><span class="p">(</span><span class="n">rate_limit</span><span class="p">()</span><span class="o">$</span><span class="n">rate</span><span class="o">$</span><span class="n">reset</span><span class="p">,</span><span class="w"> </span><span class="n">origin</span><span class="o">=</span><span class="s2">"1970-01-01"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; [1] "2014-11-26 11:43:36 PST"</span><span class="w">
</span></code></pre></div></div>
:ET