I"Œ<p>Regular expressions are a powerful in any language to manipulate, search, etc. data.</p>

<p>For example:</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="o">&gt;</span><span class="w"> </span><span class="n">fruit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"apple"</span><span class="p">,</span><span class="w"> </span><span class="s2">"banana"</span><span class="p">,</span><span class="w"> </span><span class="s2">"pear"</span><span class="p">,</span><span class="w"> </span><span class="s2">"pineapple"</span><span class="p">)</span><span class="w">
</span><span class="o">&gt;</span><span class="w"> </span><span class="n">fruit</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"apple"</span><span class="w">     </span><span class="s2">"banana"</span><span class="w">    </span><span class="s2">"pear"</span><span class="w">      </span><span class="s2">"pineapple"</span><span class="w">

</span><span class="o">&gt;</span><span class="w"> </span><span class="n">grep</span><span class="p">(</span><span class="s2">"a"</span><span class="p">,</span><span class="w"> </span><span class="n">fruit</span><span class="p">)</span><span class="w"> </span><span class="c1"># there is an "a" in each of the words</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">1</span><span class="w"> </span><span class="m">2</span><span class="w"> </span><span class="m">3</span><span class="w"> </span><span class="m">4</span><span class="w">
</span><span class="o">&gt;</span><span class="w"> 
</span><span class="o">&gt;</span><span class="w"> </span><span class="n">strsplit</span><span class="p">(</span><span class="s2">"a string"</span><span class="p">,</span><span class="w"> </span><span class="s2">"s"</span><span class="p">)</span><span class="w"> </span><span class="c1"># strsplit splits the string on the "s"</span><span class="w">
</span><span class="p">[[</span><span class="m">1</span><span class="p">]]</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"a "</span><span class="w">    </span><span class="s2">"tring"</span></code></pre></figure>

<p>R base has many functions for regular expressions, see slide 9 of Edâ€™s talk below.  The package stringr, created by Hadley Wickham, is a nice alternative that wraps the base regex functions for easier use. I highly recommend <a href="http://cran.r-project.org/web/packages/stringr/index.html">stringr</a>.</p>

<p>Ed Goodwin, the coordinator of the <a href="http://www.meetup.com/houstonr/">Houston R Users group</a>, gave a presentation to the group last night on regular expressions in R. It was a great talk, and he is allowing me to post his talk here.</p>

<p>Enjoy!  And thanks for sharing Ed!</p>

<div style="width:425px" id="__ss_9576621"> <strong style="display:block;margin:12px 0 4px"><a href="http://www.slideshare.net/schamber/regexpresentationedgoodwin" title="regex-presentation_ed_goodwin" target="_blank">regex-presentation_ed_goodwin</a></strong> <iframe src="http://www.slideshare.net/slideshow/embed_code/9576621" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe> <div style="padding:5px 0 12px"> View more <a href="http://www.slideshare.net/" target="_blank">presentations</a> from <a href="http://www.slideshare.net/schamber" target="_blank">schamber</a> </div> </div>

:ET