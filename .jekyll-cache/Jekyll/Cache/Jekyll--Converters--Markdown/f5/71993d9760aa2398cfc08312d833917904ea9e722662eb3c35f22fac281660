I"=<p>My <a href="http://recology.info/2014/05/analogsea/">last blog </a> post introduced the R package I’m working on <code class="highlighter-rouge">analogsea</code>, an R client for the Digital Ocean API.</p>

<p>Things have changed a bit, including fillig out more functions for all API endpoints, and incorparting feedback from Hadley and Karthik. The package is as <code class="highlighter-rouge">v0.1</code> now, so I thought I’d say a few things about how it works.</p>

<p>Note that Digital Ocean’s v2 API is in beta stage now, so the current version of <code class="highlighter-rouge">analogsea</code> at <code class="highlighter-rouge">v0.1</code> works with their v1 API. The <a href="https://github.com/sckott/analogsea/tree/v2">v2 branch of analogsea</a> is being developed for their v2 API.</p>

<p>If you sign up for an account with Digital Ocean use this referral link: <a href="https://www.digitalocean.com/?refcode=0740f5169634">https://www.digitalocean.com/?refcode=0740f5169634</a> so I can earn some credits. thx :)</p>

<p>First, installation</p>

<p>Note: I did try to submit to CRAN, but Ripley complained about the package name so I’d rather not waste my time esp since people using this likely will already know about <code class="highlighter-rouge">install_github()</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"sckott/analogsea"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Load the library</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="s2">"analogsea"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Loading required package: magrittr
</code></pre></div></div>

<p>Authenticate has changed a bit. Whereas auth details were stored as environment variables before, I’m just using R’s options. <code class="highlighter-rouge">do_auth()</code> will ask for your Digital Ocean details. You can enter them each R session, or store them in your <code class="highlighter-rouge">.Rprofile</code> file. After successful authentication, each function simply looks for your auth details with <code class="highlighter-rouge">getOption()</code>.  You don’t have to use this function first, though if you don’t your first call to another function will ask for auth details.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">do_auth</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><code class="highlighter-rouge">sizes</code>, <code class="highlighter-rouge">images</code>, and <code class="highlighter-rouge">keys</code> functions have changed a bit, by default outputting a <code class="highlighter-rouge">data.frame</code> now.</p>

<p>List available regions</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">regions</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##   id            name slug
## 1  3 San Francisco 1 sfo1
## 2  4      New York 2 nyc2
## 3  5     Amsterdam 2 ams2
## 4  6     Singapore 1 sgp1
</code></pre></div></div>

<p>List available sizes</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sizes</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##   id  name  slug memory cpu disk cost_per_hour cost_per_month
## 1 66 512MB 512mb    512   1   20       0.00744            5.0
## 2 63   1GB   1gb   1024   1   30       0.01488           10.0
## 3 62   2GB   2gb   2048   2   40       0.02976           20.0
## 4 64   4GB   4gb   4096   2   60       0.05952           40.0
## 5 65   8GB   8gb   8192   4   80       0.11905           80.0
## 6 61  16GB  16gb  16384   8  160       0.23810          160.0
## 7 60  32GB  32gb  32768  12  320       0.47619          320.0
## 8 70  48GB  48gb  49152  16  480       0.71429          480.0
## 9 69  64GB  64gb  65536  20  640       0.95238          640.0
</code></pre></div></div>

<p>List available images</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">head</span><span class="p">(</span><span class="n">images</span><span class="p">())</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##        id                  name             slug distribution public sfo1
## 1 3209452 rstudioserverssh_snap             &lt;NA&gt;       Ubuntu  FALSE    1
## 2    1601        CentOS 5.8 x64   centos-5-8-x64       CentOS   TRUE    1
## 3    1602        CentOS 5.8 x32   centos-5-8-x32       CentOS   TRUE    1
## 4   12573        Debian 6.0 x64   debian-6-0-x64       Debian   TRUE    1
## 5   12575        Debian 6.0 x32   debian-6-0-x32       Debian   TRUE    1
## 6   14097      Ubuntu 10.04 x64 ubuntu-10-04-x64       Ubuntu   TRUE    1
##   nyc1 ams1 nyc2 ams2 sgp1
## 1   NA   NA   NA   NA   NA
## 2    1    1    1    1    1
## 3    1    1    1    1    1
## 4    1    1    1    1    1
## 5    1    1    1    1    1
## 6    1    1    1    1    1
</code></pre></div></div>

<p>List ssh keys</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">keys</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## $ssh_keys
## $ssh_keys[[1]]
## $ssh_keys[[1]]$id
## [1] 89103
##
## $ssh_keys[[1]]$name
## [1] "Scott Chamberlain"
</code></pre></div></div>

<p>One change that’s of interest is that most of the various <code class="highlighter-rouge">droplets_*()</code> functions take in the outputs of other <code class="highlighter-rouge">droplets_*()</code> functions. This means that we can pipe outputs of one <code class="highlighter-rouge">droplets_*()</code> function to another, including non-<code class="highlighter-rouge">droplet_*</code> functions (see examples).</p>

<p>Let’s create a droplet:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">res</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">droplets_new</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s2">"foo"</span><span class="p">,</span><span class="w"> </span><span class="n">size_slug</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'512mb'</span><span class="p">,</span><span class="w"> </span><span class="n">image_slug</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'ubuntu-14-04-x64'</span><span class="p">,</span><span class="w"> </span><span class="n">region_slug</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'sfo1'</span><span class="p">,</span><span class="w"> </span><span class="n">ssh_key_ids</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">89103</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">$</span><span class="n">droplet</span><span class="w">
</span><span class="o">$</span><span class="n">droplet</span><span class="o">$</span><span class="n">id</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">1880805</span><span class="w">

</span><span class="o">$</span><span class="n">droplet</span><span class="o">$</span><span class="n">name</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="s2">"foo"</span><span class="w">

</span><span class="o">$</span><span class="n">droplet</span><span class="o">$</span><span class="n">image_id</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">3240036</span><span class="w">

</span><span class="o">$</span><span class="n">droplet</span><span class="o">$</span><span class="n">size_id</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">66</span><span class="w">

</span><span class="o">$</span><span class="n">droplet</span><span class="o">$</span><span class="n">event_id</span><span class="w">
</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="m">26711810</span><span class="w">
</span></code></pre></div></div>

<p>List my droplets</p>

<p>This function used to be <code class="highlighter-rouge">do_droplets_get()</code></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">droplets</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## $droplet_ids
## [1] 1880805
##
## $droplets
## $droplets[[1]]
## $droplets[[1]]$id
## [1] 1880805
##
## $droplets[[1]]$name
## [1] "foo"
##
## $droplets[[1]]$image_id
## [1] 3240036
##
## $droplets[[1]]$size_id
## [1] 66
##
## $droplets[[1]]$region_id
## [1] 3
##
## $droplets[[1]]$backups_active
## [1] FALSE
##
## $droplets[[1]]$ip_address
## [1] "162.243.152.56"
##
## $droplets[[1]]$private_ip_address
## NULL
##
## $droplets[[1]]$locked
## [1] FALSE
##
## $droplets[[1]]$status
## [1] "active"
##
## $droplets[[1]]$created_at
## [1] "2014-06-18T14:15:35Z"
##
##
##
## $event_id
## NULL
</code></pre></div></div>

<p>As mentioned above we can now pipe output of <code class="highlighter-rouge">droplet*()</code> functions to other <code class="highlighter-rouge">droplet*()</code> functions.</p>

<p>Here, pipe output of lising droplets <code class="highlighter-rouge">droplets()</code> to the <code class="highlighter-rouge">events()</code> function</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">droplets</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">events</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error: No event id found
</code></pre></div></div>

<p>In this case there were no event ids to get event data on.</p>

<p>Here, we’ll get details for the droplet we just created, then pipe that to <code class="highlighter-rouge">droplets_power_off()</code></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">droplets</span><span class="p">(</span><span class="m">1880805</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">droplets_power_off</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## $droplet_ids
## [1] 1880805
##
## $droplets
## $droplets$droplet_ids
## [1] 1880805
##
## $droplets$droplets
## $droplets$droplets$id
## [1] 1880805
##
## $droplets$droplets$name
## [1] "foo"
##
## $droplets$droplets$image_id
## [1] 3240036
##
## $droplets$droplets$size_id
## [1] 66
##
## $droplets$droplets$region_id
## [1] 3
##
## $droplets$droplets$backups_active
## [1] FALSE
##
## $droplets$droplets$ip_address
## [1] "162.243.152.56"
##
## $droplets$droplets$private_ip_address
## NULL
##
## $droplets$droplets$locked
## [1] FALSE
##
## $droplets$droplets$status
## [1] "active"
##
## $droplets$droplets$created_at
## [1] "2014-06-18T14:15:35Z"
##
## $droplets$droplets$backups
## list()
##
## $droplets$droplets$snapshots
## list()
##
##
## $droplets$event_id
## NULL
##
##
## $event_id
## [1] 26714109
</code></pre></div></div>

<p>Then pipe it again to <code class="highlighter-rouge">droplets_power_on()</code></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">droplets</span><span class="p">(</span><span class="m">1880805</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">droplets_power_on</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## $droplet_ids
## [1] 1880805
##
## $droplets
## $droplets$droplet_ids
## [1] 1880805
##
## $droplets$droplets
## $droplets$droplets$id
## [1] 1880805
##
## $droplets$droplets$name
## [1] "foo"
##
## $droplets$droplets$image_id
## [1] 3240036
##
## $droplets$droplets$size_id
## [1] 66
##
## $droplets$droplets$region_id
## [1] 3
##
## $droplets$droplets$backups_active
## [1] FALSE
##
## $droplets$droplets$ip_address
## [1] "162.243.152.56"
##
## $droplets$droplets$private_ip_address
## NULL
##
## $droplets$droplets$locked
## [1] FALSE
##
## $droplets$droplets$status
## [1] "off"
##
## $droplets$droplets$created_at
## [1] "2014-06-18T14:15:35Z"
##
## $droplets$droplets$backups
## list()
##
## $droplets$droplets$snapshots
## list()
##
##
## $droplets$event_id
## NULL
##
##
## $event_id
## [1] 26714152
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Sys.sleep</span><span class="p">(</span><span class="m">6</span><span class="p">)</span><span class="w">
</span><span class="n">droplets</span><span class="p">(</span><span class="m">1880805</span><span class="p">)</span><span class="o">$</span><span class="n">droplets</span><span class="o">$</span><span class="n">status</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "off"
</code></pre></div></div>

<p>Why not use more pipes?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">droplets</span><span class="p">(</span><span class="m">1880805</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">droplets_power_off</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">droplets_power_on</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">events</span><span class="w">
</span></code></pre></div></div>

<hr />

<p>Last time I talked about installing R, RStudio, etc. on a droplet. I’m still working out bugs in that stuff, but do test out so it can get better faster. See <code class="highlighter-rouge">do_install()</code>.</p>
:ET