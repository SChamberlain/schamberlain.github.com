I"ØH<p>Iâ€™ve been working on a little thing called <code class="highlighter-rouge">httping</code> - a small R package that started as a pkg to Ping urls and time requests. Itâ€™s a port of the Ruby gem <a href="https://github.com/jpignata/httping">httping</a>. The <code class="highlighter-rouge">httr</code> package is in <code class="highlighter-rouge">Depends</code> in this package, so its functions can be called directly, without having to load <code class="highlighter-rouge">httr</code> explicitly yourself.</p>

<p>In addition to timing requests, Iâ€™ve been tinkering with how to make http requests, with curl options accepting and returning the same object so they can be chained together, and then that object passed to a http verb like <code class="highlighter-rouge">GET</code>. Maybe this is a bad idea, but maybe not.</p>

<h2 id="installation">Installation</h2>

<p>Install:</p>

<p>One non-CRAN dep (<code class="highlighter-rouge">httpcode</code>) needs to be installed first.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"devtools"</span><span class="p">)</span><span class="w">
</span><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"sckott/httpcode"</span><span class="p">)</span><span class="w">
</span><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"sckott/httping"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Then load package</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="s2">"httping"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="time-requests">Time requests</h2>

<p>The idea with <code class="highlighter-rouge">time()</code> is to provide easy to use and understand information on how long http requests take to run. You should be able to pass in any <code class="highlighter-rouge">httr</code> verbs (<code class="highlighter-rouge">GET()</code>, <code class="highlighter-rouge">POST()</code>, etc.) to <code class="highlighter-rouge">time()</code>. <code class="highlighter-rouge">time()</code> repeats whatever http request you pass to it by default 10 times, but you can set the number of times to repeat in the <code class="highlighter-rouge">count</code> parameter. In addition, the <code class="highlighter-rouge">flood</code> parameter controls whether there is a delay between requests or not, and <code class="highlighter-rouge">delay</code> controls length of the delay.</p>

<p>A <code class="highlighter-rouge">GET</code> request</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">GET</span><span class="p">(</span><span class="s2">"http://google.com"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">time</span><span class="p">(</span><span class="n">count</span><span class="o">=</span><span class="m">3</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; 29.392 kb - http://www.google.com/ code:200 time(ms):92.444</span><span class="w">
</span><span class="c1">#&gt; 29.392 kb - http://www.google.com/ code:200 time(ms):82.127</span><span class="w">
</span><span class="c1">#&gt; 29.392 kb - http://www.google.com/ code:200 time(ms):85.587</span><span class="w">
</span><span class="c1">#&gt; &lt;http time&gt;</span><span class="w">
</span><span class="c1">#&gt;   Avg. min (ms):  82.127</span><span class="w">
</span><span class="c1">#&gt;   Avg. max (ms):  92.444</span><span class="w">
</span><span class="c1">#&gt;   Avg. mean (ms): 86.71933</span><span class="w">
</span></code></pre></div></div>

<p>A <code class="highlighter-rouge">POST</code> request</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">POST</span><span class="p">(</span><span class="s2">"http://httpbin.org/post"</span><span class="p">,</span><span class="w"> </span><span class="n">body</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"A simple text string"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">time</span><span class="p">(</span><span class="n">count</span><span class="o">=</span><span class="m">3</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; 10.144 kb - http://httpbin.org/post code:200 time(ms):267.574</span><span class="w">
</span><span class="c1">#&gt; 10.144 kb - http://httpbin.org/post code:200 time(ms):113.309</span><span class="w">
</span><span class="c1">#&gt; 10.144 kb - http://httpbin.org/post code:200 time(ms):99.938</span><span class="w">
</span><span class="c1">#&gt; &lt;http time&gt;</span><span class="w">
</span><span class="c1">#&gt;   Avg. min (ms):  99.938</span><span class="w">
</span><span class="c1">#&gt;   Avg. max (ms):  267.574</span><span class="w">
</span><span class="c1">#&gt;   Avg. mean (ms): 160.2737</span><span class="w">
</span></code></pre></div></div>

<p>The return object is a list with slots for all the <code class="highlighter-rouge">httr</code> response objects, the times for each request, and the average times. The number of requests, and the delay between requests are included as attributes.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">res</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GET</span><span class="p">(</span><span class="s2">"http://google.com"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">time</span><span class="p">(</span><span class="n">count</span><span class="o">=</span><span class="m">3</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; 29.392 kb - http://www.google.com/ code:200 time(ms):82.086</span><span class="w">
</span><span class="c1">#&gt; 29.392 kb - http://www.google.com/ code:200 time(ms):78.15</span><span class="w">
</span><span class="c1">#&gt; 29.392 kb - http://www.google.com/ code:200 time(ms):79.763</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">attributes</span><span class="p">(</span><span class="n">res</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; $names</span><span class="w">
</span><span class="c1">#&gt; [1] "times"    "averages" "request" </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $count</span><span class="w">
</span><span class="c1">#&gt; [1] 3</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $delay</span><span class="w">
</span><span class="c1">#&gt; [1] 0.5</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $class</span><span class="w">
</span><span class="c1">#&gt; [1] "http_time"</span><span class="w">
</span></code></pre></div></div>

<p>Or print a summary of a response, gives more detail</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">res</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">summary</span><span class="p">()</span><span class="w">
</span><span class="c1">#&gt; &lt;http time, averages (min max mean)&gt;</span><span class="w">
</span><span class="c1">#&gt;   Total (s):           78.15 82.086 79.99967</span><span class="w">
</span><span class="c1">#&gt;   Tedirect (s):        26.695 34.319 29.80633</span><span class="w">
</span><span class="c1">#&gt;   Namelookup time (s): 0.025 0.03 0.028</span><span class="w">
</span><span class="c1">#&gt;   Connect (s):         0.028 0.034 0.032</span><span class="w">
</span><span class="c1">#&gt;   Pretransfer (s):     0.069 0.081 0.07633333</span><span class="w">
</span><span class="c1">#&gt;   Starttransfer (s):   45.44 49.326 47.95867</span><span class="w">
</span></code></pre></div></div>

<p>Messages are printed using <code class="highlighter-rouge">cat</code>, so you can suppress those using <code class="highlighter-rouge">verbose=FALSE</code>, like</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">GET</span><span class="p">(</span><span class="s2">"http://google.com"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">time</span><span class="p">(</span><span class="n">count</span><span class="o">=</span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">verbose</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; &lt;http time&gt;</span><span class="w">
</span><span class="c1">#&gt;   Avg. min (ms):  86.12</span><span class="w">
</span><span class="c1">#&gt;   Avg. max (ms):  94.035</span><span class="w">
</span><span class="c1">#&gt;   Avg. mean (ms): 89.12467</span><span class="w">
</span></code></pre></div></div>

<h2 id="ping-an-endpoint">Ping an endpoint</h2>

<p>The idea with <code class="highlighter-rouge">ping()</code> is to simply return the http status code along with a message describing what that code means. Thatâ€™s it.</p>

<p>This function is a bit different, accepts a url as first parameter, but can accept any args passed on to <code class="highlighter-rouge">httr</code> verb functions, like <code class="highlighter-rouge">GET</code>, <code class="highlighter-rouge">POST</code>,  etc.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s2">"http://google.com"</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">ping</span><span class="p">()</span><span class="w">
</span><span class="c1">#&gt; &lt;http ping&gt; 200</span><span class="w">
</span><span class="c1">#&gt;   Message: OK</span><span class="w">
</span><span class="c1">#&gt;   Description: Request fulfilled, document follows</span><span class="w">
</span></code></pre></div></div>

<p>Or pass in additional arguments to modify request</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s2">"http://google.com"</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">ping</span><span class="p">(</span><span class="n">config</span><span class="o">=</span><span class="n">verbose</span><span class="p">())</span><span class="w">
</span><span class="c1">#&gt; -&gt; GET / HTTP/1.1</span><span class="w">
</span><span class="c1">#&gt; -&gt; User-Agent: curl/7.37.1 Rcurl/1.95.4.5 httr/0.6.1</span><span class="w">
</span><span class="c1">#&gt; -&gt; Host: google.com</span><span class="w">
</span><span class="c1">#&gt; -&gt; Accept-Encoding: gzip</span><span class="w">
</span><span class="n">...cutoff</span><span class="w">
</span></code></pre></div></div>

<h2 id="even-simpler-verbs">Even simpler verbs</h2>

<p><code class="highlighter-rouge">httr</code> is already easy, but <code class="highlighter-rouge">Get()</code>:</p>

<ul>
  <li>Allows use of an intuitive chaining workflow</li>
  <li>Parses data for you using <code class="highlighter-rouge">httr</code> built in format guesser, which should work in most cases</li>
</ul>

<p>A simple GET request</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s2">"http://httpbin.org/get"</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">Get</span><span class="p">()</span><span class="w">
</span><span class="c1">#&gt; $args</span><span class="w">
</span><span class="c1">#&gt; named list()</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $headers</span><span class="w">
</span><span class="c1">#&gt; $headers$Accept</span><span class="w">
</span><span class="c1">#&gt; [1] "application/json, text/xml, application/xml, */*"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $headers$`Accept-Encoding`</span><span class="w">
</span><span class="c1">#&gt; [1] "gzip"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $headers$Host</span><span class="w">
</span><span class="c1">#&gt; [1] "httpbin.org"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $headers$`User-Agent`</span><span class="w">
</span><span class="c1">#&gt; [1] "curl/7.37.1 Rcurl/1.95.4.5 httr/0.6.1"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $origin</span><span class="w">
</span><span class="c1">#&gt; [1] "24.21.209.71"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $url</span><span class="w">
</span><span class="c1">#&gt; [1] "http://httpbin.org/get"</span><span class="w">
</span></code></pre></div></div>

<p>You can buid up options by calling functions</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s2">"http://httpbin.org/get"</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">Progress</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">Verbose</span><span class="p">()</span><span class="w">
</span><span class="c1">#&gt; &lt;http request&gt; </span><span class="w">
</span><span class="c1">#&gt;   url: http://httpbin.org/get</span><span class="w">
</span><span class="c1">#&gt;   config: </span><span class="w">
</span><span class="c1">#&gt; Config: </span><span class="w">
</span><span class="c1">#&gt; List of 4</span><span class="w">
</span><span class="c1">#&gt;  $ noprogress      :FALSE</span><span class="w">
</span><span class="c1">#&gt;  $ progressfunction:function (...)  </span><span class="w">
</span><span class="c1">#&gt;  $ debugfunction   :function (...)  </span><span class="w">
</span><span class="c1">#&gt;  $ verbose         :TRUE</span><span class="w">
</span></code></pre></div></div>

<p>Then eventually execute the GET request</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s2">"http://httpbin.org/get"</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">Verbose</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">Progress</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">Get</span><span class="p">()</span><span class="w">
</span><span class="c1">#&gt; -&gt; GET /get HTTP/1.1</span><span class="w">
</span><span class="c1">#&gt; -&gt; User-Agent: curl/7.37.1 Rcurl/1.95.4.5 httr/0.6.1</span><span class="w">
</span><span class="c1">#&gt; -&gt; Host: httpbin.org</span><span class="w">
</span><span class="c1">#&gt; -&gt; Accept-Encoding: gzip</span><span class="w">
</span><span class="c1">#&gt; -&gt; Accept: application/json, text/xml, application/xml, */*</span><span class="w">
</span><span class="c1">#&gt; -&gt; </span><span class="w">
</span><span class="c1">#&gt; &lt;- HTTP/1.1 200 OK</span><span class="w">
</span><span class="c1">#&gt; &lt;- Server: nginx</span><span class="w">
</span><span class="c1">#&gt; &lt;- Date: Fri, 30 Jan 2015 17:38:58 GMT</span><span class="w">
</span><span class="c1">#&gt; &lt;- Content-Type: application/json</span><span class="w">
</span><span class="c1">#&gt; &lt;- Content-Length: 288</span><span class="w">
</span><span class="c1">#&gt; &lt;- Connection: keep-alive</span><span class="w">
</span><span class="c1">#&gt; &lt;- Access-Control-Allow-Origin: *</span><span class="w">
</span><span class="c1">#&gt; &lt;- Access-Control-Allow-Credentials: true</span><span class="w">
</span><span class="c1">#&gt; &lt;- </span><span class="w">
</span><span class="c1">#&gt;   |=======================================| 100%</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $args</span><span class="w">
</span><span class="c1">#&gt; named list()</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $headers</span><span class="w">
</span><span class="c1">#&gt; $headers$Accept</span><span class="w">
</span><span class="c1">#&gt; [1] "application/json, text/xml, application/xml, */*"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $headers$`Accept-Encoding`</span><span class="w">
</span><span class="c1">#&gt; [1] "gzip"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $headers$Host</span><span class="w">
</span><span class="c1">#&gt; [1] "httpbin.org"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $headers$`User-Agent`</span><span class="w">
</span><span class="c1">#&gt; [1] "curl/7.37.1 Rcurl/1.95.4.5 httr/0.6.1"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $origin</span><span class="w">
</span><span class="c1">#&gt; [1] "24.21.209.71"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $url</span><span class="w">
</span><span class="c1">#&gt; [1] "http://httpbin.org/get"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span></code></pre></div></div>
:ET