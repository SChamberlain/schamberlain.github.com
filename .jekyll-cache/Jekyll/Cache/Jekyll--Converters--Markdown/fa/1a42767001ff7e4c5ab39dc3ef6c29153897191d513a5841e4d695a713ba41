I"¦<p>At rOpenSci we occasssionally hear from our users that they run into an error like:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Error</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="k">function</span><span class="w"> </span><span class="p">(</span><span class="n">type</span><span class="p">,</span><span class="w"> </span><span class="n">msg</span><span class="p">,</span><span class="w"> </span><span class="n">asError</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">  </span><span class="o">:</span><span class="w"> 
  </span><span class="n">easy</span><span class="w"> </span><span class="n">handled</span><span class="w"> </span><span class="n">already</span><span class="w"> </span><span class="n">used</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">multi</span><span class="w"> </span><span class="n">handle</span><span class="w">
</span></code></pre></div></div>

<p>This error occurs in the <code class="highlighter-rouge">httr</code> package that we use to do http requests to sources of data on the web. It happens when e.g., you make a lot of requests to a resource, then it gets interrupted somehow - then you make another call, and you get the error above. Letâ€™s try it with the an version of <code class="highlighter-rouge">httr</code> (<code class="highlighter-rouge">v0.5</code>):</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="s2">"httr"</span><span class="p">)</span><span class="w">
</span><span class="c1"># run, then esc to cause multi handle error</span><span class="w">
</span><span class="n">replicate</span><span class="p">(</span><span class="m">50</span><span class="p">,</span><span class="w"> </span><span class="n">GET</span><span class="p">(</span><span class="s2">"http://google.com/"</span><span class="p">))</span><span class="w">
</span><span class="c1"># then retry single call, which trows multi handle error</span><span class="w">
</span><span class="n">GET</span><span class="p">(</span><span class="s2">"http://google.com/"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; Error in function (type, msg, asError = TRUE)  : </span><span class="w">
</span><span class="c1">#&gt;   easy handled already used in multi handle</span><span class="w">
</span></code></pre></div></div>

<p>There are any number of reasons why your session may get interrupted, including an internet outage, the web service you are requesesting data from times out, etc.  There hasnâ€™t been a straight-forward way to handle this, until recently.</p>

<p>In <code class="highlighter-rouge">httr</code> version <code class="highlighter-rouge">0.6</code>, there are two new functions <code class="highlighter-rouge">handle_find()</code> and <code class="highlighter-rouge">handle_reset()</code> to help deal with this error.</p>

<p>First, install newest httr from Github</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"devtools"</span><span class="p">)</span><span class="w">
</span><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"hadley/httr"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="s2">"httr"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Make a bunch of requests to google, interrupting part way through</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">replicate</span><span class="p">(</span><span class="m">50</span><span class="p">,</span><span class="w"> </span><span class="n">HEAD</span><span class="p">(</span><span class="s2">"http://google.com/"</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p>Then retry single call, which trows multi handle error</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">HEAD</span><span class="p">(</span><span class="s2">"http://google.com/"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; Error in function (type, msg, asError = TRUE)  : </span><span class="w">
</span><span class="c1">#&gt;   easy handled already used in multi handle</span><span class="w">
</span></code></pre></div></div>

<p>Find handle</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">handle_find</span><span class="p">(</span><span class="s2">"http://google.com/"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; Host: http://google.com/ &lt;0x10f3d1600&gt;</span><span class="w">
</span></code></pre></div></div>

<p>Reset handle</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">handle_reset</span><span class="p">(</span><span class="s2">"http://google.com/"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Try call again, this time it should work</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">HEAD</span><span class="p">(</span><span class="s2">"http://google.com/"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; Response [http://www.google.com/]</span><span class="w">
</span><span class="c1">#&gt;   Date: 2014-12-08 13:37</span><span class="w">
</span><span class="c1">#&gt;   Status: 200</span><span class="w">
</span><span class="c1">#&gt;   Content-Type: text/html; charset=ISO-8859-1</span><span class="w">
</span><span class="c1">#&gt; &lt;EMPTY BODY&gt;</span><span class="w">
</span></code></pre></div></div>

<h2 id="usage-in-ropensci-packages">Usage in ropensci packages</h2>

<p>We have more work to do yet to integrate this into our packages. Itâ€™s great you can reset a handle as above, but to reset the handle you need to search for the URL used in the request, which our users would have to dig into the code for the function they are using. That is easy-ish to do, but perhaps not everyone knows they can get to the code easily.  So, we may try seting a parameter in functions that would let reset the handle to clear this error.</p>

<h2 id="note">Note</h2>

<p>Note that Hadley is planning on eliminating <code class="highlighter-rouge">RCurl</code> dependency (https://github.com/hadley/httr/issues/172), so there may be a different solution in the future.</p>
:ET