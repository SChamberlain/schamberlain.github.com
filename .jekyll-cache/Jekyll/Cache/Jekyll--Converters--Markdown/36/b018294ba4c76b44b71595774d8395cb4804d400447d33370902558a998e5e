I"I<p>If you maintain an R package, or even use R packages, you may have looked at CRAN check results. These are essentially the results of running <code class="highlighter-rouge">R CMD CHECK</code> on a package. They do these for each package for each of a few different operating systems (debian, fedora, solaris, windows, osx) and different R versions (devel, release and patched).</p>

<ul>
  <li>src: <a href="https://github.com/ropensci/cchecksapi">https://github.com/ropensci/cchecksapi</a></li>
  <li>base api url: <a href="https://cranchecks.info">https://cranchecks.info</a></li>
</ul>

<p>CRAN maintainers look at these, and eventually will email maintainers if checks are bad enough.</p>

<p>Which brings us to the motivation for the API: it’d be nice to have a modern way (read: an API) to check CRAN check results.</p>

<p>The tech looks like so:</p>

<ul>
  <li>language: Ruby</li>
  <li>rest framework: Sinatra</li>
  <li>http requests for scraping: faraday</li>
  <li>database (storage): mongodb</li>
  <li>server: caddy</li>
  <li>scheduled scraping: cron (outside of docker)</li>
  <li>container: docker-compose</li>
</ul>

<p>The API originally just had rOpenSci pkgs, which is a small 150ish. But it was easy enough to scale it, so the API has all CRAN packages now.</p>

<p>The scraping step takes about 40 minutes and happens once a day. To clarify, results are up to date, so you can just use this API and not have to look up results on a cran mirror itself.</p>

<h2 id="api-routes">API routes</h2>

<p>Here’s the breakdown</p>

<ul>
  <li><code class="highlighter-rouge">/</code></li>
  <li><code class="highlighter-rouge">/heartbeat</code></li>
  <li><code class="highlighter-rouge">/docs</code></li>
  <li><code class="highlighter-rouge">/pkgs</code></li>
  <li><code class="highlighter-rouge">/pkgs/:pkg_name:</code></li>
</ul>

<h2 id="docs">/docs</h2>

<p>Brings you to the docs at <a href="https://github.com/ropensci/cchecksapi/blob/master/docs/api_docs.md">https://github.com/ropensci/cchecksapi/blob/master/docs/api_docs.md</a></p>

<h2 id="pkgs">/pkgs</h2>

<p>Get all packages, paginated 10 at a time by default.</p>

<p>for example:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl https://cranchecks.info/pkgs | jq .
</code></pre></div></div>

<p>Params:</p>

<ul>
  <li><code class="highlighter-rouge">limit</code> - number of records to return, default 10, max 1000</li>
  <li><code class="highlighter-rouge">offset</code> - record to start at, deafult 0</li>
</ul>

<h2 id="pkgspkg_name">/pkgs/:pkg_name</h2>

<p>Get a package by name.</p>

<p>for example:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl https://cranchecks.info/pkgs/crul | jq .
</code></pre></div></div>

<p>Output looks like:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"error"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
  </span><span class="nl">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sofa"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"package"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sofa"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"checks"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"Flavor"</span><span class="p">:</span><span class="w"> </span><span class="s2">"r-devel-linux-x86_64-debian-clang "</span><span class="p">,</span><span class="w">
        </span><span class="nl">"Version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.2.0 "</span><span class="p">,</span><span class="w">
        </span><span class="nl">"Tinstall"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1.01 "</span><span class="p">,</span><span class="w">
        </span><span class="nl">"Tcheck"</span><span class="p">:</span><span class="w"> </span><span class="s2">"18.27 "</span><span class="p">,</span><span class="w">
        </span><span class="nl">"Ttotal"</span><span class="p">:</span><span class="w"> </span><span class="s2">"19.28 "</span><span class="p">,</span><span class="w">
        </span><span class="nl">"Status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"OK"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"check_url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://www.R-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/sofa-00check.html"</span><span class="w">
      </span><span class="p">},</span><span class="w">
</span><span class="err">...</span><span class="w">
</span></code></pre></div></div>

<p>The full URL is given for the check results, so you can go to it and check results, e.g., the top of the one above:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>using R Under development (unstable) (2017-09-21 r73332)
using platform: x86_64-pc-linux-gnu (64-bit)
using session charset: UTF-8
checking for file ‘sofa/DESCRIPTION’ ... OK
this is package ‘sofa’ version ‘0.2.0’
checking package namespace information ... OK
checking package dependencies ... OK
checking if this is a source package ... OK
checking if there is a namespace ... OK
checking for executable files ... OK
checking for hidden files and directories ... OK
checking for portable file names ... OK
checking for sufficient/correct file permissions ... OK
checking whether package ‘sofa’ can be installed ... OK

...
</code></pre></div></div>

<h2 id="to-do">TO DO</h2>

<ul>
  <li>maybe caching for <code class="highlighter-rouge">/pkgs</code> route</li>
  <li>lowercase all keys just cause</li>
  <li>clean up api results: numerics should be actual numerics, make empty strings to <code class="highlighter-rouge">null</code>, maybe change a status of <code class="highlighter-rouge">OK</code> to <code class="highlighter-rouge">true</code> so its more JSONish</li>
</ul>
:ET