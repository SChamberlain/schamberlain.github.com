I"Ôi<p>Iâ€™ve reworked <code class="highlighter-rouge">sofa</code> recently after someone reported a bug in the package. Since the last post on this package on 2013-06-21, thereâ€™s a bunch of changes:</p>

<ul>
  <li>Removed the <code class="highlighter-rouge">sofa_</code> prefix from all functions as it wasnâ€™t really necessary.</li>
  <li>Replaced <code class="highlighter-rouge">rjson</code>/<code class="highlighter-rouge">RJSONIO</code> with <code class="highlighter-rouge">jsonlite</code> for JSON I/O.</li>
  <li>New functions:
    <ul>
      <li><code class="highlighter-rouge">revisions()</code> - to get the revision numbers for a document.</li>
      <li><code class="highlighter-rouge">uuids()</code> - get any number of UUIDs - e.g., if you want to set document IDs with UUIDs</li>
    </ul>
  </li>
  <li>Most functions that deal with documents are prefixed with <code class="highlighter-rouge">doc_</code></li>
  <li>Functions that deal with databases are prefixed with <code class="highlighter-rouge">db_</code></li>
  <li>Simplified all code, reducing duplication</li>
  <li>All functions take <code class="highlighter-rouge">cushion</code> as the first parameter, for consistency sake.</li>
  <li>Changed <code class="highlighter-rouge">cushion()</code> function so that you can only register one cushion with each function call, 
and the function takes parameters for each element now, <code class="highlighter-rouge">name</code> (name of the cushion, whatever you want), <code class="highlighter-rouge">user</code> (user name, if applicable), <code class="highlighter-rouge">pwd</code> (password, if applicable), <code class="highlighter-rouge">type</code> (one of localhost, cloudant, or iriscouch), and <code class="highlighter-rouge">port</code> (if applicable).</li>
  <li>Changed package license from <code class="highlighter-rouge">CC0</code> to <code class="highlighter-rouge">MIT</code></li>
</ul>

<p>Thereâ€™s still more to do, but Iâ€™m pretty happy with the recent changes, and I hope at least some find the package useful. Also, would love people to try it out as all bugs are shallow and all thatâ€¦</p>

<p>The following are a few examples of package use.</p>

<h2 id="install-couchdb">Install CouchDB</h2>

<p>Instructions <a href="http://wiki.apache.org/couchdb/Installation">here</a></p>

<h2 id="start-couchdb">Start CouchDB</h2>

<p>In your terminal</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>couchdb
</code></pre></div></div>

<p>You can interact with your CouchDB databases as well in your browser. Navigate to <a href="http://localhost:5984/_utils">http://localhost:5984/_utils</a></p>

<h2 id="install-sofa">Install sofa</h2>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"devtools"</span><span class="p">)</span><span class="w">
</span><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"sckott/sofa"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="s1">'sofa'</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="authenticate---cushions">Authenticate - Cushions</h2>

<p>As an example, hereâ€™s how I set up details for connecting to my Cloudant couch:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cushion</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'cloudant'</span><span class="p">,</span><span class="w"> </span><span class="n">user</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'&lt;user name&gt;'</span><span class="p">,</span><span class="w"> </span><span class="n">pwd</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'&lt;password&gt;'</span><span class="p">,</span><span class="w"> </span><span class="n">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"cloudant"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>By default there is a built-in <code class="highlighter-rouge">cushion</code> for localhost so you donâ€™t have to do that, unless you want to change those details, e.g., the port number. Right now cushions arenâ€™t preserved across R sessions, but working on that.</p>

<p>For example, Iâ€™ll lay down a cushion for Cloudant, then I can call <code class="highlighter-rouge">cushions()</code> to see my cushions:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cushion</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'cloudant'</span><span class="p">,</span><span class="w"> </span><span class="n">user</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'&lt;user name&gt;'</span><span class="p">,</span><span class="w"> </span><span class="n">pwd</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'&lt;pwd&gt;'</span><span class="p">,</span><span class="w"> </span><span class="n">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"cloudant"</span><span class="p">)</span><span class="w">
</span><span class="n">cushions</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p>By default, if you donâ€™t provide a cushion name, you are using localhost.</p>

<h2 id="ping-the-server">Ping the server</h2>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ping</span><span class="p">()</span><span class="w">
</span><span class="c1">#&gt; $couchdb</span><span class="w">
</span><span class="c1">#&gt; [1] "Welcome"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $uuid</span><span class="w">
</span><span class="c1">#&gt; [1] "2c10f0c6d9bd17205b692ae93cd4cf1d"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $version</span><span class="w">
</span><span class="c1">#&gt; [1] "1.6.0"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $vendor</span><span class="w">
</span><span class="c1">#&gt; $vendor$version</span><span class="w">
</span><span class="c1">#&gt; [1] "1.6.0-1"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $vendor$name</span><span class="w">
</span><span class="c1">#&gt; [1] "Homebrew"</span><span class="w">
</span></code></pre></div></div>

<p>Nice, itâ€™s working.</p>

<h2 id="create-a-new-database-and-list-available-databases">Create a new database, and list available databases</h2>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db_create</span><span class="p">(</span><span class="n">dbname</span><span class="o">=</span><span class="s1">'sofadb'</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; $ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span></code></pre></div></div>

<p>see if its there now</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db_list</span><span class="p">()</span><span class="w">
</span><span class="c1">#&gt;  [1] "_replicator" "_users"      "alm_couchdb" "cachecall"   "hello_earth"</span><span class="w">
</span><span class="c1">#&gt;  [6] "leothelion"  "mran"        "mydb"        "newdbs"      "sofadb"</span><span class="w">
</span></code></pre></div></div>

<h2 id="create-documents">Create documents</h2>

<p>Create a document WITH a name (uses PUT)</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">doc1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'{"name":"sofa","beer":"IPA"}'</span><span class="w">
</span><span class="n">doc_create</span><span class="p">(</span><span class="n">dbname</span><span class="o">=</span><span class="s2">"sofadb"</span><span class="p">,</span><span class="w"> </span><span class="n">doc</span><span class="o">=</span><span class="n">doc1</span><span class="p">,</span><span class="w"> </span><span class="n">docid</span><span class="o">=</span><span class="s2">"a_beer"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; $ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $id</span><span class="w">
</span><span class="c1">#&gt; [1] "a_beer"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-a48c98c945bcc05d482bc6f938c89882"</span><span class="w">
</span></code></pre></div></div>

<p>Create a document WITHOUT a name (uses POST)</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">doc2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'{"name":"sofa","icecream":"rocky road"}'</span><span class="w">
</span><span class="n">doc_create</span><span class="p">(</span><span class="n">dbname</span><span class="o">=</span><span class="s2">"sofadb"</span><span class="p">,</span><span class="w"> </span><span class="n">doc</span><span class="o">=</span><span class="n">doc2</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; $ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $id</span><span class="w">
</span><span class="c1">#&gt; [1] "c5c5c332c25cf62cc584647a81006f6d"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-fd0da7fcb8d3afbfc5757d065c92362c"</span><span class="w">
</span></code></pre></div></div>

<h2 id="list-documents">List documents</h2>

<p>List them</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">alldocs</span><span class="p">(</span><span class="n">dbname</span><span class="o">=</span><span class="s2">"sofadb"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt;                                 id                              key</span><span class="w">
</span><span class="c1">#&gt; 1                           a_beer                           a_beer</span><span class="w">
</span><span class="c1">#&gt; 2 c5c5c332c25cf62cc584647a81006f6d c5c5c332c25cf62cc584647a81006f6d</span><span class="w">
</span><span class="c1">#&gt;                                  rev</span><span class="w">
</span><span class="c1">#&gt; 1 1-a48c98c945bcc05d482bc6f938c89882</span><span class="w">
</span><span class="c1">#&gt; 2 1-fd0da7fcb8d3afbfc5757d065c92362c</span><span class="w">
</span></code></pre></div></div>

<p>Optionally include the documents, returned as a list by default as it would be hard to parse an endless number of document formats.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">alldocs</span><span class="p">(</span><span class="n">dbname</span><span class="o">=</span><span class="s2">"sofadb"</span><span class="p">,</span><span class="w"> </span><span class="n">include_docs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; $total_rows</span><span class="w">
</span><span class="c1">#&gt; [1] 2</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $offset</span><span class="w">
</span><span class="c1">#&gt; [1] 0</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows</span><span class="w">
</span><span class="c1">#&gt; $rows[[1]]</span><span class="w">
</span><span class="c1">#&gt; $rows[[1]]$id</span><span class="w">
</span><span class="c1">#&gt; [1] "a_beer"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows[[1]]$key</span><span class="w">
</span><span class="c1">#&gt; [1] "a_beer"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows[[1]]$value</span><span class="w">
</span><span class="c1">#&gt; $rows[[1]]$value$rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-a48c98c945bcc05d482bc6f938c89882"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows[[1]]$doc</span><span class="w">
</span><span class="c1">#&gt; $rows[[1]]$doc$`_id`</span><span class="w">
</span><span class="c1">#&gt; [1] "a_beer"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows[[1]]$doc$`_rev`</span><span class="w">
</span><span class="c1">#&gt; [1] "1-a48c98c945bcc05d482bc6f938c89882"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows[[1]]$doc$name</span><span class="w">
</span><span class="c1">#&gt; [1] "sofa"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows[[1]]$doc$beer</span><span class="w">
</span><span class="c1">#&gt; [1] "IPA"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows[[2]]</span><span class="w">
</span><span class="c1">#&gt; $rows[[2]]$id</span><span class="w">
</span><span class="c1">#&gt; [1] "c5c5c332c25cf62cc584647a81006f6d"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows[[2]]$key</span><span class="w">
</span><span class="c1">#&gt; [1] "c5c5c332c25cf62cc584647a81006f6d"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows[[2]]$value</span><span class="w">
</span><span class="c1">#&gt; $rows[[2]]$value$rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-fd0da7fcb8d3afbfc5757d065c92362c"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows[[2]]$doc</span><span class="w">
</span><span class="c1">#&gt; $rows[[2]]$doc$`_id`</span><span class="w">
</span><span class="c1">#&gt; [1] "c5c5c332c25cf62cc584647a81006f6d"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows[[2]]$doc$`_rev`</span><span class="w">
</span><span class="c1">#&gt; [1] "1-fd0da7fcb8d3afbfc5757d065c92362c"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows[[2]]$doc$name</span><span class="w">
</span><span class="c1">#&gt; [1] "sofa"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rows[[2]]$doc$icecream</span><span class="w">
</span><span class="c1">#&gt; [1] "rocky road"</span><span class="w">
</span></code></pre></div></div>

<h2 id="update-a-document">Update a document</h2>

<p>Change <em>IPA</em> (india pale ale) to <em>IPL</em> (india pale lager). We need to get revisions first as we need to include revision number when we update a document.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">revs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">revisions</span><span class="p">(</span><span class="n">dbname</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"sofadb"</span><span class="p">,</span><span class="w"> </span><span class="n">docid</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"a_beer"</span><span class="p">))</span><span class="w">
</span><span class="c1">#&gt; [1] "1-a48c98c945bcc05d482bc6f938c89882"</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">newdoc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'{"name":"sofa","beer":"IPL"}'</span><span class="w">
</span><span class="n">doc_update</span><span class="p">(</span><span class="n">dbname</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"sofadb"</span><span class="p">,</span><span class="w"> </span><span class="n">doc</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">newdoc</span><span class="p">,</span><span class="w"> </span><span class="n">docid</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"a_beer"</span><span class="p">,</span><span class="w"> </span><span class="n">rev</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">revs</span><span class="p">[</span><span class="m">1</span><span class="p">])</span><span class="w">
</span><span class="c1">#&gt; $ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $id</span><span class="w">
</span><span class="c1">#&gt; [1] "a_beer"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $rev</span><span class="w">
</span><span class="c1">#&gt; [1] "2-f2390eb18b8f9a870c915c6712a7f65e"</span><span class="w">
</span></code></pre></div></div>

<p>Should be two revisions now</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">revisions</span><span class="p">(</span><span class="n">dbname</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"sofadb"</span><span class="p">,</span><span class="w"> </span><span class="n">docid</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"a_beer"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; [1] "2-f2390eb18b8f9a870c915c6712a7f65e"</span><span class="w">
</span><span class="c1">#&gt; [2] "1-a48c98c945bcc05d482bc6f938c89882"</span><span class="w">
</span></code></pre></div></div>

<h2 id="get-headers-for-a-document">Get headers for a document</h2>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">doc_head</span><span class="p">(</span><span class="n">dbname</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"sofadb"</span><span class="p">,</span><span class="w"> </span><span class="n">docid</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"a_beer"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; [[1]]</span><span class="w">
</span><span class="c1">#&gt; [[1]]$status</span><span class="w">
</span><span class="c1">#&gt; [1] 200</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[1]]$version</span><span class="w">
</span><span class="c1">#&gt; [1] "HTTP/1.1"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[1]]$headers</span><span class="w">
</span><span class="c1">#&gt; $server</span><span class="w">
</span><span class="c1">#&gt; [1] "CouchDB/1.6.0 (Erlang OTP/17)"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $etag</span><span class="w">
</span><span class="c1">#&gt; [1] "\"2-f2390eb18b8f9a870c915c6712a7f65e\""</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $date</span><span class="w">
</span><span class="c1">#&gt; [1] "Tue, 18 Nov 2014 21:19:16 GMT"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $`content-type`</span><span class="w">
</span><span class="c1">#&gt; [1] "application/json"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $`content-length`</span><span class="w">
</span><span class="c1">#&gt; [1] "88"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $`cache-control`</span><span class="w">
</span><span class="c1">#&gt; [1] "must-revalidate"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; attr(,"class")</span><span class="w">
</span><span class="c1">#&gt; [1] "insensitive" "list"</span><span class="w">
</span></code></pre></div></div>

<h2 id="json-vs-list">JSON vs. list</h2>

<p>Across all/most functions you can request json or list as output with the <code class="highlighter-rouge">as</code> parameter.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db_list</span><span class="p">(</span><span class="n">as</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"list"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt;  [1] "_replicator" "_users"      "alm_couchdb" "cachecall"   "hello_earth"</span><span class="w">
</span><span class="c1">#&gt;  [6] "leothelion"  "mran"        "mydb"        "newdbs"      "sofadb"</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db_list</span><span class="p">(</span><span class="n">as</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"json"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; [1] "[\"_replicator\",\"_users\",\"alm_couchdb\",\"cachecall\",\"hello_earth\",\"leothelion\",\"mran\",\"mydb\",\"newdbs\",\"sofadb\"]\n"</span><span class="w">
</span></code></pre></div></div>

<h2 id="curl-options">Curl options</h2>

<p>Across all functions you can pass in curl options. Weâ€™re using <code class="highlighter-rouge">httr</code> internally, so you can use <code class="highlighter-rouge">httr</code> helper functions to make some curl options easier. Examples:</p>

<p>Verbose output</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="s2">"httr"</span><span class="p">)</span><span class="w">
</span><span class="n">db_list</span><span class="p">(</span><span class="n">config</span><span class="o">=</span><span class="n">verbose</span><span class="p">())</span><span class="w">
</span><span class="c1">#&gt;  [1] "_replicator" "_users"      "alm_couchdb" "cachecall"   "hello_earth"</span><span class="w">
</span><span class="c1">#&gt;  [6] "leothelion"  "mran"        "mydb"        "newdbs"      "sofadb"</span><span class="w">
</span></code></pre></div></div>

<p>Progress</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db_list</span><span class="p">(</span><span class="n">config</span><span class="o">=</span><span class="n">progress</span><span class="p">())</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
  </span><span class="o">|</span><span class="w">                                                                       
  </span><span class="o">|</span><span class="w">                                                                 </span><span class="o">|</span><span class="w">   </span><span class="m">0</span><span class="o">%
  |                                                                       
  |=================================================================| 100%</span><span class="w">
</span><span class="c1">#&gt;  [1] "_replicator" "_users"      "alm_couchdb" "cachecall"   "hello_earth"</span><span class="w">
</span><span class="c1">#&gt;  [6] "leothelion"  "mran"        "mydb"        "newdbs"      "sofadb"</span><span class="w">
</span></code></pre></div></div>

<p>Set a timeout</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db_list</span><span class="p">(</span><span class="n">config</span><span class="o">=</span><span class="n">timeout</span><span class="p">(</span><span class="n">seconds</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.001</span><span class="p">))</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; Error in function (type, msg, asError = TRUE)  : </span><span class="w">
</span><span class="c1">#&gt;    Operation timed out after 3 milliseconds with 0 out of -1 bytes received</span><span class="w">
</span></code></pre></div></div>

<h2 id="full-text-search">Full text search</h2>

<p>Iâ€™m working on an R client for Elaticsearch called <code class="highlighter-rouge">elastic</code> - find it at <a href="https://github.com/ropensci/elastic">https://github.com/ropensci/elastic</a></p>

<p>Thinking about where to include functions to allow <code class="highlighter-rouge">elastic</code> and <code class="highlighter-rouge">sofa</code> to work togetherâ€¦if you have any thoughts hit up the issues. Iâ€™ll probably include helper functions for CouchDB search in the <code class="highlighter-rouge">elastic</code> package, interfacing with the <a href="https://github.com/elasticsearch/elasticsearch-river-couchdb">CouchDB plugin for Elasticsearch</a>.</p>
:ET