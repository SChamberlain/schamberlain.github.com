I"³><p>It would be nice to easily push each row or column of a data.frame into CouchDB instead of having to prepare them yourself into JSON, then push in to couch. I recently added ability to push data.frameâ€™s into couch using the normal <code class="highlighter-rouge">PUT /{db}</code> method, and added support for the couch bulk API.</p>

<h2 id="install">Install</h2>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"devtools"</span><span class="p">)</span><span class="w">
</span><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"sckott/sofa"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="s2">"sofa"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="put-db">PUT /db</h2>

<p>You can write directly from a data.frame, either by rows or columns. First, rows:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#&gt; $ok
#&gt; [1] TRUE
</code></pre></div></div>

<p>Create a database</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db_create</span><span class="p">(</span><span class="n">dbname</span><span class="o">=</span><span class="s2">"mtcarsdb"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; $ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">out</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">doc_create</span><span class="p">(</span><span class="n">mtcars</span><span class="p">,</span><span class="w"> </span><span class="n">dbname</span><span class="o">=</span><span class="s2">"mtcarsdb"</span><span class="p">,</span><span class="w"> </span><span class="n">how</span><span class="o">=</span><span class="s2">"rows"</span><span class="p">)</span><span class="w">
</span><span class="n">out</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">2</span><span class="p">]</span><span class="w">
</span><span class="c1">#&gt; $`Mazda RX4`</span><span class="w">
</span><span class="c1">#&gt; $`Mazda RX4`$ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $`Mazda RX4`$id</span><span class="w">
</span><span class="c1">#&gt; [1] "0063109bfb1c15765854cbc9525c3a7a"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $`Mazda RX4`$rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-3946941c894a874697554e3e6d9bc176"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $`Mazda RX4 Wag`</span><span class="w">
</span><span class="c1">#&gt; $`Mazda RX4 Wag`$ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $`Mazda RX4 Wag`$id</span><span class="w">
</span><span class="c1">#&gt; [1] "0063109bfb1c15765854cbc9525c461d"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $`Mazda RX4 Wag`$rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-273ff17a938cb956cba21051ab428b95"</span><span class="w">
</span></code></pre></div></div>

<p>Then by columns</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">out</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">doc_create</span><span class="p">(</span><span class="n">mtcars</span><span class="p">,</span><span class="w"> </span><span class="n">dbname</span><span class="o">=</span><span class="s2">"mtcarsdb"</span><span class="p">,</span><span class="w"> </span><span class="n">how</span><span class="o">=</span><span class="s2">"columns"</span><span class="p">)</span><span class="w">
</span><span class="n">out</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">2</span><span class="p">]</span><span class="w">
</span><span class="c1">#&gt; $mpg</span><span class="w">
</span><span class="c1">#&gt; $mpg$ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $mpg$id</span><span class="w">
</span><span class="c1">#&gt; [1] "0063109bfb1c15765854cbc9525d4f1f"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $mpg$rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-4b83d0ef53a28849a872d47ad03fef9a"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $cyl</span><span class="w">
</span><span class="c1">#&gt; $cyl$ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $cyl$id</span><span class="w">
</span><span class="c1">#&gt; [1] "0063109bfb1c15765854cbc9525d57d3"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; $cyl$rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-c21bfa5425c67743f0826fd4b44b0dbf"</span><span class="w">
</span></code></pre></div></div>

<h2 id="bulk-api">Bulk API</h2>

<p>The bulk API will/should be faster for larger data.frames</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#&gt; $ok
#&gt; [1] TRUE
</code></pre></div></div>

<p>Weâ€™ll use part of the diamonds dataset</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="s2">"ggplot2"</span><span class="p">)</span><span class="w">
</span><span class="n">dat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">diamonds</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">20000</span><span class="p">,]</span><span class="w">
</span></code></pre></div></div>

<p>Create a database</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db_create</span><span class="p">(</span><span class="n">dbname</span><span class="o">=</span><span class="s2">"bulktest"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; $ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span></code></pre></div></div>

<p>Load by row (could instead do each column, see <code class="highlighter-rouge">how</code> parameter), printing the time it takes</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">system.time</span><span class="p">(</span><span class="n">out</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">bulk_create</span><span class="p">(</span><span class="n">dat</span><span class="p">,</span><span class="w"> </span><span class="n">dbname</span><span class="o">=</span><span class="s2">"bulktest"</span><span class="p">))</span><span class="w">
</span><span class="c1">#&gt;    user  system elapsed </span><span class="w">
</span><span class="c1">#&gt;  16.832   6.039  24.432</span><span class="w">
</span></code></pre></div></div>

<p>The returned data is the same as with <code class="highlighter-rouge">doc_create()</code></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">out</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">2</span><span class="p">]</span><span class="w">
</span><span class="c1">#&gt; [[1]]</span><span class="w">
</span><span class="c1">#&gt; [[1]]$ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[1]]$id</span><span class="w">
</span><span class="c1">#&gt; [1] "0063109bfb1c15765854cbc9525d8b8d"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[1]]$rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-f407fe4935af7fd17c101f13d3c81679"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[2]]</span><span class="w">
</span><span class="c1">#&gt; [[2]]$ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[2]]$id</span><span class="w">
</span><span class="c1">#&gt; [1] "0063109bfb1c15765854cbc9525d998b"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[2]]$rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-cf8b9a9dcdc026052a663d6fef8a36fe"</span><span class="w">
</span></code></pre></div></div>

<p>So thatâ€™s 20,000 rows in not that much time, not bad.</p>

<h3 id="not-dataframes">not dataframes</h3>

<p>You can also pass in lists or vectors of json as character strings, e.g.,</p>

<p><em>lists</em></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#&gt; $ok
#&gt; [1] TRUE
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">row.names</span><span class="p">(</span><span class="n">mtcars</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="kc">NULL</span><span class="w"> </span><span class="c1"># get rid of row.names</span><span class="w">
</span><span class="n">lst</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">parse_df</span><span class="p">(</span><span class="n">mtcars</span><span class="p">,</span><span class="w"> </span><span class="n">tojson</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span><span class="n">db_create</span><span class="p">(</span><span class="n">dbname</span><span class="o">=</span><span class="s2">"bulkfromlist"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; $ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="n">out</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">bulk_create</span><span class="p">(</span><span class="n">lst</span><span class="p">,</span><span class="w"> </span><span class="n">dbname</span><span class="o">=</span><span class="s2">"bulkfromlist"</span><span class="p">)</span><span class="w">
</span><span class="n">out</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">2</span><span class="p">]</span><span class="w">
</span><span class="c1">#&gt; [[1]]</span><span class="w">
</span><span class="c1">#&gt; [[1]]$ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[1]]$id</span><span class="w">
</span><span class="c1">#&gt; [1] "ba70c46d73707662b1e204a90fcd9bb8"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[1]]$rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-3946941c894a874697554e3e6d9bc176"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[2]]</span><span class="w">
</span><span class="c1">#&gt; [[2]]$ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[2]]$id</span><span class="w">
</span><span class="c1">#&gt; [1] "ba70c46d73707662b1e204a90fcda9f6"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[2]]$rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-273ff17a938cb956cba21051ab428b95"</span><span class="w">
</span></code></pre></div></div>

<p><em>json</em></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#&gt; $ok
#&gt; [1] TRUE
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">strs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">parse_df</span><span class="p">(</span><span class="n">mtcars</span><span class="p">,</span><span class="w"> </span><span class="s2">"columns"</span><span class="p">))</span><span class="w">
</span><span class="n">db_create</span><span class="p">(</span><span class="n">dbname</span><span class="o">=</span><span class="s2">"bulkfromchr"</span><span class="p">)</span><span class="w">
</span><span class="c1">#&gt; $ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="n">out</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">bulk_create</span><span class="p">(</span><span class="n">strs</span><span class="p">,</span><span class="w"> </span><span class="n">dbname</span><span class="o">=</span><span class="s2">"bulkfromchr"</span><span class="p">)</span><span class="w">
</span><span class="n">out</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">2</span><span class="p">]</span><span class="w">
</span><span class="c1">#&gt; [[1]]</span><span class="w">
</span><span class="c1">#&gt; [[1]]$ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[1]]$id</span><span class="w">
</span><span class="c1">#&gt; [1] "ba70c46d73707662b1e204a90fce8c20"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[1]]$rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-4b83d0ef53a28849a872d47ad03fef9a"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[2]]</span><span class="w">
</span><span class="c1">#&gt; [[2]]$ok</span><span class="w">
</span><span class="c1">#&gt; [1] TRUE</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[2]]$id</span><span class="w">
</span><span class="c1">#&gt; [1] "ba70c46d73707662b1e204a90fce9bc1"</span><span class="w">
</span><span class="c1">#&gt; </span><span class="w">
</span><span class="c1">#&gt; [[2]]$rev</span><span class="w">
</span><span class="c1">#&gt; [1] "1-c21bfa5425c67743f0826fd4b44b0dbf"</span><span class="w">
</span></code></pre></div></div>
:ET