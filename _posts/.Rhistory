theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()),
labs(x = "", y = ""))
}
ggplot(idf, aes(phydist, netdist)) +
splevel_theme()
splevel_theme <- function(){
list(geom_smooth(aes(group=site), method="lm", se=FALSE, colour="black"),
theme_bw(base_size=16),
scale_x_continuous(limit=c(0,750)),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()),
labs(x = "", y = "")
)
}
ggplot(idf, aes(phydist, netdist)) +
splevel_theme()
splevel_theme <- function(){
list(geom_smooth(aes(phydist, netdist, group=site), method="lm", se=FALSE, colour="black"),
theme_bw(base_size=16),
scale_x_continuous(limit=c(0,750)),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()),
labs(x = "", y = "")
)
}
ggplot(idf) +
splevel_theme() +
labs(x = "Phylogenetic distance", y = "Int. asymmetry distance")
splevel_theme <- function(){
list(geom_smooth(aes(group=site), method="lm", se=FALSE, colour="black"),
theme_bw(base_size=16),
scale_x_continuous(limit=c(0,750)),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()),
labs(x = "", y = "")
)
}
names(phys_plant_phydists)
length(phys_plant_phydists)
length(dist_ia_plant)
ia_p <- mlply(cbind(phys_plant_phydists[1:52], dist_ia_plant[1:52], names(phys_plant_phydists)), getplotdfs)
ia_p
ia_p <- mlply(cbind(phys_plant_phydists[1:52], dist_ia_plant[1:52], names(phys_plant_phydists)), getplotdfs)
ia_pdf <- ldply(ia_p)
d_p <- mlply(cbind(phys_plant_phydists[1:52], dist_d_plant[1:52], names(phys_poll_phydists)), getplotdfs)
d_p <- d_p[!sapply(d_p, nrow)==0]
d_pdf <- ldply(d_p)
deg_p <- mlply(cbind(phys_plant_phydists[1:52], dist_deg_plant[1:52], names(phys_poll_phydists)), getplotdfs)
deg_p <- deg_p[!sapply(deg_p, nrow)==0]
deg_pdf <- ldply(deg_p)
a <- ggplot(idf, aes(phydist, netdist)) +
splevel_theme() +
labs(x = "Phylogenetic distance", y = "Int. asymmetry distance")
b <- ggplot(ddf, aes(phydist, netdist)) +
splevel_theme() +
labs(x = "Phylogenetic distance", y = "Specialisation (d) distance")
c <- ggplot(degdf, aes(phydist, netdist)) +
splevel_theme() +
labs(x = "Phylogenetic distance", y = "Degree distance")
d <- ggplot(idf_p, aes(traitdist, netdist)) +
splevel_theme()
e <- ggplot(ddf_p, aes(traitdist, netdist)) +
splevel_theme()
f <- ggplot(degdf_p, aes(traitdist, netdist)) +
splevel_theme()
d <- ggplot(ia_pdf, aes(traitdist, netdist)) +
splevel_theme()
e <- ggplot(d_pdf, aes(traitdist, netdist)) +
splevel_theme()
f <- ggplot(deg_pdf, aes(traitdist, netdist)) +
splevel_theme()
grid.newpage()
pushViewport(viewport(layout = grid.layout(3,2)))
vplayout <- function(x, y)
viewport(layout.pos.row = x, layout.pos.col = y)
print(a, vp = vplayout(1, 1))
print(b, vp = vplayout(2, 1))
print(c, vp = vplayout(3, 1))
print(d, vp = vplayout(1, 2))
print(e, vp = vplayout(2, 2))
print(f, vp = vplayout(3, 2))
splevel_theme <- function(){
list(geom_smooth(aes(phydist, netdist, group=site), method="lm", se=FALSE, colour="black"),
theme_bw(base_size=16),
scale_x_continuous(limit=c(0,750)),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()),
labs(x = "", y = "")
)
}
a <- ggplot(idf) + splevel_theme() +
labs(x = "Phylogenetic distance", y = "Int. asymmetry distance")
b <- ggplot(ddf) + splevel_theme() +
labs(x = "Phylogenetic distance", y = "Specialisation (d) distance")
c <- ggplot(degdf) +
splevel_theme() +
labs(x = "Phylogenetic distance", y = "Degree distance")
d <- ggplot(ia_pdf) + splevel_theme()
e <- ggplot(d_pdf) + splevel_theme()
f <- ggplot(deg_pdf) + splevel_theme()
grid.newpage()
pushViewport(viewport(layout = grid.layout(3,2)))
vplayout <- function(x, y)
viewport(layout.pos.row = x, layout.pos.col = y)
print(a, vp = vplayout(1, 1))
print(b, vp = vplayout(2, 1))
print(c, vp = vplayout(3, 1))
print(d, vp = vplayout(1, 2))
print(e, vp = vplayout(2, 2))
print(f, vp = vplayout(3, 2))
a <- ggplot(idf) + splevel_theme() +
labs(x = "", y = "Int. asymmetry distance")
b <- ggplot(ddf) + splevel_theme() +
labs(x = "", y = "Specialisation (d) distance")
c <- ggplot(degdf) +
splevel_theme() +
labs(x = "", y = "Degree distance")
grid.newpage()
pushViewport(viewport(layout = grid.layout(3,2)))
vplayout <- function(x, y)
viewport(layout.pos.row = x, layout.pos.col = y)
print(a, vp = vplayout(1, 1))
print(b, vp = vplayout(2, 1))
print(c, vp = vplayout(3, 1))
print(d, vp = vplayout(1, 2))
print(e, vp = vplayout(2, 2))
print(f, vp = vplayout(3, 2))
grid.text("Phylogenetic distance", x = 0.5, y = 0.98)
grid.text("Phylogenetic distance", x = 0.5, y = 0.02)
grid.text("Pollinators", x = 0.3, y = 0.98)
grid.text("Plants", x = 0.65, y = 0.98)
grid.text("Plants", x = 0.75, y = 0.98)
grid.text("Pollinators", x = 0.26, y = 0.98)
setwd("/Users/scottmac2/Dropbox/CANPOLIN_networks_ms/data_analyses/networks_trees/")
pdf("splevel_plot.pdf", width = 6, height = 8)
grid.newpage()
pushViewport(viewport(layout = grid.layout(3,2)))
vplayout <- function(x, y)
viewport(layout.pos.row = x, layout.pos.col = y)
print(a, vp = vplayout(1, 1))
print(b, vp = vplayout(2, 1))
print(c, vp = vplayout(3, 1))
print(d, vp = vplayout(1, 2))
print(e, vp = vplayout(2, 2))
print(f, vp = vplayout(3, 2))
grid.text("Phylogenetic distance", x = 0.5, y = 0.02)
grid.text("Pollinators", x = 0.26, y = 0.98)
grid.text("Plants", x = 0.78, y = 0.98)
dev.off()
splevel_theme <- function(){
list(geom_smooth(aes(phydist, netdist, group=site), method="lm", se=FALSE, colour="black"),
theme_bw(base_size=12),
scale_x_continuous(limit=c(0,750)),
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()),
labs(x = "", y = "")
)
}
a <- ggplot(idf) + splevel_theme() +
labs(x = "", y = "Int. asymmetry distance")
b <- ggplot(ddf) + splevel_theme() +
labs(x = "", y = "Specialisation (d) distance")
c <- ggplot(degdf) +
splevel_theme() +
labs(x = "", y = "Degree distance")
d <- ggplot(ia_pdf) + splevel_theme()
e <- ggplot(d_pdf) + splevel_theme()
f <- ggplot(deg_pdf) + splevel_theme()
setwd("/Users/scottmac2/Dropbox/CANPOLIN_networks_ms/data_analyses/networks_trees/")
pdf("splevel_plot.pdf", width = 6, height = 8)
grid.newpage()
pushViewport(viewport(layout = grid.layout(3,2)))
vplayout <- function(x, y)
viewport(layout.pos.row = x, layout.pos.col = y)
print(a, vp = vplayout(1, 1))
print(b, vp = vplayout(2, 1))
print(c, vp = vplayout(3, 1))
print(d, vp = vplayout(1, 2))
print(e, vp = vplayout(2, 2))
print(f, vp = vplayout(3, 2))
grid.text("Phylogenetic distance", x = 0.5, y = 0.02)
grid.text("Pollinators", x = 0.26, y = 0.98)
grid.text("Plants", x = 0.78, y = 0.98)
dev.off()
head(idf)
ggplot(idf[idf$site %in% c("site1","site2","site3","site4","site6"),]) + splevel_theme() +
labs(x = "", y = "Int. asymmetry distance")
ggplot(ddf[ddf$site %in% c("K_G","L_P"),]) + splevel_theme() +
labs(x = "", y = "Specialisation (d) distance")
ggplot(degdf[degdf$site %in% c("K_G","L_P")]) +
splevel_theme() +
labs(x = "", y = "Degree distance")
ggplot(degdf[degdf$site %in% c("K_G","L_P"),]) +
splevel_theme() +
labs(x = "", y = "Degree distance")
ggplot(ia_pdf[ia_pdf$site %in% c("D_P","site1","site2","site3","site4"), ]) + splevel_theme()
dd=ia_pdf[ia_pdf$site %in% c("D_P","site1","site2","site3","site4"), ]
dd=ia_pdf[ia_pdf$site %in% c("D_P"), ]
dd
cor.test(dd$phydist, dd$netdist)
?mantel
mantel(phys_plant_phydists[["D_P"]], dist_ia_plant[["D_P"]], permutations=100)
mantel
plot(phys_plant_phydists[["D_P"]], dist_ia_plant[["D_P"]])
sapply(list(phys_plant_phydists[["D_P"]], dist_ia_plant[["D_P"]]), function(x) dim(as.matrix(x)))
as.vector(phys_plant_phydists[["D_P"]])
as.vector(dist_ia_plant[["D_P"]])
data.frame(as.vector(phys_plant_phydists[["D_P"]]), as.vector(dist_ia_plant[["D_P"]]))
data.frame(as.vector(lower.tri(phys_plant_phydists[["D_P"]])), as.vector(dist_ia_plant[["D_P"]]))
lower.tri(as.vector(phys_plant_phydists[["D_P"]]))
phys_plant_phydists[["D_P"]]
as.vector(as.dist(phys_plant_phydists[["D_P"]]))
data.frame(as.vector(as.dist(phys_plant_phydists[["D_P"]])), as.vector(dist_ia_plant[["D_P"]]))
vv=data.frame(as.vector(as.dist(phys_plant_phydists[["D_P"]])), as.vector(dist_ia_plant[["D_P"]]))
vv=data.frame(a=as.vector(as.dist(phys_plant_phydists[["D_P"]])), b=as.vector(dist_ia_plant[["D_P"]]))
cor.test(vv$a,vv$b)
x=phys_plant_phydists[["D_P"]]
x <- as.dist(x)
x
xx <- as.vector(x)
x <- as.dist(x)
xx <- as.vector(x)
xx
x=phys_plant_phydists[["D_P"]]
names_ <- dimnames(x)
names_
x
expand.grid(x)
expand.grid(lower.tri(x))
x[expand.grid(lower.tri(x))]
?as.dist
x
as.dist(x)
as.vector(as.dist(x))
x
x[sort(dimnames(as.matrix(x))[[1]]),]
x[sort(dimnames(as.matrix(x))[[1]]),sort(dimnames(as.matrix(x))[[1]])]
x <- x[sort(dimnames(as.matrix(x))[[1]]),sort(dimnames(as.matrix(x))[[1]])]
as.vector(as.dist(x))
?sample2matrix
x
as.data.frame(x)
as.vector(as.dist(x))
x
dimnames(x)
expand.grid(dimnames(x))
expand.grid(lower.tri(x))
x[expand.grid(lower.tri(x))]
names_ <- expand.grid(dimnames(x))
names_[expand.grid(lower.tri(x))]
names_
names_[expand.grid(lower.tri(x)),]
cbind(expand.grid(dimnames(x)), expand.grid(lower.tri(x)))
names_ <- cbind(expand.grid(dimnames(x)), expand.grid(lower.tri(x)))
names_[names_$Var1==TRUE,]
names_[names_$Var1=="TRUE",]
names_ <- cbind(expand.grid(dimnames(x)), expand.grid(lower.tri(x)))
names_[names_$Var1=="TRUE",]
names_ <- cbind(expand.grid(dimnames(x)), tf=expand.grid(lower.tri(x)))
head)names_
head(names_)
names_[names_[,3] == TRUE,]
names_[names_[,3] == TRUE,-3]
xx <- as.vector(as.dist(x))
data.frame(names_[names_[,3] == TRUE,-3], xx)
getdistframe <- function(x, distname) {
if(sum(dim(as.matrix(x)))==0){
df <- data.frame("dropme","dropme",999)
names(df) <- c("sp1","sp2",distname)
return( df )
} else
{
x <- x[sort(dimnames(as.matrix(x))[[1]]),sort(dimnames(as.matrix(x))[[1]])]
xx <- as.vector(as.dist(x))
names_ <- cbind(expand.grid(dimnames(x)), expand.grid(lower.tri(x)))
tempout <- data.frame(names_[names_[,3] == TRUE,-3], xx)
# 		x <- as.matrix(x)
# 		x <- x[sort(dimnames(as.matrix(x))[[1]]),]
# 		x <- as.dist(x)
#
# 		temp <- data.frame(subset(data.frame(expand.grid(dimnames(as.matrix(x))),
# 			 expand.grid(lower.tri(as.matrix(x)))), Var1.1 == "TRUE")[,-3], as.vector(as.dist(x)))
#
# 		# rename columns
# 		names(temp) <- c("sp1","sp2",distname)
#
# 		# remove site to same site comparisons
# 		tempout <- temp[!temp[,1] == temp[,2], ]
return(tempout)
}
}
getdistframe(x=dist_d_poll[[18]], distname="netdist")
getdistframe(x=phys_poll_phydists[["site1"]], distname="phydist")
getplotdfs(phys_poll_phydists[[18]], dist_d_poll[[18]], "site1")
getdistframe(x=phys_poll_phydists[["site1"]], distname="phydist")
getdistframe <- function(x, distname) {
if(sum(dim(as.matrix(x)))==0){
df <- data.frame("dropme","dropme",999)
names(df) <- c("sp1","sp2",distname)
return( df )
} else
{
x <- x[sort(dimnames(as.matrix(x))[[1]]),sort(dimnames(as.matrix(x))[[1]])]
xx <- as.vector(as.dist(x))
names_ <- cbind(expand.grid(dimnames(x)), expand.grid(lower.tri(x)))
tempout <- data.frame(names_[names_[,3] == TRUE,-3], xx)
# rename columns
names(tempout) <- c("sp1","sp2",distname)
# remove site to same site comparisons
tempout <- tempout[!tempout[,1] == tempout[,2], ]
# 		x <- as.matrix(x)
# 		x <- x[sort(dimnames(as.matrix(x))[[1]]),]
# 		x <- as.dist(x)
#
# 		temp <- data.frame(subset(data.frame(expand.grid(dimnames(as.matrix(x))),
# 			 expand.grid(lower.tri(as.matrix(x)))), Var1.1 == "TRUE")[,-3], as.vector(as.dist(x)))
#
# 		# rename columns
# 		names(temp) <- c("sp1","sp2",distname)
#
# 		# remove site to same site comparisons
# 		tempout <- temp[!temp[,1] == temp[,2], ]
return(tempout)
}
}
getdistframe(x=phys_poll_phydists[["site1"]], distname="phydist")
getplotdfs(phys_poll_phydists[[18]], dist_d_poll[[18]], "site1")
getdistframe(x=phys_poll_phydists[["site1"]], distname="phydist")
getdistframe(x=dist_ia_poll[["site1"]], distname="netdist")
x=dist_ia_poll[["site1"]]
x
sum(dim(as.matrix(x)))
x[sort(dimnames(as.matrix(x))[[1]]),sort(dimnames(as.matrix(x))[[1]])]
dimnames(as.matrix(x))[[1]]
sort(dimnames(as.matrix(x))[[1]])
as.matrix(x)[sort(dimnames(as.matrix(x))[[1]]),sort(dimnames(as.matrix(x))[[1]])]
x <- as.dist(as.matrix(x)[sort(dimnames(as.matrix(x))[[1]]),sort(dimnames(as.matrix(x))[[1]])])
x
as.vector(as.dist(x))
x=phys_poll_phydists[["D_P"]]
sum(dim(as.matrix(x)))
as.dist(as.matrix(x)[sort(dimnames(as.matrix(x))[[1]]),sort(dimnames(as.matrix(x))[[1]])])
x
x <- as.dist(as.matrix(x)[sort(dimnames(as.matrix(x))[[1]]),sort(dimnames(as.matrix(x))[[1]])])
x
as.vector(as.dist(x))
xx <- as.vector(as.dist(x))
cbind(expand.grid(dimnames(x)), expand.grid(lower.tri(x)))
expand.grid(lower.tri(x))
x
cbind(expand.grid(dimnames(as.matrix(x))), expand.grid(lower.tri(x)))
names_ <- cbind(expand.grid(dimnames(as.matrix(x))), expand.grid(lower.tri(x)))
tempout <- data.frame(names_[names_[,3] == TRUE,-3], xx)
tempout
names(tempout) <- c("sp1","sp2",distname)
tempout <- tempout[!tempout[,1] == tempout[,2], ]
tempout
getdistframe <- function(x, distname) {
if(sum(dim(as.matrix(x)))==0){
df <- data.frame("dropme","dropme",999)
names(df) <- c("sp1","sp2",distname)
return( df )
} else
{
x <- as.dist(as.matrix(x)[sort(dimnames(as.matrix(x))[[1]]),sort(dimnames(as.matrix(x))[[1]])])
xx <- as.vector(as.dist(x))
names_ <- cbind(expand.grid(dimnames(as.matrix(x))), expand.grid(lower.tri(x)))
tempout <- data.frame(names_[names_[,3] == TRUE,-3], xx)
# rename columns
names(tempout) <- c("sp1","sp2",distname)
# remove site to same site comparisons
tempout <- tempout[!tempout[,1] == tempout[,2], ]
# 		x <- as.matrix(x)
# 		x <- x[sort(dimnames(as.matrix(x))[[1]]),]
# 		x <- as.dist(x)
#
# 		temp <- data.frame(subset(data.frame(expand.grid(dimnames(as.matrix(x))),
# 			 expand.grid(lower.tri(as.matrix(x)))), Var1.1 == "TRUE")[,-3], as.vector(as.dist(x)))
#
# 		# rename columns
# 		names(temp) <- c("sp1","sp2",distname)
#
# 		# remove site to same site comparisons
# 		tempout <- temp[!temp[,1] == temp[,2], ]
return(tempout)
}
}
getdistframe(x=phys_poll_phydists[["D_P"]], distname="phydist")
getdistframe(x=phys_poll_phydists[["site1"]], distname="phydist")
phydf <- getdistframe(x=phys_poll_phydists[["D_P"]], distname="phydist")
netdf <- getdistframe(x=dist_ia_poll[["D_P"]], distname="netdist")
netdf
phydf
getplotdfs(phys_poll_phydists[["D_P"]], dist_ia_poll[["D_P"]], "D_P")
deg <- mlply(cbind(phys_poll_phydists[1:52], dist_deg_poll[1:52], names(phys_poll_phydists)), getplotdfs)
deg <- deg[!sapply(deg, nrow)==0]
degdf <- ldply(deg)
ia <- mlply(cbind(phys_poll_phydists[1:52], dist_ia_poll[1:52], names(phys_poll_phydists)), getplotdfs)
ia <- ia[!sapply(ia, nrow)==0]
idf <- ldply(ia)
d <- mlply(cbind(phys_poll_phydists[1:52], dist_d_poll[1:52], names(phys_poll_phydists)), getplotdfs)
d <- d[!sapply(d, nrow)==0]
ddf <- ldply(d)
deg <- mlply(cbind(phys_poll_phydists[1:52], dist_deg_poll[1:52], names(phys_poll_phydists)), getplotdfs)
deg <- deg[!sapply(deg, nrow)==0]
degdf <- ldply(deg)
ia_p <- mlply(cbind(phys_plant_phydists[1:52], dist_ia_plant[1:52], names(phys_plant_phydists)), getplotdfs)
ia_pdf <- ldply(ia_p)
d_p <- mlply(cbind(phys_plant_phydists[1:52], dist_d_plant[1:52], names(phys_poll_phydists)), getplotdfs)
d_p <- d_p[!sapply(d_p, nrow)==0]
d_pdf <- ldply(d_p)
deg_p <- mlply(cbind(phys_plant_phydists[1:52], dist_deg_plant[1:52], names(phys_poll_phydists)), getplotdfs)
deg_p <- deg_p[!sapply(deg_p, nrow)==0]
deg_pdf <- ldply(deg_p)
ggplot(idf[idf$site %in% c("site1","site2","site3","site4","site6"),]) + splevel_theme() +
labs(x = "", y = "Int. asymmetry distance")
ggplot(ddf[ddf$site %in% c("K_G","L_P"),]) + splevel_theme() +
labs(x = "", y = "Specialisation (d) distance")
ggplot(degdf[degdf$site %in% c("K_G","L_P"),]) +
splevel_theme() +
labs(x = "", y = "Degree distance")
ggplot(ia_pdf[ia_pdf$site %in% c("D_P","site1","site2","site3","site4"), ]) + splevel_theme()
bb=ia_pdf[ia_pdf$site %in% "D_P", ]
bb
cor.test(bb$phydist,bb$netdist)
phys_plant_phydists[["D-P"]]
phys_plant_phydists[["D_P"]]
nrow(bb)
lower.tri(phys_plant_phydists[["D_P"]])
phys_plant_phydists[["D_P"]][lower.tri(phys_plant_phydists[["D_P"]])]
x=phys_poll_phydists[["D_P"]]
distname="phydist"
sum(dim(as.matrix(x)))
as.dist(as.matrix(x)[sort(dimnames(as.matrix(x))[[1]]),sort(dimnames(as.matrix(x))[[1]])])
x <- as.dist(as.matrix(x)[sort(dimnames(as.matrix(x))[[1]]),sort(dimnames(as.matrix(x))[[1]])])
xx <- as.vector(as.dist(x))
xx
cbind(expand.grid(dimnames(as.matrix(x))), expand.grid(lower.tri(x)))
names_[names_[,3] == TRUE,-3]
data.frame(names_[names_[,3] == TRUE,-3], xx)
tempout <- data.frame(names_[names_[,3] == TRUE,-3], xx)
names(tempout) <- c("sp1","sp2",distname)
tempout <- tempout[!tempout[,1] == tempout[,2], ]
tempout
y=dist_d_poll[["D_P"]]
x=phys_poll_phydists[["D_P"]]
sitename="site1"
x_out <- getdistframe(x, distname="phydist")
y_out <- getdistframe(y, distname="netdist")
x_out
y_out
merge(x_out, y_out, by=c("sp1","sp2"))
y
xy_out <- merge(x_out, y_out, by=c("sp1","sp2"))
rep(sitename, nrow(xy_out))
xy_out$site <- rep(sitename, nrow(xy_out))
xy_out
getplotdfs(x=phys_poll_phydists[["D_P"]], y=dist_d_poll[["D_P"]], sitename="site1")
getplotdfs(x=phys_poll_phydists[["D_P"]], y=dist_ia_poll[["D_P"]], sitename="site1")
ia_pdf[ia_pdf$site %in% "D_P", ]
getplotdfs(x=phys_plant_phydists[["D_P"]], y=dist_ia_plant[["D_P"]], sitename="site1")
getplotdfs(x=phys_plant_phydists[["D_P"]], y=dist_ia_plant[["D_P"]], sitename="D_P")
x=phys_plant_phydists[["D_P"]]
y=dist_ia_plant[["D_P"]]
sitename="D_P"
x_out <- getdistframe(x, distname="phydist")
y_out <- getdistframe(y, distname="netdist")
x_out
y_out
y
lower.tri(as.matrix(y))
y[lower.tri(as.matrix(y))]
y[lower.tri(as.matrix(y)),]
merge(x_out, y_out, by=c("sp1","sp2"))
xy_out$site <- rep(sitename, nrow(xy_out))
xy_out
xy_out <- merge(x_out, y_out, by=c("sp1","sp2"))
xy_out$site <- rep(sitename, nrow(xy_out))
xy_out
getplotdfs <- function(x, y, sitename) {
x_out <- getdistframe(x, distname="phydist")
y_out <- getdistframe(y, distname="netdist")
xy_out <- merge(x_out, y_out, by=c("sp1","sp2"))
xy_out$site <- rep(sitename, nrow(xy_out))
return(xy_out)
}
domantel(phys_plant_phydists[["D_P"]], dist_ia_plant[["D_P"]], 100)
x=phys_plant_phydists[["D_P"]]; y=dist_ia_plant[["D_P"]]
sum(dim(as.matrix(x)))==0 | sum(dim(as.matrix(y)))==0
all(dimnames(x)[[2]] %in% dimnames(as.matrix(y))[[2]])
dimnames(x)[[2]] %in% dimnames(as.matrix(y))[[2]]
dimnames(x)[[2]]
dimnames(as.matrix(y))[[2]]
permutations=100
mantel(x, y, method="pearson", permutations=permutations)
citation(package=ape)
citation(package="ape")
citation(package="cluster")
citation(package="bipartite")
setwd("~/github/sac/schamberlain.github.com")
knitpost("/Users/scottmac2/github/sac/schamberlain.github.com/_drafts/2013-02-22-academia-reboot")
knitpost
knitpost("/Users/scottmac2/github/sac/schamberlain.github.com/_drafts/2013-02-22-academia-reboot.Rmd")
library(knitcitations)
library(knitcitations)
knitpost("/Users/scottmac2/github/sac/schamberlain.github.com/_drafts/2013-02-22-academia-reboot.Rmd")
knitpost("/Users/scottmac2/github/sac/schamberlain.github.com/_drafts/2013-02-22-academia-reboot.Rmd")
setwd("~/github/sac/schamberlain.github.com/_posts")
knitpost("/Users/scottmac2/github/sac/schamberlain.github.com/_drafts/2013-02-22-academia-reboot.Rmd")
knitpost("/Users/scottmac2/github/sac/schamberlain.github.com/_drafts/2013-02-22-academia-reboot.Rmd")
knitpost("/Users/scottmac2/github/sac/schamberlain.github.com/_drafts/2013-02-22-academia-reboot.Rmd")
knitpost("/Users/scottmac2/github/sac/schamberlain.github.com/_drafts/2013-02-22-academia-reboot.Rmd")
knitpost("/Users/scottmac2/github/sac/schamberlain.github.com/_drafts/2013-02-22-academia-reboot.Rmd")
knitpost("/Users/scottmac2/github/sac/schamberlain.github.com/_drafts/2013-02-22-academia-reboot.Rmd")
knitpost("/Users/scottmac2/github/sac/schamberlain.github.com/_drafts/2013-02-22-academia-reboot.Rmd")
knitpost("/Users/scottmac2/github/sac/schamberlain.github.com/_drafts/2013-02-22-academia-reboot.Rmd")
knitpost("/Users/scottmac2/github/sac/schamberlain.github.com/_drafts/2013-02-22-academia-reboot.Rmd")
