<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
	<channel>
		<title> - R</title>
		<description>Posts tagged as 'R'</description>
		<link>http://recology.info/</link>
		
			<item>
				<title>Fun with the GitHub API</title>
				<description>&lt;p&gt;Recently I&#39;ve had fun playing with the GitHub API, and here are some notes to self about this fun having.&lt;/p&gt;

&lt;h2&gt;Setup&lt;/h2&gt;

&lt;p&gt;Get/load packages&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;install.packages(c(&#39;devtools&#39;,&#39;jsonlite&#39;,&#39;httr&#39;,&#39;yaml&#39;))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;library(&quot;devtools&quot;)
library(&quot;httr&quot;)
library(&quot;yaml&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Define a vector of package names&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;pkgs &amp;lt;- c(&quot;alm&quot;, &quot;bmc&quot;, &quot;bold&quot;, &quot;clifro&quot;, &quot;ecoengine&quot;,
  &quot;elastic&quot;, &quot;fulltext&quot;, &quot;geonames&quot;, &quot;gistr&quot;,
  &quot;RNeXML&quot;, &quot;rnoaa&quot;, &quot;rnpn&quot;, &quot;traits&quot;, &quot;rplos&quot;, &quot;rsnps&quot;,
  &quot;rWBclimate&quot;, &quot;solr&quot;, &quot;spocc&quot;, &quot;taxize&quot;, &quot;togeojson&quot;, &quot;treeBASE&quot;)
pkgs &amp;lt;- sort(pkgs)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Define functions&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;github_auth &amp;lt;- function(appname = getOption(&quot;gh_appname&quot;), key = getOption(&quot;gh_id&quot;),
                        secret = getOption(&quot;gh_secret&quot;)) {
  if (is.null(getOption(&quot;gh_token&quot;))) {
    myapp &amp;lt;- oauth_app(appname, key, secret)
    token &amp;lt;- oauth2.0_token(oauth_endpoints(&quot;github&quot;), myapp)
    options(gh_token = token)
  } else {
    token &amp;lt;- getOption(&quot;gh_token&quot;)
  }
  return(token)
}

make_url &amp;lt;- function(x, y, z) {
  sprintf(&quot;https://api.github.com/repos/%s/%s/%s&quot;, x, y, z)
}

process_result &amp;lt;- function(x) {
  stop_for_status(x)
  if (!x$headers$`content-type` == &quot;application/json; charset=utf-8&quot;)
    stop(&quot;content type mismatch&quot;)
  tmp &amp;lt;- content(x, as = &quot;text&quot;)
  jsonlite::fromJSON(tmp, flatten = TRUE)
}

parse_file &amp;lt;- function(x) {
  tmp &amp;lt;- gsub(&quot;\n\\s+&quot;, &quot;\n&quot;, 
              paste(vapply(strsplit(x, &quot;\n&quot;)[[1]], RCurl::base64Decode,
                           character(1), USE.NAMES = FALSE), collapse = &quot; &quot;))
  lines &amp;lt;- readLines(textConnection(tmp))
  vapply(lines, gsub, character(1), pattern = &quot;\\s&quot;, replacement = &quot;&quot;,
         USE.NAMES = FALSE)
}

request &amp;lt;- function(owner = &quot;ropensci&quot;, repo, file=&quot;DESCRIPTION&quot;, ...) {
  req &amp;lt;- GET(make_url(owner, repo, paste0(&quot;contents/&quot;, file)), 
             config = c(token = github_auth(), ...))
  if(req$status_code != 200) { NA } else {
    cts &amp;lt;- process_result(req)$content
    parse_file(cts)
  }
}

has_term &amp;lt;- function(what, ...) any(grepl(what, request(...)))
has_file &amp;lt;- function(what, ...) if(all(is.na(request(file = what, ...)))) FALSE else TRUE
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Do stuff&lt;/h2&gt;

&lt;p&gt;Does a package depend on a particular package? e.g., look for &lt;code&gt;httr&lt;/code&gt; in the &lt;code&gt;DESCRIPTION&lt;/code&gt; file (which is the default file name in &lt;code&gt;request()&lt;/code&gt; above)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;has_term(&quot;httr&quot;, repo=&quot;taxize&quot;)
#&amp;gt; [1] TRUE
has_term(&quot;maptools&quot;, repo=&quot;taxize&quot;)
#&amp;gt; [1] FALSE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Do a series of R packages have a file for how to contribute &lt;code&gt;CONTRIBUTING.md&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;Yes&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;has_file(&quot;CONTRIBUTING.md&quot;, repo=&quot;taxize&quot;)
#&amp;gt; [1] TRUE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Many packages&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;vapply(pkgs, function(x) has_file(&quot;CONTRIBUTING.md&quot;, repo=x), logical(1))
#&amp;gt;        alm        bmc       bold     clifro  ecoengine    elastic 
#&amp;gt;      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE 
#&amp;gt;   fulltext   geonames      gistr     RNeXML      rnoaa       rnpn 
#&amp;gt;       TRUE      FALSE      FALSE       TRUE       TRUE      FALSE 
#&amp;gt;      rplos      rsnps rWBclimate       solr      spocc     taxize 
#&amp;gt;      FALSE      FALSE      FALSE      FALSE       TRUE       TRUE 
#&amp;gt;  togeojson     traits   treeBASE 
#&amp;gt;      FALSE      FALSE      FALSE
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Check rate limit&lt;/h2&gt;

&lt;p&gt;Define function&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;rate_limit &amp;lt;- function(...) {
  token &amp;lt;- github_auth()
  req &amp;lt;- GET(&quot;https://api.github.com/rate_limit&quot;, config = c(token = token, ...))
  process_result(req)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check it&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;rate_limit()
#&amp;gt; $resources
#&amp;gt; $resources$core
#&amp;gt; $resources$core$limit
#&amp;gt; [1] 5000
#&amp;gt; 
#&amp;gt; $resources$core$remaining
#&amp;gt; [1] 4925
#&amp;gt; 
#&amp;gt; $resources$core$reset
#&amp;gt; [1] 1417031016
#&amp;gt; 
#&amp;gt; 
#&amp;gt; $resources$search
#&amp;gt; $resources$search$limit
#&amp;gt; [1] 30
#&amp;gt; 
#&amp;gt; $resources$search$remaining
#&amp;gt; [1] 30
#&amp;gt; 
#&amp;gt; $resources$search$reset
#&amp;gt; [1] 1417028069
#&amp;gt; 
#&amp;gt; 
#&amp;gt; 
#&amp;gt; $rate
#&amp;gt; $rate$limit
#&amp;gt; [1] 5000
#&amp;gt; 
#&amp;gt; $rate$remaining
#&amp;gt; [1] 4925
#&amp;gt; 
#&amp;gt; $rate$reset
#&amp;gt; [1] 1417031016
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Convert time to reset to human readable form&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;as.POSIXct(rate_limit()$rate$reset, origin=&quot;1970-01-01&quot;)
#&amp;gt; [1] &quot;2014-11-26 11:43:36 PST&quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
				<published>2014-11-26 00:00:00 -0800</published>
				<link>http://recology.info//2014/11/github-fun/</link>
			</item>
		
			<item>
				<title>sofa - reboot</title>
				<description>&lt;p&gt;I&#39;ve reworked &lt;code&gt;sofa&lt;/code&gt; recently after someone reported a bug in the package. Since the last post on this package on 2013-06-21, there&#39;s a bunch of changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Removed the &lt;code&gt;sofa_&lt;/code&gt; prefix from all functions as it wasn&#39;t really necessary.&lt;/li&gt;
&lt;li&gt;Replaced &lt;code&gt;rjson&lt;/code&gt;/&lt;code&gt;RJSONIO&lt;/code&gt; with &lt;code&gt;jsonlite&lt;/code&gt; for JSON I/O.&lt;/li&gt;
&lt;li&gt;New functions:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;revisions()&lt;/code&gt; - to get the revision numbers for a document.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uuids()&lt;/code&gt; - get any number of UUIDs - e.g., if you want to set document IDs with UUIDs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Most functions that deal with documents are prefixed with &lt;code&gt;doc_&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Functions that deal with databases are prefixed with &lt;code&gt;db_&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Simplified all code, reducing duplication&lt;/li&gt;
&lt;li&gt;All functions take &lt;code&gt;cushion&lt;/code&gt; as the first parameter, for consistency sake.&lt;/li&gt;
&lt;li&gt;Changed &lt;code&gt;cushion()&lt;/code&gt; function so that you can only register one cushion with each function call,
and the function takes parameters for each element now, &lt;code&gt;name&lt;/code&gt; (name of the cushion, whatever you want), &lt;code&gt;user&lt;/code&gt; (user name, if applicable), &lt;code&gt;pwd&lt;/code&gt; (password, if applicable), &lt;code&gt;type&lt;/code&gt; (one of localhost, cloudant, or iriscouch), and &lt;code&gt;port&lt;/code&gt; (if applicable).&lt;/li&gt;
&lt;li&gt;Changed package license from &lt;code&gt;CC0&lt;/code&gt; to &lt;code&gt;MIT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There&#39;s still more to do, but I&#39;m pretty happy with the recent changes, and I hope at least some find the package useful. Also, would love people to try it out as all bugs are shallow and all that...&lt;/p&gt;

&lt;p&gt;The following are a few examples of package use.&lt;/p&gt;

&lt;h2&gt;Install CouchDB&lt;/h2&gt;

&lt;p&gt;Instructions &lt;a href=&quot;http://wiki.apache.org/couchdb/Installation&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Start CouchDB&lt;/h2&gt;

&lt;p&gt;In your terminal&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;couchdb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can interact with your CouchDB databases as well in your browser. Navigate to &lt;a href=&quot;http://localhost:5984/_utils&quot;&gt;http://localhost:5984/_utils&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Install sofa&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;install.packages(&quot;devtools&quot;)
devtools::install_github(&quot;sckott/sofa&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;library(&#39;sofa&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Authenticate - Cushions&lt;/h2&gt;

&lt;p&gt;As an example, here&#39;s how I set up details for connecting to my Cloudant couch:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;cushion(name = &#39;cloudant&#39;, user = &#39;&amp;lt;user name&amp;gt;&#39;, pwd = &#39;&amp;lt;password&amp;gt;&#39;, type = &quot;cloudant&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By default there is a built-in &lt;code&gt;cushion&lt;/code&gt; for localhost so you don&#39;t have to do that, unless you want to change those details, e.g., the port number. Right now cushions aren&#39;t preserved across R sessions, but working on that.&lt;/p&gt;

&lt;p&gt;For example, I&#39;ll lay down a cushion for Cloudant, then I can call &lt;code&gt;cushions()&lt;/code&gt; to see my cushions:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;cushion(name = &#39;cloudant&#39;, user = &#39;&amp;lt;user name&amp;gt;&#39;, pwd = &#39;&amp;lt;pwd&amp;gt;&#39;, type = &quot;cloudant&quot;)
cushions()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By default, if you don&#39;t provide a cushion name, you are using localhost.&lt;/p&gt;

&lt;h2&gt;Ping the server&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;ping()
#&amp;gt; $couchdb
#&amp;gt; [1] &quot;Welcome&quot;
#&amp;gt; 
#&amp;gt; $uuid
#&amp;gt; [1] &quot;2c10f0c6d9bd17205b692ae93cd4cf1d&quot;
#&amp;gt; 
#&amp;gt; $version
#&amp;gt; [1] &quot;1.6.0&quot;
#&amp;gt; 
#&amp;gt; $vendor
#&amp;gt; $vendor$version
#&amp;gt; [1] &quot;1.6.0-1&quot;
#&amp;gt; 
#&amp;gt; $vendor$name
#&amp;gt; [1] &quot;Homebrew&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nice, it&#39;s working.&lt;/p&gt;

&lt;h2&gt;Create a new database, and list available databases&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;db_create(dbname=&#39;sofadb&#39;)
#&amp;gt; $ok
#&amp;gt; [1] TRUE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;see if its there now&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;db_list()
#&amp;gt;  [1] &quot;_replicator&quot; &quot;_users&quot;      &quot;alm_couchdb&quot; &quot;cachecall&quot;   &quot;hello_earth&quot;
#&amp;gt;  [6] &quot;leothelion&quot;  &quot;mran&quot;        &quot;mydb&quot;        &quot;newdbs&quot;      &quot;sofadb&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Create documents&lt;/h2&gt;

&lt;p&gt;Create a document WITH a name (uses PUT)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;doc1 &amp;lt;- &#39;{&quot;name&quot;:&quot;sofa&quot;,&quot;beer&quot;:&quot;IPA&quot;}&#39;
doc_create(dbname=&quot;sofadb&quot;, doc=doc1, docid=&quot;a_beer&quot;)
#&amp;gt; $ok
#&amp;gt; [1] TRUE
#&amp;gt; 
#&amp;gt; $id
#&amp;gt; [1] &quot;a_beer&quot;
#&amp;gt; 
#&amp;gt; $rev
#&amp;gt; [1] &quot;1-a48c98c945bcc05d482bc6f938c89882&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a document WITHOUT a name (uses POST)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;doc2 &amp;lt;- &#39;{&quot;name&quot;:&quot;sofa&quot;,&quot;icecream&quot;:&quot;rocky road&quot;}&#39;
doc_create(dbname=&quot;sofadb&quot;, doc=doc2)
#&amp;gt; $ok
#&amp;gt; [1] TRUE
#&amp;gt; 
#&amp;gt; $id
#&amp;gt; [1] &quot;c5c5c332c25cf62cc584647a81006f6d&quot;
#&amp;gt; 
#&amp;gt; $rev
#&amp;gt; [1] &quot;1-fd0da7fcb8d3afbfc5757d065c92362c&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;List documents&lt;/h2&gt;

&lt;p&gt;List them&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;alldocs(dbname=&quot;sofadb&quot;)
#&amp;gt;                                 id                              key
#&amp;gt; 1                           a_beer                           a_beer
#&amp;gt; 2 c5c5c332c25cf62cc584647a81006f6d c5c5c332c25cf62cc584647a81006f6d
#&amp;gt;                                  rev
#&amp;gt; 1 1-a48c98c945bcc05d482bc6f938c89882
#&amp;gt; 2 1-fd0da7fcb8d3afbfc5757d065c92362c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Optionally include the documents, returned as a list by default as it would be hard to parse an endless number of document formats.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;alldocs(dbname=&quot;sofadb&quot;, include_docs = TRUE)
#&amp;gt; $total_rows
#&amp;gt; [1] 2
#&amp;gt; 
#&amp;gt; $offset
#&amp;gt; [1] 0
#&amp;gt; 
#&amp;gt; $rows
#&amp;gt; $rows[[1]]
#&amp;gt; $rows[[1]]$id
#&amp;gt; [1] &quot;a_beer&quot;
#&amp;gt; 
#&amp;gt; $rows[[1]]$key
#&amp;gt; [1] &quot;a_beer&quot;
#&amp;gt; 
#&amp;gt; $rows[[1]]$value
#&amp;gt; $rows[[1]]$value$rev
#&amp;gt; [1] &quot;1-a48c98c945bcc05d482bc6f938c89882&quot;
#&amp;gt; 
#&amp;gt; 
#&amp;gt; $rows[[1]]$doc
#&amp;gt; $rows[[1]]$doc$`_id`
#&amp;gt; [1] &quot;a_beer&quot;
#&amp;gt; 
#&amp;gt; $rows[[1]]$doc$`_rev`
#&amp;gt; [1] &quot;1-a48c98c945bcc05d482bc6f938c89882&quot;
#&amp;gt; 
#&amp;gt; $rows[[1]]$doc$name
#&amp;gt; [1] &quot;sofa&quot;
#&amp;gt; 
#&amp;gt; $rows[[1]]$doc$beer
#&amp;gt; [1] &quot;IPA&quot;
#&amp;gt; 
#&amp;gt; 
#&amp;gt; 
#&amp;gt; $rows[[2]]
#&amp;gt; $rows[[2]]$id
#&amp;gt; [1] &quot;c5c5c332c25cf62cc584647a81006f6d&quot;
#&amp;gt; 
#&amp;gt; $rows[[2]]$key
#&amp;gt; [1] &quot;c5c5c332c25cf62cc584647a81006f6d&quot;
#&amp;gt; 
#&amp;gt; $rows[[2]]$value
#&amp;gt; $rows[[2]]$value$rev
#&amp;gt; [1] &quot;1-fd0da7fcb8d3afbfc5757d065c92362c&quot;
#&amp;gt; 
#&amp;gt; 
#&amp;gt; $rows[[2]]$doc
#&amp;gt; $rows[[2]]$doc$`_id`
#&amp;gt; [1] &quot;c5c5c332c25cf62cc584647a81006f6d&quot;
#&amp;gt; 
#&amp;gt; $rows[[2]]$doc$`_rev`
#&amp;gt; [1] &quot;1-fd0da7fcb8d3afbfc5757d065c92362c&quot;
#&amp;gt; 
#&amp;gt; $rows[[2]]$doc$name
#&amp;gt; [1] &quot;sofa&quot;
#&amp;gt; 
#&amp;gt; $rows[[2]]$doc$icecream
#&amp;gt; [1] &quot;rocky road&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Update a document&lt;/h2&gt;

&lt;p&gt;Change &lt;em&gt;IPA&lt;/em&gt; (india pale ale) to &lt;em&gt;IPL&lt;/em&gt; (india pale lager). We need to get revisions first as we need to include revision number when we update a document.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;(revs &amp;lt;- revisions(dbname = &quot;sofadb&quot;, docid = &quot;a_beer&quot;))
#&amp;gt; [1] &quot;1-a48c98c945bcc05d482bc6f938c89882&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;newdoc &amp;lt;- &#39;{&quot;name&quot;:&quot;sofa&quot;,&quot;beer&quot;:&quot;IPL&quot;}&#39;
doc_update(dbname = &quot;sofadb&quot;, doc = newdoc, docid = &quot;a_beer&quot;, rev = revs[1])
#&amp;gt; $ok
#&amp;gt; [1] TRUE
#&amp;gt; 
#&amp;gt; $id
#&amp;gt; [1] &quot;a_beer&quot;
#&amp;gt; 
#&amp;gt; $rev
#&amp;gt; [1] &quot;2-f2390eb18b8f9a870c915c6712a7f65e&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Should be two revisions now&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;revisions(dbname = &quot;sofadb&quot;, docid = &quot;a_beer&quot;)
#&amp;gt; [1] &quot;2-f2390eb18b8f9a870c915c6712a7f65e&quot;
#&amp;gt; [2] &quot;1-a48c98c945bcc05d482bc6f938c89882&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Get headers for a document&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;doc_head(dbname = &quot;sofadb&quot;, docid = &quot;a_beer&quot;)
#&amp;gt; [[1]]
#&amp;gt; [[1]]$status
#&amp;gt; [1] 200
#&amp;gt; 
#&amp;gt; [[1]]$version
#&amp;gt; [1] &quot;HTTP/1.1&quot;
#&amp;gt; 
#&amp;gt; [[1]]$headers
#&amp;gt; $server
#&amp;gt; [1] &quot;CouchDB/1.6.0 (Erlang OTP/17)&quot;
#&amp;gt; 
#&amp;gt; $etag
#&amp;gt; [1] &quot;\&quot;2-f2390eb18b8f9a870c915c6712a7f65e\&quot;&quot;
#&amp;gt; 
#&amp;gt; $date
#&amp;gt; [1] &quot;Tue, 18 Nov 2014 21:19:16 GMT&quot;
#&amp;gt; 
#&amp;gt; $`content-type`
#&amp;gt; [1] &quot;application/json&quot;
#&amp;gt; 
#&amp;gt; $`content-length`
#&amp;gt; [1] &quot;88&quot;
#&amp;gt; 
#&amp;gt; $`cache-control`
#&amp;gt; [1] &quot;must-revalidate&quot;
#&amp;gt; 
#&amp;gt; attr(,&quot;class&quot;)
#&amp;gt; [1] &quot;insensitive&quot; &quot;list&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;JSON vs. list&lt;/h2&gt;

&lt;p&gt;Across all/most functions you can request json or list as output with the &lt;code&gt;as&lt;/code&gt; parameter.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;db_list(as = &quot;list&quot;)
#&amp;gt;  [1] &quot;_replicator&quot; &quot;_users&quot;      &quot;alm_couchdb&quot; &quot;cachecall&quot;   &quot;hello_earth&quot;
#&amp;gt;  [6] &quot;leothelion&quot;  &quot;mran&quot;        &quot;mydb&quot;        &quot;newdbs&quot;      &quot;sofadb&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;db_list(as = &quot;json&quot;)
#&amp;gt; [1] &quot;[\&quot;_replicator\&quot;,\&quot;_users\&quot;,\&quot;alm_couchdb\&quot;,\&quot;cachecall\&quot;,\&quot;hello_earth\&quot;,\&quot;leothelion\&quot;,\&quot;mran\&quot;,\&quot;mydb\&quot;,\&quot;newdbs\&quot;,\&quot;sofadb\&quot;]\n&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Curl options&lt;/h2&gt;

&lt;p&gt;Across all functions you can pass in curl options. We&#39;re using &lt;code&gt;httr&lt;/code&gt; internally, so you can use &lt;code&gt;httr&lt;/code&gt; helper functions to make some curl options easier. Examples:&lt;/p&gt;

&lt;p&gt;Verbose output&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;library(&quot;httr&quot;)
db_list(config=verbose())
#&amp;gt;  [1] &quot;_replicator&quot; &quot;_users&quot;      &quot;alm_couchdb&quot; &quot;cachecall&quot;   &quot;hello_earth&quot;
#&amp;gt;  [6] &quot;leothelion&quot;  &quot;mran&quot;        &quot;mydb&quot;        &quot;newdbs&quot;      &quot;sofadb&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Progress&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;db_list(config=progress())
#&amp;gt;   |                                                                         |                                                                 |   0%  |                                                                         |=================================================================| 100%
#&amp;gt;  [1] &quot;_replicator&quot; &quot;_users&quot;      &quot;alm_couchdb&quot; &quot;cachecall&quot;   &quot;hello_earth&quot;
#&amp;gt;  [6] &quot;leothelion&quot;  &quot;mran&quot;        &quot;mydb&quot;        &quot;newdbs&quot;      &quot;sofadb&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Set a timeout&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;db_list(config=timeout(seconds = 0.001))
#&amp;gt; 
#&amp;gt; Error in function (type, msg, asError = TRUE)  : 
#&amp;gt;    Operation timed out after 3 milliseconds with 0 out of -1 bytes received
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Full text search&lt;/h2&gt;

&lt;p&gt;I&#39;m working on an R client for Elaticsearch called &lt;code&gt;elastic&lt;/code&gt; - find it at &lt;a href=&quot;https://github.com/ropensci/elastic&quot;&gt;https://github.com/ropensci/elastic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thinking about where to include functions to allow &lt;code&gt;elastic&lt;/code&gt; and &lt;code&gt;sofa&lt;/code&gt; to work together...if you have any thoughts hit up the issues. I&#39;ll probably include helper functions for CouchDB search in the &lt;code&gt;elastic&lt;/code&gt; package, interfacing with the &lt;a href=&quot;https://github.com/elasticsearch/elasticsearch-river-couchdb&quot;&gt;CouchDB plugin for Elasticsearch&lt;/a&gt;.&lt;/p&gt;
</description>
				<published>2014-11-18 00:00:00 -0800</published>
				<link>http://recology.info//2014/11/sofa/</link>
			</item>
		
			<item>
				<title>Conditionality meta-analysis data</title>
				<description>&lt;h2&gt;The paper&lt;/h2&gt;

&lt;p&gt;One paper from my graduate work asked most generally ~ &quot;How much does the variation in magnitudes and signs of species interaction outcomes vary?&quot;. More specifically, we wanted to know if variation differed among species interaction classes (mutualism, competition, predation), and among various &quot;gradients&quot; (space, time, etc.). To answer this question, we used a meta-analysis approach (rather than e.g., a field experiment). We &lt;a href=&quot;http://scottchamberlain.info/publications/&quot;&gt;published the paper&lt;/a&gt; recently.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;p.s. I really really wish we would have put it in an open access journal...&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;The data&lt;/h2&gt;

&lt;p&gt;Anyway, I&#39;m here to talk about the &lt;strong&gt;data&lt;/strong&gt;. We didn&#39;t get the data up with the paper, but it is &lt;a href=&quot;http://figshare.com/articles/Conditionality_data/1097657&quot;&gt;up on Figshare&lt;/a&gt; now. The files there are the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;coniditionality.R&lt;/code&gt; - script used to process the data from &lt;code&gt;variables_prelim.csv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;variables_prelim.csv&lt;/code&gt; - description of variables in the preliminary data set, matches &lt;code&gt;conditionality_data_prelim.csv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;variables_used.csv&lt;/code&gt; - description of variables in the used data set, matches &lt;code&gt;conditionality_data_used.csv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conditionality_data_prelim.csv&lt;/code&gt; - preliminary data, the raw data&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conditionality_data_used.csv&lt;/code&gt; - the data used for our paper&lt;/li&gt;
&lt;li&gt;&lt;code&gt;README.md&lt;/code&gt; - the readme&lt;/li&gt;
&lt;li&gt;&lt;code&gt;paper_selection.csv&lt;/code&gt; - the list of papers we went through, with remarks about paper selection&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Please do play with the data, publish some papers, etc, etc. It took 6 of us about 4 years to collect this data; we skimmed through ~11,000 papers on the first pass (aka. skimming through abstracts in Google Scholar and Web of Science), then decided on nearly 500 papers to get data from, and narrowed down to 247 papers for the publication mentioned above. Now, there was no funding for this, so it was sort of done in between other projects, but still, it was simply &lt;strong&gt;A LOT&lt;/strong&gt; of tables to digitize, and graphs to extract data points from. &lt;strong&gt;Anyway&lt;/strong&gt;, hopefully you will find this data useful :p&lt;/p&gt;

&lt;h2&gt;EML&lt;/h2&gt;

&lt;p&gt;I think this dataset would be a great introduction to the potential power of EML (&lt;a href=&quot;https://knb.ecoinformatics.org/#external//emlparser/docs/index.html&quot;&gt;Ecological Metadata Langauge&lt;/a&gt;). At &lt;a href=&quot;http://ropensci.org/&quot;&gt;rOpenSci&lt;/a&gt;, one of our team &lt;a href=&quot;http://www.carlboettiger.info/&quot;&gt;Carl Boettiger&lt;/a&gt;, along with Claas-Thido Pfaff, Duncan Temple Lang, Karthik Ram, and Matt Jones, have created an R client for EML, to parse EML files and to create and publish them.&lt;/p&gt;

&lt;h2&gt;What is EML?/Why EML?&lt;/h2&gt;

&lt;p&gt;A demonstration is in order...&lt;/p&gt;

&lt;h2&gt;Example using EML with this dataset&lt;/h2&gt;

&lt;h3&gt;Install EML&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;library(&quot;devtools&quot;)
install.packages(&quot;RHTMLForms&quot;, repos = &quot;http://www.omegahat.org/R/&quot;, type=&quot;source&quot;)
install_github(&quot;ropensci/EML&quot;, build=FALSE, dependencies=c(&quot;DEPENDS&quot;, &quot;IMPORTS&quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Load &lt;code&gt;EML&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;library(&#39;EML&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Prepare metadata&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;# dataset
prelim_dat &amp;lt;- read.csv(&quot;conditionality_data_prelim.csv&quot;)
# variable descriptions for each column
prelim_vars &amp;lt;- read.csv(&quot;variables_prelim.csv&quot;, stringsAsFactors = FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Get column definitions in a vector&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;col_defs &amp;lt;- prelim_vars$description
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create unit definitions for each column&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;unit_defs &amp;lt;- list(
  c(unit = &quot;number&quot;,
    bounds = c(0, Inf)),
  c(unit = &quot;number&quot;,
    bounds = c(0, Inf)),
  &quot;independent replicates&quot;,
  c(unit = &quot;number&quot;,
    bounds = c(0, Inf)),

  ... &amp;lt;CUTOFF&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Write an EML file&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;eml_write(prelim_dat,
          unit.defs = unit_defs,
          col.defs = col_defs,
          creator = &quot;Scott Chamberlain&quot;,
          contact = &quot;myrmecocystus@gmail.com&quot;,
          file = &quot;conditionality_data_prelim_eml.xml&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &quot;conditionality_data_prelim_eml.xml&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Validate the EML file&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;eml_validate(&quot;conditionality_data_prelim_eml.xml&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## EML specific tests XML specific tests 
##               TRUE               TRUE
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Read data and metadata&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;gg &amp;lt;- eml_read(&quot;conditionality_data_prelim_eml.xml&quot;)
eml_get(gg, &quot;contact&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &quot;myrmecocystus@gmail.com&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;eml_get(gg, &quot;citation_info&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Chamberlain S (2014-10-06). _metadata_.
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;dat &amp;lt;- eml_get(gg, &quot;data.frame&quot;)
head(dat[,c(1:10)])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##   order i indrep avg author_last  finit_1 finit_2 finit_abv co_author
## 1     1 1      a   1      Devall margaret       s        ms     Thein
## 2     2 1      a   2      Devall margaret       s        ms     Thein
## 3     3 1      a   3      Devall margaret       s        ms     Thein
## 4     4 1      a   4      Devall margaret       s        ms     Thein
## 5     5 1      a   5      Devall margaret       s        ms     Thein
## 6     6 1      a   6      Devall margaret       s        ms     Thein
##   sinit_1
## 1 leonard
## 2 leonard
## 3 leonard
## 4 leonard
## 5 leonard
## 6 leonard
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Publish&lt;/h3&gt;

&lt;p&gt;We can also use the &lt;code&gt;EML&lt;/code&gt; package to publish the data, here to &lt;a href=&quot;http://figshare.com&quot;&gt;Figshare&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First, install &lt;code&gt;rfigshare&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;install.packages(&quot;rfigshare&quot;)
library(&#39;rfigshare&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then publish using &lt;code&gt;eml_publish()&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;figid &amp;lt;- eml_publish(
            file = &quot;conditionality_data_prelim_eml.xml&quot;,
            description = &quot;EML file for Chamberlain, S.A., J.A. Rudgers, and J.L. Bronstein. 2014. How context-dependent are species interactions. Ecology Letters&quot;,
            categories = &quot;Ecology&quot;,
            tags = &quot;EML&quot;,
            destination = &quot;figshare&quot;,
            visibility = &quot;public&quot;,
            title = &quot;condionality data, EML&quot;)
fs_make_public(figid)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/public/img/2014-10-06-conditionality-meta-analysis/figshare_conditional.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
				<published>2014-10-06 00:00:00 -0700</published>
				<link>http://recology.info//2014/10/conditionality-meta-analysis/</link>
			</item>
		
			<item>
				<title>rsunlight - R client for Sunlight Labs APIs</title>
				<description>&lt;p&gt;My &lt;a href=&quot;http://recology.info/2014/05/rsunlight/&quot;&gt;last blog post on this package&lt;/a&gt; was so long ago the package wrapped both New York Times APIs and Sunlight Labs APIs and the package was called &lt;code&gt;govdat&lt;/code&gt;. I split that package up into &lt;code&gt;rsunlight&lt;/code&gt; for Sunlight Labs APIs and &lt;code&gt;rtimes&lt;/code&gt; for some New York Times APIs. &lt;code&gt;rtimes&lt;/code&gt; is &lt;a href=&quot;https://github.com/ropengov/rtimes&quot;&gt;in development at Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We&#39;ve updated the package to include four sets of functions, one set for each of four Sunlight Labs APIs (with a separate prefix for each API):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Congress API (&lt;code&gt;cg_&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Open States API (&lt;code&gt;os_&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Capitol Words API (&lt;code&gt;cw_&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Influence Explorer API (&lt;code&gt;ie_&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Then there are many methods for each API.&lt;/p&gt;

&lt;h2&gt;rsunlight intro&lt;/h2&gt;

&lt;h3&gt;Installation&lt;/h3&gt;

&lt;p&gt;First, installation&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;devtools::install_github(&quot;ropengov/rsunlight&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Load the library&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;library(&quot;rsunlight&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Congress API&lt;/h3&gt;

&lt;p&gt;Search for Fed level bills that include the term &lt;em&gt;health care&lt;/em&gt; in them.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;res &amp;lt;- cg_bills(query=&#39;health care&#39;)
head(res$results[,1:4])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##          nicknames congress last_version_on sponsor_id
## 1        obamacare      111      2010-08-25    S000749
## 2 obamacare, ppaca      111      2010-08-25    R000053
## 3             NULL      113      2013-10-09    K000220
## 4             NULL      111      2009-01-06    I000056
## 5             NULL      112      2011-01-05    I000056
## 6             NULL      111      2009-05-05    D000197
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Search for bills that have the two terms &lt;em&gt;transparency&lt;/em&gt; and &lt;em&gt;accountability&lt;/em&gt; within 5 words of each other in the bill.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;res &amp;lt;- cg_bills(query=&#39;transparency accountability&#39;~5)
head(res$results[,1:4])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##   congress last_version_on sponsor_id
## 1      111      2009-01-15    R000435
## 2      113      2013-07-17    R000595
## 3      112      2011-12-08    R000435
## 4      113      2013-09-19    R000435
## 5      112      2011-11-10    R000595
## 6      113      2013-07-23    C000560
##                                       urls.govtrack
## 1   http://www.govtrack.us/congress/bills/111/hr557
## 2  https://www.govtrack.us/congress/bills/113/s1313
## 3  http://www.govtrack.us/congress/bills/112/hr2829
## 4 https://www.govtrack.us/congress/bills/113/hr3155
## 5   http://www.govtrack.us/congress/bills/112/s1848
## 6  https://www.govtrack.us/congress/bills/113/s1347
##                                 urls.opencongress
## 1  http://www.opencongress.org/bill/111-h557/show
## 2      http://www.opencongress.org/bill/s1313-113
## 3 http://www.opencongress.org/bill/112-h2829/show
## 4     http://www.opencongress.org/bill/hr3155-113
## 5 http://www.opencongress.org/bill/112-s1848/show
## 6      http://www.opencongress.org/bill/s1347-113
##                                          urls.congress
## 1   http://beta.congress.gov/bill/111th/house-bill/557
## 2 http://beta.congress.gov/bill/113th/senate-bill/1313
## 3  http://beta.congress.gov/bill/112th/house-bill/2829
## 4  http://beta.congress.gov/bill/113th/house-bill/3155
## 5 http://beta.congress.gov/bill/112th/senate-bill/1848
## 6 http://beta.congress.gov/bill/113th/senate-bill/1347
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Open States API&lt;/h3&gt;

&lt;p&gt;Search State Bills, in this case search for the term &lt;em&gt;agriculture&lt;/em&gt; in Texas.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;res &amp;lt;- os_billsearch(terms = &#39;agriculture&#39;, state = &#39;tx&#39;)
head(res)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##                                                                                                                                                 title
## 1 Relating to authorizing the issuance of revenue bonds to fund capital projects at public institutions of higher education; making an appropriation.
## 2                          Relating to authorizing the issuance of revenue bonds to fund capital projects at public institutions of higher education.
## 3                          Relating to authorizing the issuance of revenue bonds to fund capital projects at public institutions of higher education.
## 4                          Relating to authorizing the issuance of revenue bonds to fund capital projects at public institutions of higher education.
## 5 Relating to authorizing the issuance of revenue bonds to fund capital projects at public institutions of higher education; making an appropriation.
## 6                                Relating to access to certain facilities by search and rescue dogs and their handlers; providing a criminal penalty.
##            created_at          updated_at          id chamber state
## 1 2013-08-01 03:33:40 2013-08-07 03:10:10 TXB00034894   upper    tx
## 2 2013-08-01 03:33:38 2013-08-02 03:20:14 TXB00034893   upper    tx
## 3 2013-07-21 03:03:53 2013-07-28 03:28:30 TXB00034814   upper    tx
## 4 2013-07-03 02:44:03 2013-07-14 03:00:31 TXB00034514   upper    tx
## 5 2013-06-16 03:48:13 2013-06-23 04:02:49 TXB00033988   upper    tx
## 6 2013-03-03 04:47:26 2013-07-01 21:25:36 TXB00027556   upper    tx
##   session type
## 1     833 bill
## 2     833 bill
## 3     832 bill
## 4     832 bill
## 5     831 bill
## 6      83 bill
##                                                                             subjects
## 1                                   Commerce, Education, Budget, Spending, and Taxes
## 2                                   Commerce, Education, Budget, Spending, and Taxes
## 3                                   Commerce, Education, Budget, Spending, and Taxes
## 4                                   Commerce, Education, Budget, Spending, and Taxes
## 5                                   Commerce, Education, Budget, Spending, and Taxes
## 6 Commerce, Business and Consumers, Animal Rights and Wildlife Issues, Health, Crime
##   bill_id
## 1    SB 3
## 2   SB 10
## 3   SB 40
## 4    SB 6
## 5   SB 44
## 6 SB 1010
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Search for legislators in California (&lt;em&gt;ca&lt;/em&gt;) and in the democratic party&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;res &amp;lt;- os_legislatorsearch(state = &#39;ca&#39;, party = &#39;democratic&#39;, fields = c(&#39;full_name&#39;,&#39;+capitol_office.phone&#39;))
head(res)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##            phone        id       full_name
## 1 (916) 319-2014 CAL000058   Nancy Skinner
## 2 (916) 319-2015 CAL000059   Joan Buchanan
## 3 (916) 319-2022 CAL000084       Paul Fong
## 4 (916) 319-2046 CAL000089      John Pérez
## 5 (916) 319-2080 CAL000098 V. Manuel Pérez
## 6 (916) 319-2001 CAL000101  Wesley Chesbro
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you can call each representative, yay!&lt;/p&gt;

&lt;h3&gt;Capitol Words API&lt;/h3&gt;

&lt;p&gt;Search for phrase &lt;em&gt;climate change&lt;/em&gt; used by politicians between September 5th and 16th, 2011:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;head(cw_text(phrase=&#39;climate change&#39;, start_date=&#39;2011-09-05&#39;, end_date=&#39;2011-09-16&#39;, party=&#39;D&#39;)[,c(&#39;speaker_last&#39;,&#39;origin_url&#39;)])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##   speaker_last
## 1      Tsongas
## 2       Inslee
## 3        Costa
## 4        Boxer
## 5       Durbin
## 6        Boxer
##                                                                                   origin_url
## 1 http://origin.www.gpo.gov/fdsys/pkg/CREC-2011-09-14/html/CREC-2011-09-14-pt1-PgH6149-5.htm
## 2   http://origin.www.gpo.gov/fdsys/pkg/CREC-2011-09-15/html/CREC-2011-09-15-pt1-PgH6186.htm
## 3 http://origin.www.gpo.gov/fdsys/pkg/CREC-2011-09-13/html/CREC-2011-09-13-pt1-PgE1609-2.htm
## 4   http://origin.www.gpo.gov/fdsys/pkg/CREC-2011-09-15/html/CREC-2011-09-15-pt1-PgS5650.htm
## 5   http://origin.www.gpo.gov/fdsys/pkg/CREC-2011-09-13/html/CREC-2011-09-13-pt1-PgS5510.htm
## 6 http://origin.www.gpo.gov/fdsys/pkg/CREC-2011-09-13/html/CREC-2011-09-13-pt1-PgS5513-2.htm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Plot mentions of the term &lt;em&gt;climate change&lt;/em&gt; over time for Democrats vs. Republicans&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;library(&#39;ggplot2&#39;)
dat_d &amp;lt;- cw_timeseries(phrase=&#39;climate change&#39;, party=&quot;D&quot;)
dat_d$party &amp;lt;- rep(&quot;D&quot;, nrow(dat_d))
dat_r &amp;lt;- cw_timeseries(phrase=&#39;climate change&#39;, party=&quot;R&quot;)
dat_r$party &amp;lt;- rep(&quot;R&quot;, nrow(dat_r))
dat_both &amp;lt;- rbind(dat_d, dat_r)
ggplot(dat_both, aes(day, count, colour=party)) +
   geom_line() +
   theme_grey(base_size=20) +
   scale_colour_manual(values=c(&quot;blue&quot;,&quot;red&quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/public/img/2014-08-11-rsunlight/unnamed-chunk-9.png&quot; alt=&quot;plot of chunk unnamed-chunk-9&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;Influence Explorer API&lt;/h3&gt;

&lt;p&gt;Search for contributions of equal to or more than &lt;code&gt;$20,000,000&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;ie_contr(amount=&#39;&amp;gt;|20000000&#39;)[,c(&#39;amount&#39;,&#39;recipient_name&#39;,&#39;contributor_name&#39;)]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##         amount
## 1  25177212.00
## 2  20000000.00
## 3  20000000.00
## 4  20000000.00
## 5  20000000.00
## 6  20000000.00
## 7  50000000.00
## 8  34000000.00
## 9  28000000.00
## 10 20000000.00
##                                                   recipient_name
## 1                                       Republican National Cmte
## 2  CALIFORNIANS TO CLOSE THE OUT-OF-STATE CORPORATE TAX LOOPHOLE
## 3                                                   WHITMAN, MEG
## 4                                                   WHITMAN, MEG
## 5                                                   WHITMAN, MEG
## 6                                                   WHITMAN, MEG
## 7                                         GOLISANO, B THOMAS (G)
## 8                                         GOLISANO, B THOMAS (G)
## 9                                         GOLISANO, B THOMAS (G)
## 10                                        GOLISANO, B THOMAS (G)
##           contributor_name
## 1           Romney Victory
## 2         STEYER, THOMAS F
## 3  WHITMAN, MARGARET (MEG)
## 4  WHITMAN, MARGARET (MEG)
## 5  WHITMAN, MARGARET (MEG)
## 6  WHITMAN, MARGARET (MEG)
## 7       GOLISANO, B THOMAS
## 8       GOLISANO, B THOMAS
## 9       GOLISANO, B THOMAS
## 10      GOLISANO, B THOMAS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Top industries, by contributions given. &lt;em&gt;UNKOWN&lt;/em&gt; is a very influential industry. Of course &lt;em&gt;law firms&lt;/em&gt; are high up there, as well as &lt;em&gt;real estate&lt;/em&gt;. I&#39;m sure &lt;em&gt;oil and gas&lt;/em&gt; is embarrased that they&#39;re contributing less than &lt;em&gt;pulic sector unions&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;(res &amp;lt;- ie_industries(method=&#39;top_ind&#39;, limit=10))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##       count        amount                               id
## 1  14919818 3825359507.21 cdb3f500a3f74179bb4a5eb8b2932fa6
## 2   3600761 2787678962.95 f50cf984a2e3477c8167d32e2b14e052
## 3    329906 1717649914.58 9cac88377c3b400e89c2d6762e3f28f6
## 4   1386613 1707457092.04 7500030dffe24844aa467a75f7aedfd1
## 5    774496 1563637586.57 0af3f418f426497e8bbf916bfc074ebc
## 6    546367 1389220855.35 52e5d4c6c0fa47c3bdb199a28f96d434
## 7   2134350 1384221307.53 a05a0d06f6814b31bece35a81fcb40c7
## 8   1003850  986588892.83 8ada0fc2d6994f2ab06c7e025dff2284
## 9    567082  775241387.17 52766c4910a846f2813a1dda212b7027
## 10   151006  706747646.35 13718be68388456d9b6e8db753f06e72
##    should_show_entity                    name
## 1                TRUE                 UNKNOWN
## 2                TRUE       LAWYERS/LAW FIRMS
## 3                TRUE  CANDIDATE SELF-FINANCE
## 4                TRUE             REAL ESTATE
## 5                TRUE SECURITIES &amp;amp; INVESTMENT
## 6                TRUE    PUBLIC SECTOR UNIONS
## 7                TRUE    HEALTH PROFESSIONALS
## 8                TRUE               INSURANCE
## 9                TRUE               OIL &amp;amp; GAS
## 10               TRUE        CASINOS/GAMBLING
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;res$amount &amp;lt;- as.numeric(res$amount)
ggplot(res, aes(reorder(name, amount), amount)) +
  geom_bar(stat = &quot;identity&quot;) +
  coord_flip() +
  scale_y_continuous(labels=dollar) +
  theme_grey(base_size = 14)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/public/img/2014-08-11-rsunlight/unnamed-chunk-11.png&quot; alt=&quot;plot of chunk unnamed-chunk-11&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;Feedback&lt;/h2&gt;

&lt;p&gt;Please do use &lt;code&gt;rsunlight&lt;/code&gt;, and let us know what you want fixed, new features, etc.&lt;/p&gt;

&lt;h2&gt;Still to come:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Functions to visualize data from each API. You can do this yourself, but a few functions will be created to help those that are new to R.&lt;/li&gt;
&lt;li&gt;Vectorize functions so that you can give many inputs to a function instead of a single input.&lt;/li&gt;
&lt;li&gt;test suite: embarrasingly, there is no test suite yet, boo me.&lt;/li&gt;
&lt;li&gt;I plan to push &lt;code&gt;rsunlight&lt;/code&gt; to CRAN soon as &lt;code&gt;v0.3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>2014-08-11 00:00:00 -0700</published>
				<link>http://recology.info//2014/08/rsunlight/</link>
			</item>
		
			<item>
				<title>analogsea - v0.1 notes</title>
				<description>&lt;p&gt;My &lt;a href=&quot;http://recology.info/2014/05/analogsea/&quot;&gt;last blog &lt;/a&gt; post introduced the R package I&#39;m working on &lt;code&gt;analogsea&lt;/code&gt;, an R client for the Digital Ocean API.&lt;/p&gt;

&lt;p&gt;Things have changed a bit, including fillig out more functions for all API endpoints, and incorparting feedback from Hadley and Karthik. The package is as &lt;code&gt;v0.1&lt;/code&gt; now, so I thought I&#39;d say a few things about how it works.&lt;/p&gt;

&lt;p&gt;Note that Digital Ocean&#39;s v2 API is in beta stage now, so the current version of &lt;code&gt;analogsea&lt;/code&gt; at &lt;code&gt;v0.1&lt;/code&gt; works with their v1 API. The &lt;a href=&quot;https://github.com/sckott/analogsea/tree/v2&quot;&gt;v2 branch of analogsea&lt;/a&gt; is being developed for their v2 API.&lt;/p&gt;

&lt;p&gt;If you sign up for an account with Digital Ocean use this referral link: &lt;a href=&quot;https://www.digitalocean.com/?refcode=0740f5169634&quot;&gt;https://www.digitalocean.com/?refcode=0740f5169634&lt;/a&gt; so I can earn some credits. thx :)&lt;/p&gt;

&lt;p&gt;First, installation&lt;/p&gt;

&lt;p&gt;Note: I did try to submit to CRAN, but Ripley complained about the package name so I&#39;d rather not waste my time esp since people using this likely will already know about &lt;code&gt;install_github()&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;devtools::install_github(&quot;sckott/analogsea&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Load the library&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;library(&quot;analogsea&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Loading required package: magrittr
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Authenticate has changed a bit. Whereas auth details were stored as environment variables before, I&#39;m just using R&#39;s options. &lt;code&gt;do_auth()&lt;/code&gt; will ask for your Digital Ocean details. You can enter them each R session, or store them in your &lt;code&gt;.Rprofile&lt;/code&gt; file. After successful authentication, each function simply looks for your auth details with &lt;code&gt;getOption()&lt;/code&gt;.  You don&#39;t have to use this function first, though if you don&#39;t your first call to another function will ask for auth details.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;do_auth()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;sizes&lt;/code&gt;, &lt;code&gt;images&lt;/code&gt;, and &lt;code&gt;keys&lt;/code&gt; functions have changed a bit, by default outputting a &lt;code&gt;data.frame&lt;/code&gt; now.&lt;/p&gt;

&lt;p&gt;List available regions&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;regions()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##   id            name slug
## 1  3 San Francisco 1 sfo1
## 2  4      New York 2 nyc2
## 3  5     Amsterdam 2 ams2
## 4  6     Singapore 1 sgp1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List available sizes&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;sizes()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##   id  name  slug memory cpu disk cost_per_hour cost_per_month
## 1 66 512MB 512mb    512   1   20       0.00744            5.0
## 2 63   1GB   1gb   1024   1   30       0.01488           10.0
## 3 62   2GB   2gb   2048   2   40       0.02976           20.0
## 4 64   4GB   4gb   4096   2   60       0.05952           40.0
## 5 65   8GB   8gb   8192   4   80       0.11905           80.0
## 6 61  16GB  16gb  16384   8  160       0.23810          160.0
## 7 60  32GB  32gb  32768  12  320       0.47619          320.0
## 8 70  48GB  48gb  49152  16  480       0.71429          480.0
## 9 69  64GB  64gb  65536  20  640       0.95238          640.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List available images&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;head(images())
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##        id                  name             slug distribution public sfo1
## 1 3209452 rstudioserverssh_snap             &amp;lt;NA&amp;gt;       Ubuntu  FALSE    1
## 2    1601        CentOS 5.8 x64   centos-5-8-x64       CentOS   TRUE    1
## 3    1602        CentOS 5.8 x32   centos-5-8-x32       CentOS   TRUE    1
## 4   12573        Debian 6.0 x64   debian-6-0-x64       Debian   TRUE    1
## 5   12575        Debian 6.0 x32   debian-6-0-x32       Debian   TRUE    1
## 6   14097      Ubuntu 10.04 x64 ubuntu-10-04-x64       Ubuntu   TRUE    1
##   nyc1 ams1 nyc2 ams2 sgp1
## 1   NA   NA   NA   NA   NA
## 2    1    1    1    1    1
## 3    1    1    1    1    1
## 4    1    1    1    1    1
## 5    1    1    1    1    1
## 6    1    1    1    1    1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List ssh keys&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;keys()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## $ssh_keys
## $ssh_keys[[1]]
## $ssh_keys[[1]]$id
## [1] 89103
##
## $ssh_keys[[1]]$name
## [1] &quot;Scott Chamberlain&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One change that&#39;s of interest is that most of the various &lt;code&gt;droplets_*()&lt;/code&gt; functions take in the outputs of other &lt;code&gt;droplets_*()&lt;/code&gt; functions. This means that we can pipe outputs of one &lt;code&gt;droplets_*()&lt;/code&gt; function to another, including non-&lt;code&gt;droplet_*&lt;/code&gt; functions (see examples).&lt;/p&gt;

&lt;p&gt;Let&#39;s create a droplet:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;(res &amp;lt;- droplets_new(name=&quot;foo&quot;, size_slug = &#39;512mb&#39;, image_slug = &#39;ubuntu-14-04-x64&#39;, region_slug = &#39;sfo1&#39;, ssh_key_ids = 89103))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;$droplet
$droplet$id
[1] 1880805

$droplet$name
[1] &quot;foo&quot;

$droplet$image_id
[1] 3240036

$droplet$size_id
[1] 66

$droplet$event_id
[1] 26711810
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List my droplets&lt;/p&gt;

&lt;p&gt;This function used to be &lt;code&gt;do_droplets_get()&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;droplets()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## $droplet_ids
## [1] 1880805
##
## $droplets
## $droplets[[1]]
## $droplets[[1]]$id
## [1] 1880805
##
## $droplets[[1]]$name
## [1] &quot;foo&quot;
##
## $droplets[[1]]$image_id
## [1] 3240036
##
## $droplets[[1]]$size_id
## [1] 66
##
## $droplets[[1]]$region_id
## [1] 3
##
## $droplets[[1]]$backups_active
## [1] FALSE
##
## $droplets[[1]]$ip_address
## [1] &quot;162.243.152.56&quot;
##
## $droplets[[1]]$private_ip_address
## NULL
##
## $droplets[[1]]$locked
## [1] FALSE
##
## $droplets[[1]]$status
## [1] &quot;active&quot;
##
## $droplets[[1]]$created_at
## [1] &quot;2014-06-18T14:15:35Z&quot;
##
##
##
## $event_id
## NULL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As mentioned above we can now pipe output of &lt;code&gt;droplet*()&lt;/code&gt; functions to other &lt;code&gt;droplet*()&lt;/code&gt; functions.&lt;/p&gt;

&lt;p&gt;Here, pipe output of lising droplets &lt;code&gt;droplets()&lt;/code&gt; to the &lt;code&gt;events()&lt;/code&gt; function&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;droplets() %&amp;gt;% events()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Error: No event id found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this case there were no event ids to get event data on.&lt;/p&gt;

&lt;p&gt;Here, we&#39;ll get details for the droplet we just created, then pipe that to &lt;code&gt;droplets_power_off()&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;droplets(1880805) %&amp;gt;% droplets_power_off
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## $droplet_ids
## [1] 1880805
##
## $droplets
## $droplets$droplet_ids
## [1] 1880805
##
## $droplets$droplets
## $droplets$droplets$id
## [1] 1880805
##
## $droplets$droplets$name
## [1] &quot;foo&quot;
##
## $droplets$droplets$image_id
## [1] 3240036
##
## $droplets$droplets$size_id
## [1] 66
##
## $droplets$droplets$region_id
## [1] 3
##
## $droplets$droplets$backups_active
## [1] FALSE
##
## $droplets$droplets$ip_address
## [1] &quot;162.243.152.56&quot;
##
## $droplets$droplets$private_ip_address
## NULL
##
## $droplets$droplets$locked
## [1] FALSE
##
## $droplets$droplets$status
## [1] &quot;active&quot;
##
## $droplets$droplets$created_at
## [1] &quot;2014-06-18T14:15:35Z&quot;
##
## $droplets$droplets$backups
## list()
##
## $droplets$droplets$snapshots
## list()
##
##
## $droplets$event_id
## NULL
##
##
## $event_id
## [1] 26714109
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then pipe it again to &lt;code&gt;droplets_power_on()&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;droplets(1880805) %&amp;gt;%
  droplets_power_on
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## $droplet_ids
## [1] 1880805
##
## $droplets
## $droplets$droplet_ids
## [1] 1880805
##
## $droplets$droplets
## $droplets$droplets$id
## [1] 1880805
##
## $droplets$droplets$name
## [1] &quot;foo&quot;
##
## $droplets$droplets$image_id
## [1] 3240036
##
## $droplets$droplets$size_id
## [1] 66
##
## $droplets$droplets$region_id
## [1] 3
##
## $droplets$droplets$backups_active
## [1] FALSE
##
## $droplets$droplets$ip_address
## [1] &quot;162.243.152.56&quot;
##
## $droplets$droplets$private_ip_address
## NULL
##
## $droplets$droplets$locked
## [1] FALSE
##
## $droplets$droplets$status
## [1] &quot;off&quot;
##
## $droplets$droplets$created_at
## [1] &quot;2014-06-18T14:15:35Z&quot;
##
## $droplets$droplets$backups
## list()
##
## $droplets$droplets$snapshots
## list()
##
##
## $droplets$event_id
## NULL
##
##
## $event_id
## [1] 26714152
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;Sys.sleep(6)
droplets(1880805)$droplets$status
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &quot;off&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Why not use more pipes?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;droplets(1880805) %&amp;gt;%
  droplets_power_off %&amp;gt;%
  droplets_power_on %&amp;gt;%
  events
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Last time I talked about installing R, RStudio, etc. on a droplet. I&#39;m still working out bugs in that stuff, but do test out so it can get better faster. See &lt;code&gt;do_install()&lt;/code&gt;.&lt;/p&gt;
</description>
				<published>2014-06-18 00:00:00 -0700</published>
				<link>http://recology.info//2014/06/analogsea-v01/</link>
			</item>
		
			<item>
				<title>analogsea - an R client for the Digital Ocean API</title>
				<description>&lt;p&gt;I think this package name is my best yet. Maybe it doesn&#39;t make sense though? At least it did at the time...&lt;/p&gt;

&lt;p&gt;Anyway, the main motivation for this package was to be able to automate spinning up Linux boxes to do cloud R/RStudio work. Of course if you are a command line native this is all easy for you, but if you are afraid of the command line and/or just don&#39;t want to deal with it, this tool will hopefully help.&lt;/p&gt;

&lt;p&gt;Most of the functions in this package wrap the Digital Ocean API. So you can do things like create a new &lt;em&gt;droplet&lt;/em&gt;, get information on your droplets, &lt;em&gt;destroy&lt;/em&gt; droplets, get information on available images, make snapshots, etc. Basically everything you can do from their website you can do here. Note that all functions are prefixed with &lt;code&gt;do_&lt;/code&gt; (for Digital Ocean).&lt;/p&gt;

&lt;p&gt;The droplet creation part is what we can leverage to spin up a cloud machine to then install R on, and optionally RStudio server, and even RStudio Shiny server. This allows you to stay within R entirely, not having to go to &lt;code&gt;ssh&lt;/code&gt; into the Linux machine itself or go to the Digital Ocean website (after initial setup of course).&lt;/p&gt;

&lt;p&gt;If you try this, I recommend using this on R on the command line as you can more easily kill the R session if something goes wrong, and quickly open a new tab/window to &lt;code&gt;ssh&lt;/code&gt; into the Linux machine if you want.&lt;/p&gt;

&lt;p&gt;First, installation&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;devtools::install_github(&quot;sckott/analogsea&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Load the library&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;library(&quot;analogsea&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Firt, authenticate. This will ask for your Digital Ocean details. You can enter them each R session, or store them in your &lt;code&gt;.Renviron&lt;/code&gt; file. After successful authentication, each function simply looks for your auth details with &lt;code&gt;Sys.getenv()&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;do_auth()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List available regions&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;sapply(do_regions()$regions, &quot;[[&quot;, &quot;name&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## [1] &quot;San Francisco 1&quot; &quot;New York 2&quot;      &quot;Amsterdam 2&quot;     &quot;Singapore 1&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List available images&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;sapply(do_images()$images, &quot;[[&quot;, &quot;name&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##  [1] &quot;rstudioserverssh_snap&quot;                          
##  [2] &quot;CentOS 5.8 x64&quot;                                 
##  [3] &quot;CentOS 5.8 x32&quot;                                 
##  [4] &quot;Debian 6.0 x64&quot;                                 
##  [5] &quot;Debian 6.0 x32&quot;                                 
##  [6] &quot;Ubuntu 10.04 x64&quot;                               
##  [7] &quot;Ubuntu 10.04 x32&quot;                               
##  [8] &quot;Arch Linux 2013.05 x64&quot;                         
##  [9] &quot;Arch Linux 2013.05 x32&quot;                         
## [10] &quot;CentOS 6.4 x32&quot;                                 
## [11] &quot;CentOS 6.4 x64&quot;                                 
## [12] &quot;Ubuntu 12.04.4 x32&quot;                             
## [13] &quot;Ubuntu 12.04.4 x64&quot;                             
## [14] &quot;Ubuntu 13.10 x32&quot;                               
## [15] &quot;Ubuntu 13.10 x64&quot;                               
## [16] &quot;Fedora 19 x32&quot;                                  
## [17] &quot;Fedora 19 x64&quot;                                  
## [18] &quot;MEAN on Ubuntu 12.04.4&quot;                         
## [19] &quot;Ghost 0.4.2 on Ubuntu 12.04&quot;                    
## [20] &quot;Wordpress on Ubuntu 13.10&quot;                      
## [21] &quot;Ruby on Rails on Ubuntu 12.10 (Nginx + Unicorn)&quot;
## [22] &quot;Redmine on Ubuntu 12.04&quot;                        
## [23] &quot;Ubuntu 14.04 x32&quot;                               
## [24] &quot;Ubuntu 14.04 x64&quot;                               
## [25] &quot;Fedora 20 x32&quot;                                  
## [26] &quot;Fedora 20 x64&quot;                                  
## [27] &quot;Dokku v0.2.3 on Ubuntu 14.04&quot;                   
## [28] &quot;Debian 7.0 x64&quot;                                 
## [29] &quot;Debian 7.0 x32&quot;                                 
## [30] &quot;CentOS 6.5 x64&quot;                                 
## [31] &quot;CentOS 6.5 x32&quot;                                 
## [32] &quot;Docker 0.11.1 on Ubuntu 13.10 x64&quot;              
## [33] &quot;Django on Ubuntu 14.04&quot;                         
## [34] &quot;LAMP on Ubuntu 14.04&quot;                           
## [35] &quot;node-v0.10.28 on Ubuntu 14.04&quot;                  
## [36] &quot;GitLab 6.9.0 CE&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List available sizes&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;do.call(rbind, do_sizes()$sizes)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##       id name    slug    memory cpu disk cost_per_hour cost_per_month
##  [1,] 66 &quot;512MB&quot; &quot;512mb&quot; 512    1   20   0.00744       &quot;5.0&quot;         
##  [2,] 63 &quot;1GB&quot;   &quot;1gb&quot;   1024   1   30   0.01488       &quot;10.0&quot;        
##  [3,] 62 &quot;2GB&quot;   &quot;2gb&quot;   2048   2   40   0.02976       &quot;20.0&quot;        
##  [4,] 64 &quot;4GB&quot;   &quot;4gb&quot;   4096   2   60   0.05952       &quot;40.0&quot;        
##  [5,] 65 &quot;8GB&quot;   &quot;8gb&quot;   8192   4   80   0.1191        &quot;80.0&quot;        
##  [6,] 61 &quot;16GB&quot;  &quot;16gb&quot;  16384  8   160  0.2381        &quot;160.0&quot;       
##  [7,] 60 &quot;32GB&quot;  &quot;32gb&quot;  32768  12  320  0.4762        &quot;320.0&quot;       
##  [8,] 70 &quot;48GB&quot;  &quot;48gb&quot;  49152  16  480  0.7143        &quot;480.0&quot;       
##  [9,] 69 &quot;64GB&quot;  &quot;64gb&quot;  65536  20  640  0.9524        &quot;640.0&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&#39;s create a droplet:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;(res &amp;lt;- do_droplets_new(name=&quot;foo&quot;, size_slug = &#39;512mb&#39;, image_slug = &#39;ubuntu-14-04-x64&#39;, region_slug = &#39;sfo1&#39;, ssh_key_ids = 89103))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;$status
[1] &quot;OK&quot;

$droplet
$droplet$id
[1] 1733336

$droplet$name
[1] &quot;foo&quot;

$droplet$image_id
[1] 3240036

$droplet$size_id
[1] 66

$droplet$event_id
[1] 25278892


attr(,&quot;class&quot;)
[1] &quot;dodroplet&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List my droplets&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;do_droplets_get()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## $status
## [1] &quot;OK&quot;
## 
## $droplets
## $droplets[[1]]
## $droplets[[1]]$id
## [1] 1733336
## 
## $droplets[[1]]$name
## [1] &quot;foo&quot;
## 
## $droplets[[1]]$image_id
## [1] 3240036
## 
## $droplets[[1]]$size_id
## [1] 66
## 
## $droplets[[1]]$region_id
## [1] 3
## 
## $droplets[[1]]$backups_active
## [1] FALSE
## 
## $droplets[[1]]$ip_address
## [1] &quot;107.170.211.252&quot;
## 
## $droplets[[1]]$private_ip_address
## NULL
## 
## $droplets[[1]]$locked
## [1] FALSE
## 
## $droplets[[1]]$status
## [1] &quot;active&quot;
## 
## $droplets[[1]]$created_at
## [1] &quot;2014-05-28T05:59:22Z&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cool, we have a new Linux box with 512 mb RAM, running Ubuntu 14.04 in the SF region. Notice that I&#39;m using my SSH key here. If you don&#39;t use your SSH key, Digital Ocean will email you a password, which you then use. We just have to wait a bit (sometimes 20 seconds, sometimes a few minutes) for it to spin up.&lt;/p&gt;

&lt;p&gt;Now we can install stuff. Here, I&#39;ll install R, and RStudio Server. This step prints out the progress as you would see if you did &lt;code&gt;ssh&lt;/code&gt; into the box itself outside of R. The RStudio Server instance will pop up in your default browser when this operation is done.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;do_install(res$droplet$id, what=&#39;rstudio&#39;, usr=&#39;hey&#39;, pwd=&#39;there&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/public/img/2014-05-28-analogsea/rstudioinstance.png&quot; width=&quot;100%&quot;&gt;&lt;/p&gt;

&lt;p&gt;You can install some things like the &lt;code&gt;libcurl&lt;/code&gt; and &lt;code&gt;libxml&lt;/code&gt; libraries too with the &lt;code&gt;deps&lt;/code&gt; parameter.&lt;/p&gt;

&lt;p&gt;When you&#39;re done, you can destroy your droplet from R too&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;do_droplets_destroy(res$droplet$id)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## $status
## [1] &quot;OK&quot;
## 
## $event_id
## [1] 25279124
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let me know if you have any thoughts :)&lt;/p&gt;
</description>
				<published>2014-05-28 00:00:00 -0700</published>
				<link>http://recology.info//2014/05/analogsea/</link>
			</item>
		
			<item>
				<title>Logistic plot reboot</title>
				<description>&lt;p&gt;Someone asked about plotting something like this today&lt;/p&gt;

&lt;p&gt;I &lt;a href=&quot;http://recology.info/2012/01/logistic-regression-barplot-fig/&quot;&gt;wrote a few functions previously&lt;/a&gt; to do something like this. However, since then &lt;code&gt;ggplot2&lt;/code&gt; has changed, and one of the functions no longer works.&lt;/p&gt;

&lt;p&gt;Hence, I fixed &lt;code&gt;opts()&lt;/code&gt; to &lt;code&gt;theme()&lt;/code&gt;, &lt;code&gt;theme_blank()&lt;/code&gt; to &lt;code&gt;element_blank()&lt;/code&gt;, and &lt;code&gt;panel.background = element_blank()&lt;/code&gt; to &lt;code&gt;plot.background = element_blank()&lt;/code&gt; to get the histograms to show up with the line plot and not cover it.&lt;/p&gt;

&lt;p&gt;The new functions:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;loghistplot  &amp;lt;- function(data) {
  names(data) &amp;lt;- c(&#39;x&#39;,&#39;y&#39;) # rename columns

  # get min and max axis values
  min_x &amp;lt;- min(data$x)
  max_x &amp;lt;- max(data$x)
  min_y &amp;lt;- min(data$y)
  max_y &amp;lt;- max(data$y)

  # get bin numbers
  bin_no &amp;lt;- max(hist(data$x, plot = FALSE)$counts) + 5

  # create plots
  a &amp;lt;- ggplot(data, aes(x = x, y = y)) +
    theme_bw(base_size=16) +
    geom_smooth(method = &quot;glm&quot;, family = &quot;binomial&quot;, se = TRUE,
                colour=&#39;black&#39;, size=1.5, alpha = 0.3) +
    scale_x_continuous(limits=c(min_x,max_x)) +
    theme(panel.grid.major = element_blank(),
          panel.grid.minor=element_blank(),
          panel.background = element_blank(),
          plot.background = element_blank()) +
    labs(y = &quot;Probability\n&quot;, x = &quot;\nYour X Variable&quot;)

  theme_loghist &amp;lt;- list(
    theme(panel.grid.major = element_blank(),
          panel.grid.minor=element_blank(),
          axis.text.y = element_blank(),
          axis.text.x = element_blank(),
          axis.ticks = element_blank(),
          panel.border = element_blank(),
          panel.background = element_blank(),
          plot.background = element_blank())
  )

  b &amp;lt;-
  ggplot(data[data$y == unique(data$y)[1], ], aes(x = x)) +
    theme_bw(base_size=16) +
    geom_histogram(fill = &quot;grey&quot;) +
    scale_y_continuous(limits=c(0,bin_no)) +
    scale_x_continuous(limits=c(min_x,max_x)) +
    theme_loghist +
    labs(y=&#39;\n&#39;, x=&#39;\n&#39;)

  c &amp;lt;- ggplot(data[data$y == unique(data$y)[2], ], aes(x = x)) +
    theme_bw(base_size=16) +
    geom_histogram(fill = &quot;grey&quot;) +
    scale_y_continuous(trans=&#39;reverse&#39;, limits=c(bin_no,0)) +
    scale_x_continuous(limits=c(min_x,max_x)) +
    theme_loghist +
    labs(y=&#39;\n&#39;, x=&#39;\n&#39;)

  grid.newpage()
  pushViewport(viewport(layout = grid.layout(1,1)))

  vpa_ &amp;lt;- viewport(width = 1, height = 1, x = 0.5, y = 0.5)
  vpb_ &amp;lt;- viewport(width = 1, height = 1, x = 0.5, y = 0.5)
  vpc_ &amp;lt;- viewport(width = 1, height = 1, x = 0.5, y = 0.5)

  print(b, vp = vpb_)
  print(c, vp = vpc_)
  print(a, vp = vpa_)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;logpointplot  &amp;lt;- function(data) {
  names(data) &amp;lt;- c(&#39;x&#39;,&#39;y&#39;) # rename columns

  # get min and max axis values
  min_x &amp;lt;- min(data$x)
  max_x &amp;lt;- max(data$x)
  min_y &amp;lt;- min(data$y)
  max_y &amp;lt;- max(data$y)

  # create plots
  ggplot(data, aes(x = x, y = y)) +
    theme_bw(base_size=16) +
    geom_point(size = 3, alpha = 0.5, position = position_jitter(w=0, h=0.02)) +
    geom_smooth(method = &quot;glm&quot;, family = &quot;binomial&quot;, se = TRUE,
                colour=&#39;black&#39;, size=1.5, alpha = 0.3) +
    scale_x_continuous(limits=c(min_x,max_x)) +
    theme(panel.grid.major = element_blank(),
          panel.grid.minor=element_blank(),
          panel.background = element_blank()) +
    labs(y = &quot;Probability\n&quot;, x = &quot;\nYour X Variable&quot;)

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install &lt;code&gt;ggplot2&lt;/code&gt; and &lt;code&gt;gridExtra&lt;/code&gt; if you don&#39;t have them:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;install.packages(c(&quot;ggplot2&quot;,&quot;gridExtra&quot;), repos = &quot;http://cran.rstudio.com&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And their use:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Logistic histogram plots&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;loghistplot(data=mtcars[,c(&quot;mpg&quot;,&quot;vs&quot;)])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/public/img/2014-05-22-logplotreboot/unnamed-chunk-5.png&quot; alt=&quot;plot of chunk unnamed-chunk-5&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;loghistplot(movies[,c(&quot;rating&quot;,&quot;Action&quot;)])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/public/img/2014-05-22-logplotreboot/unnamed-chunk-6.png&quot; alt=&quot;plot of chunk unnamed-chunk-6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Logistic point plots&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;loghistplot(data=mtcars[,c(&quot;mpg&quot;,&quot;vs&quot;)])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/public/img/2014-05-22-logplotreboot/unnamed-chunk-7.png&quot; alt=&quot;plot of chunk unnamed-chunk-7&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;loghistplot(movies[,c(&quot;rating&quot;,&quot;Action&quot;)])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/public/img/2014-05-22-logplotreboot/unnamed-chunk-8.png&quot; alt=&quot;plot of chunk unnamed-chunk-8&quot; /&gt;&lt;/p&gt;
</description>
				<published>2014-05-22 00:00:00 -0700</published>
				<link>http://recology.info//2014/05/logplotreboot/</link>
			</item>
		
			<item>
				<title>cowsay - ascii messages and warnings for R</title>
				<description>&lt;h2&gt;The history&lt;/h2&gt;

&lt;p&gt;Cowsay is a terminal program that generates ascii pictures of a cow saying what you tell the cow to say in a bubble. See the Wikipedia page for more information: &lt;a href=&quot;http://en.wikipedia.org/wiki/Cowsay&quot;&gt;http://en.wikipedia.org/wiki/Cowsay&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Install cowsay to use in your terminal (on OSX):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew update
brew install cowsay
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Type &lt;code&gt;cowsay hello world!&lt;/code&gt;, and you get:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; ______________
&amp;lt; hello world! &amp;gt;
 --------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Optionally, you can install &lt;a href=&quot;http://en.wikipedia.org/wiki/Fortune_(Unix&quot;&gt;fortune&lt;/a&gt;) to get pseudorandom messages from a database of quotations. On OSX do &lt;code&gt;brew install fortune&lt;/code&gt;, then you can pipe a fortune quote to &lt;code&gt;cowsay&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fortune | cowsay
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And get something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; ______________________________________
/ &quot;To take a significant step forward, \
| you must make a series of finite     |
| improvements.&quot; -- Donald J. Atwood,  |
\ General Motors                       /
 --------------------------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                ||----w |
                ||     ||
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also get different animals. Try &lt;code&gt;cowsay -f tux &amp;lt;yourmessage&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Cowsay in R&lt;/h2&gt;

&lt;p&gt;Why cowsay for R?  Why not. You never know what you will learn in fun side projects. Basically, this cowsay R package we are making prints messages that you pass to the function &lt;code&gt;say&lt;/code&gt;.  There are three arguments to the &lt;code&gt;say&lt;/code&gt; function:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;what&lt;/strong&gt;: What do you want to say?  You can pass it a custom message, anything you want, like &lt;em&gt;what&#39;s up&lt;/em&gt;, or &lt;em&gt;howdy!&lt;/em&gt;. You can also get R&#39;s version of fortunes, quotes about R. Just pass the exact term &lt;em&gt;forture&lt;/em&gt;. If you want a fact about cats from the &lt;a href=&quot;http://catfacts-api.appspot.com/&quot;&gt;Cat Facts API&lt;/a&gt;, pass in &lt;em&gt;catfact&lt;/em&gt;. Last, you can get the current time by passing &lt;em&gt;time&lt;/em&gt; to this parameter.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;by&lt;/strong&gt;: Type of animal, one of cow, chicken, poop, cat, ant, pumpkin, ghost, spider, rabbit, pig, snowman, or frog. If you want more animals, send a pull request, or ask and at some point it will be added.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: One of message (default), warning, or string (returns string). You could use string to pass into other functions, etc., instead of printing a warning or message.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There are three other contributors so far (a big thanks to them):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tyler Rinker&lt;/li&gt;
&lt;li&gt;Thomas Leeper&lt;/li&gt;
&lt;li&gt;Noam Ross&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Installation&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;library(devtools)
install_github(&quot;cowsay&quot;, &quot;sckott&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;library(cowsay)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;p.s. or &lt;code&gt;install_github(&quot;sckott/cowsay&quot;)&lt;/code&gt; if you have a newer version of devtools&lt;/p&gt;

&lt;h3&gt;Get time&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;say(&quot;time&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
 ----- 
 2014-02-20 14:15:35 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;say(&quot;time&quot;, &quot;chicken&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;

 ----- 
 2014-02-20 14:15:35 
 ------ 
    \   
     \  
         _
       _/ }
      `&amp;gt;&#39; \
      `|   \
       |   /&#39;-.     .-.
        \&#39;     &#39;;`--&#39; .&#39;
         \&#39;.    `&#39;-./
          &#39;.`-..-;`
            `;-..&#39;
            _| _|
            /` /`
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Vary type of output, default calls message&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;say(&quot;hello world&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
 ----- 
 hello world 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;say(&quot;hello world&quot;, type = &quot;warning&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Warning: 
 ----- 
 hello world 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;say(&quot;hello world&quot;, type = &quot;string&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[1] &quot;\n ----- \n hello world \n ------ \n    \\   ^__^ \n     \\  (oo)\\ ________ \n        (__)\\         )\\ /\\ \n             ||------w|\n             ||      ||&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Catfacts!!!!&lt;/h3&gt;

&lt;p&gt;From the &lt;a href=&quot;http://catfacts-api.appspot.com/&quot;&gt;catfacts API&lt;/a&gt;, we can get random cat facts. If you put in &lt;em&gt;catfact&lt;/em&gt; you by default get a cat saying it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;say(&quot;catfact&quot;, &quot;cat&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;

 ----- 
 Neutering a cat extends its life span by two or three years. 
 ------ 
    \   
     \  
               \`*-.
                 )  _`-.                 
                .  : `. .                
                : _   &#39;                 
                ; *` _.   `*-._          
                `-.-&#39;          `-.       
                  ;       `       `.     
                  :.       .       \
                  .\  .   :   .-&#39;   .   
                  &#39;  `+.;  ;  &#39;      :   
                  :  &#39;  |    ;       ;-. 
                  ; &#39;   : :`-:     _.`* ;
               .*&#39; /  .*&#39; ; .*`- +&#39;  `*&#39; 
               `*-*   `*-*  `*-*&#39;        
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;R fortunes&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;say(&quot;fortune&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
 ----- 
 If I were to be treated by a cure created by stepwise regression, I would prefer voodoo.
 Dieter Menne
 in a thread about regressions with many variables
 R-help
 October 2009 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;say(&quot;fortune&quot;, &quot;pig&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;

 ----- 
 Cross posting is sociopathic.
 Roger Koenker
 NA
 R-help
 November 2008 
 ------ 
    \   
     \  
       _//| .-~~~-.
     _/oo  }       }-@
    (&#39;&#39;)_  }       |
     `--&#39;| { }--{  }
          //_/  /_/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Incorporate into a function&lt;/h3&gt;

&lt;p&gt;Define a function&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;foo &amp;lt;- function(x) {
    if (x &amp;lt; 5) 
        say(&quot;woops, x should be 5 or greater&quot;)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Call the function, with an error on purpose&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;foo(3)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
 ----- 
 woops, x should be 5 or greater 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or capture a warning or message and pass to the &lt;code&gt;say&lt;/code&gt; function&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;foo2 &amp;lt;- function(x) {
    err &amp;lt;- tryCatch(x^2, error = function(e) e)
    say(err$message, &quot;frog&quot;)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then call the function&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;r&quot;&gt;foo2(&quot;hello&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;

 ----- 
 non-numeric argument to binary operator 
 ------ 
    \   
     \  
        (.)_(.)
     _ (   _   ) _
    / \/`-----&#39;\/ \
  __\ ( (     ) ) /__
  )   /\ \._./ /\   (
   )_/ /|\   /|\ \_(
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Awesome. Much better to have an error message from a frog than just the harsh console alone :)&lt;/p&gt;
</description>
				<published>2014-02-20 00:00:00 -0800</published>
				<link>http://recology.info//2014/02/cowsay/</link>
			</item>
		
			<item>
				<title>rgauges - fun with hourly web site analytics</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://get.gaug.es/&quot;&gt;Gaug.es&lt;/a&gt; is a really nice looking analytics platform as an alternative to Google Analytics. It is a paid service, but not that expensive really.&lt;/p&gt;

&lt;p&gt;We&#39;ve made an R package to interact with the Gaug.es API called &lt;code&gt;rgauges&lt;/code&gt;. Find it &lt;a href=&quot;https://github.com/ropensci/rgauges&quot;&gt;on Github&lt;/a&gt; and &lt;a href=&quot;http://cran.r-project.org/web/packages/rgauges/index.html&quot;&gt;on CRAN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Although working with the Gaug.es API is nice and easy, they don&#39;t keep hourly visit stats and provide those via the API, so that you have to continually collect them yourself if you want them. That&#39;s what I have done for my own website.&lt;/p&gt;

&lt;p&gt;It took a few steps to get this data:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I wrote a little Ruby script using &lt;a href=&quot;http://rubygems.org/gems/twelve&quot;&gt;Twelve gem&lt;/a&gt; to collect data from the Gaug.es API every day at the same time, which just gets the patst 24 hours of data. This script makes a call to the Gaug.es API and sends the data to a &lt;a href=&quot;http://couchdb.apache.org/&quot;&gt;CouchDB&lt;/a&gt; database hosted on &lt;a href=&quot;https://cloudant.com/&quot;&gt;Cloudant&lt;/a&gt;. In reality, the script is is embeded in a rack app as I don&#39;t think you can throw up a standalone script to Heroku. Here&#39;s the script:&lt;/li&gt;
&lt;/ul&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class MyApp
  require &#39;couchrest&#39;
  require &#39;twelve&#39;
  require &#39;date&#39;
  require &#39;time&#39;

  def self.getgaugesdata_scott
    bfg = Twelve.new(&#39;&amp;lt;gaugeskey&amp;gt;&#39;)
    out = bfg.gauges(&#39;&amp;lt;gaugeskey&amp;gt;&#39;)[&#39;recent_hours&#39;]
    yip = { &quot;from_url&quot;=&amp;gt; &quot;http://sckott.github.io/&quot;, &quot;coll_date&quot;=&amp;gt; Date.today.to_s, &quot;coll_time&quot;=&amp;gt; Time.now.utc.localtime.to_s, &quot;recent_hours&quot;=&amp;gt; out }
    @db = CouchRest.database!(&quot;https://app16517180.heroku:&amp;lt;key&amp;gt;@app16517180.heroku.cloudant.com/gaugesdb_scott&quot;)
    @db.save_doc(yip)

  def call env
    [200, {&quot;Content-Type&quot; =&amp;gt; &quot;text/html&quot;}, [&quot;no output printed here&quot;]] 
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;One little catch though: I run the Ruby script on Heroku, so I don&#39;t have to do it locally, but Heroku free instance goes down unless it&#39;s doing something. So I used a little service called &lt;a href=&quot;http://uptimerobot.com/&quot;&gt;UptimeRobot&lt;/a&gt; to ping the Heroku app every 5 minutes. UptimeRobot also is giving you uptime stats too on your app, which I don&#39;t really need, but is a cool feature.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And that&#39;s it. Now the data is stored from each day&#39;s collection of visitor stats to a free Cloudant CouchDB database.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Regular Gaug.es data&lt;/h2&gt;

&lt;p&gt;First, let&#39;s look at what you can do with data that Gaug.es does give to you, using the &lt;code&gt;rgauges&lt;/code&gt; R package.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;Install rgauges&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;install.packages&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;devtools&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;devtools&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
install_github&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;rgauges&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;ropensci&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Load rgauges and other dependency libraries&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;rgauges&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Your info&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;gs_me&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## $user
## $user$name
## [1] &amp;quot;Scott Chamberlain&amp;quot;
## 
## $user$email
## [1] &amp;quot;myrmecocystus@gmail.com&amp;quot;
## 
## $user$id
## [1] &amp;quot;4eddbafb613f5d5139000001&amp;quot;
## 
## $user$last_name
## [1] &amp;quot;Chamberlain&amp;quot;
## 
## $user$urls
## $user$urls$self
## [1] &amp;quot;https://secure.gaug.es/me&amp;quot;
## 
## $user$urls$clients
## [1] &amp;quot;https://secure.gaug.es/clients&amp;quot;
## 
## $user$urls$gauges
## [1] &amp;quot;https://secure.gaug.es/gauges&amp;quot;
## 
## 
## $user$first_name
## [1] &amp;quot;Scott&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Traffic&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;gs_traffic&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;4efd83a6f5a1f5158a000004&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## $metadata
## $metadata$views
## [1] 386
## 
## $metadata$urls
## $metadata$urls$older
## [1] &amp;quot;https://secure.gaug.es/gauges/4efd83a6f5a1f5158a000004/traffic?date=2013-12-01&amp;quot;
## 
## $metadata$urls$newer
## NULL
## 
## 
## $metadata$date
## [1] &amp;quot;2014-01-17&amp;quot;
## 
## $metadata$people
## [1] 208
## 
## 
## $data
##    views       date people
## 1      7 2014-01-01      5
## 2     17 2014-01-02      7
## 3     39 2014-01-03     17
## 4     15 2014-01-04      9
## 5     14 2014-01-05      7
## 6     33 2014-01-06     22
## 7     19 2014-01-07     11
## 8     15 2014-01-08     11
## 9     53 2014-01-09     24
## 10    53 2014-01-10     13
## 11    14 2014-01-11      9
## 12    11 2014-01-12     10
## 13    14 2014-01-13     14
## 14    11 2014-01-14      9
## 15    23 2014-01-15     16
## 16    16 2014-01-16     14
## 17    32 2014-01-17     25&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Screen/browser information&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;gs_reso&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;4efd83a6f5a1f5158a000004&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## $browser_height
##   views title
## 1   190   600
## 2    77   768
## 3    53   900
## 4    38   480
## 5    28  1024
## 
## $browser_width
##   views title
## 1   153  1280
## 2    91  1024
## 3    58  1600
## 4    36   800
## 5    30  1440
## 6     6  2000
## 7     6   320
## 8     6   480
## 
## $screen_width
##   views title
## 1   176  1280
## 2    90  1600
## 3    55  1440
## 4    35  1024
## 5    14  2000
## 6     6   320
## 7     6   480
## 8     4   800&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Visualize traffic data&lt;/h3&gt;

&lt;p&gt;You&#39;ll need to load ggplot2&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
out &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; gs_gauge_detail&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;4efd83a6f5a1f5158a000004&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
vis_gauge&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;out&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Using hour, time as id variables
## Using date as id variables
## Using date as id variables&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/public/img/2014-01-17-rgauges-hourly/unnamed-chunk-4.png&quot; alt=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## NULL&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;

&lt;hr /&gt;

&lt;h2&gt;Historic hourly Gaug.es data&lt;/h2&gt;

&lt;p&gt;Now let&#39;s play with the hourly data. To do that we aren&#39;t going to use &lt;code&gt;rgauges&lt;/code&gt;, but rather call the Cloudant API. CouchDB provides a RESTful API out of the box, so we can do a call like &lt;code&gt;https://app16517180.heroku.cloudant.com/gaugesdb_scott/_all_docs?limit=20&lt;/code&gt; to get metadata (or other calls to get the documents themselves). (note: that url won&#39;t work for you since you don&#39;t have my login info)&lt;/p&gt;

&lt;h3&gt;Get some data&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;devtools&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
install_github&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;sckott/sofa&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# or install_github(&amp;#39;sofa&amp;#39;, &amp;#39;sckott&amp;#39;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sofa&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
cloudant_name &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;app16517180.heroku&amp;quot;&lt;/span&gt;
cloudant_pwd &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;getOption&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;sofa_cloudant_heroku&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
cushion&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sofa_cloudant &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cloudant_name&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cloudant_pwd&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
dat &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; sofa_alldocs&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cushion &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;sofa_cloudant&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; dbname &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;gaugesdb_scott&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; include_docs &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Manipulate and visualize&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;plyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
dates &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; ldply&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dat&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;rows&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; x&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;doc&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;coll_date&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dates&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;V1&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;2013-06-26&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dates&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;V1&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;2014-01-16&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dates&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;V1&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 198&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So we&#39;ve got 198 days of data, first collected near end of June, and most recent yesterday. Now get actual visits data&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; ldply&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dat&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;rows&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    y &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;do.call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;rbind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;lapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;doc&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;recent_hours&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;date &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; x&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;doc&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;coll_date&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
df&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;date &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;as.Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
df&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;hour &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;as.numeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;hour&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;reshape2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
df_melt &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; melt&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; id.vars &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;hour&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_melt&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##         date hour variable value
## 1 2013-09-18    1    views     2
## 2 2013-09-18    2    views     3
## 3 2013-09-18    3    views     2
## 4 2013-09-18    4    views     0
## 5 2013-09-18    5    views     1
## 6 2013-09-18    6    views    10&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We need to combine the date and hour in to one date time string:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df_melt &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_melt&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; datetime &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;as.POSIXct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;paste&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%s:00:00&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    hour&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_melt&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##         date hour variable value            datetime
## 1 2013-09-18    1    views     2 2013-09-18 01:00:00
## 2 2013-09-18    2    views     3 2013-09-18 02:00:00
## 3 2013-09-18    3    views     2 2013-09-18 03:00:00
## 4 2013-09-18    4    views     0 2013-09-18 04:00:00
## 5 2013-09-18    5    views     1 2013-09-18 05:00:00
## 6 2013-09-18    6    views    10 2013-09-18 06:00:00&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now plot all data&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;scales&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

gauge_theme &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;theme&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;panel.grid.major &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; element_blank&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
             panel.grid.minor &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; element_blank&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
             legend.position &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.85&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.85&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
             legend.key &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; element_blank&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_melt&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;datetime&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; group&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;variable&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;variable&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    theme_bw&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;base_size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
    geom_line&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    scale_color_brewer&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; palette&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    labs&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    gauge_theme&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/public/img/2014-01-17-rgauges-hourly/unnamed-chunk-8.png&quot; alt=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And just one day&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;oneday &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; df_melt&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;as.character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_melt&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%in%&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;2013-11-12&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;oneday&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;datetime&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; group&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;variable&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;variable&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    theme_bw&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;base_size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
    geom_line&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    scale_color_brewer&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; palette&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    labs&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    gauge_theme&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/public/img/2014-01-17-rgauges-hourly/unnamed-chunk-9.png&quot; alt=&quot;center&quot; /&gt;&lt;/p&gt;
</description>
				<published>2014-01-17 00:00:00 -0800</published>
				<link>http://recology.info//2014/01/rgauges-hourly/</link>
			</item>
		
			<item>
				<title>Jekyll - an intro</title>
				<description>&lt;p&gt;I started using Jekyll when I didn&#39;t really know HTML, CSS, or Ruby - so I&#39;ve had to learn a lot - but using Jekyll has been a great learning experience for all those languages.&lt;/p&gt;

&lt;p&gt;I&#39;ve tried to boil down steps to building a Jekyll site or blog to the minimal steps:&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;Install Jekyll&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Mac/Linux/Unix:

&lt;ul&gt;
&lt;li&gt;Install dependencies:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install Jekyll using RubyGems &lt;code&gt;gem install jekyll&lt;/code&gt; (you may need to do &lt;code&gt;sudo...&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;If you&#39;re having trouble installing, see the &lt;a href=&quot;http://jekyllrb.com/docs/troubleshooting/&quot;&gt;troubleshooting page&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows: Jekyll doesn&#39;t officially support installation on Windows - follow &lt;a href=&quot;http://www.madhur.co.in/blog/2011/09/01/runningjekyllwindows.html&quot;&gt;these steps&lt;/a&gt; for a Windows install.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;Make a site&lt;/h3&gt;

&lt;p&gt;The easiest way to get started is by using the command &lt;code&gt;jekyll new SITENAME&lt;/code&gt; - let&#39;s replace &lt;code&gt;SITENAME&lt;/code&gt; with &lt;code&gt;foobar&lt;/code&gt; for this example.&lt;/p&gt;

&lt;p&gt;So we run &lt;code&gt;jekyll new foobar&lt;/code&gt;, which gives us:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;New jekyll site installed in /Users/scottmac2/foobar.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Go into that directory, and run&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;foobar
jekyll serve&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Which gives you the files and directories:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
--&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;- _config.yml
  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;- _posts
  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;- css
  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;- _layouts
  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;- _site
  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;- index.html&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then point your browser to &lt;a href=&quot;http://localhost:4000/&quot;&gt;http://localhost:4000/&lt;/a&gt;. And you should see the following:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://f.cl.ly/items/2q322a2P3f2m2A3a3l0O/Screen%20Shot%202013-11-20%20at%209.54.21%20AM.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;Write a new blog post&lt;/h3&gt;

&lt;p&gt;We&#39;ll add a new file to the _posts folder.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;---
layout: post
title:  My second post
date:   2013-11-20
categories: jekyll programming R
---

My second blog post!&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Paste this in to a new file in the &lt;code&gt;_posts&lt;/code&gt; folder, save as today&#39;s date (2013-11-20) plus the post name, which gives us 2013-11-20-second-post.md.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;Deploying&lt;/h3&gt;

&lt;p&gt;An obvious option given that Jekyll was built by Github, is to put it up on Github. Github has some instructions &lt;a href=&quot;http://jekyllrb.com/docs/github-pages/&quot;&gt;here&lt;/a&gt;. Here is my attempt at instructions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you don&#39;t have a Github account already, &lt;a href=&quot;https://help.github.com/articles/signing-up-for-a-new-github-account&quot;&gt;create one&lt;/a&gt; - it&#39;s free.&lt;/li&gt;
&lt;li&gt;Set up Git. Github&#39;s help for this: https://help.github.com/articles/set-up-git&lt;/li&gt;
&lt;li&gt;Creat a new repo on Github, with the same name as your repo on your machine, in this case &lt;code&gt;foobar&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Make your new blog directory &lt;code&gt;foobar&lt;/code&gt; a git repo by doing &lt;code&gt;git init&lt;/code&gt; within the repo.&lt;/li&gt;
&lt;li&gt;Add you files to be tracked by git via &lt;code&gt;git add --all&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Commit your changes by &lt;code&gt;git commit -am &#39;new blog files added&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Make a &lt;code&gt;gh-pages&lt;/code&gt; branch by doing &lt;code&gt;git branch gh-pages&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Add link for your repo on Github: &lt;code&gt;git remote add origin https://github.com/&amp;lt;yourgithubusername&amp;gt;/foobar.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Push to Github using &lt;code&gt;git push -u origin master&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Github gives you one repo that you can name &lt;code&gt;&amp;lt;yourgithubusername&amp;gt;.github.io&lt;/code&gt; that will be viewable at the URL &lt;code&gt;http://&amp;lt;yourgithubusername&amp;gt;.github.io&lt;/code&gt;. You can have your blog/website on the master branch, and you don&#39;t need to create a &lt;code&gt;gh-pages&lt;/code&gt; branch. But if you have your site in any other named repo, you will need the &lt;code&gt;gh-pages&lt;/code&gt; branch. If you don&#39;t use a &lt;code&gt;&amp;lt;yourgithubusername&amp;gt;.github.io&lt;/code&gt; repo, your site will be viewable at &lt;code&gt;&amp;lt;yourgithubusername&amp;gt;.github.io/&amp;lt;reponame&amp;gt;&lt;/code&gt;, in this case &lt;code&gt;&amp;lt;yourgithubusername&amp;gt;.github.io/foobar&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Beginners take note:&lt;/em&gt; Instead of the command line, you could use a Git GUI, from Github (&lt;a href=&quot;http://mac.github.com/&quot;&gt;OSX&lt;/a&gt;, &lt;a href=&quot;http://windows.github.com/&quot;&gt;Windows&lt;/a&gt;), or others, e.g., &lt;a href=&quot;http://gitboxapp.com/&quot;&gt;GitBox&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;Other info&lt;/h3&gt;

&lt;p&gt;That&#39;s the basics of how to get started. Inevitably, you&#39;ll run into problems with various dependencies. The &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll site&lt;/a&gt; has a lot of documntation now, so go there for help - and see a roundup of links below.&lt;/p&gt;

&lt;p&gt;For inspiration, here are many examples of sites that use Jekyll: http://jekyllrb.com/docs/sites/. If you want to build off someone else&#39;s work, find one that provides their code.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;A roundup of links for building static sites with jekyll&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://net.tutsplus.com/tutorials/other/building-static-sites-with-jekyll/&quot;&gt;http://net.tutsplus.com/tutorials/other/building-static-sites-with-jekyll/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.andrewmunsell.com/tutorials/jekyll-by-example/&quot;&gt;http://www.andrewmunsell.com/tutorials/jekyll-by-example/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jekyllbootstrap.com/&quot;&gt;Jekyll Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jekyll thoughts by &lt;a href=&quot;http://carlboettiger.info/index.html&quot;&gt;Carl Boettiger&lt;/a&gt;: &lt;a href=&quot;http://carlboettiger.info/2012/12/30/learning-jekyll.html&quot;&gt;http://carlboettiger.info/2012/12/30/learning-jekyll.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://danielmcgraw.com/2011/04/14/The-Ultimate-Guide-To-Getting-Started-With-Jekyll-Part-1/&quot;&gt;http://danielmcgraw.com/2011/04/14/The-Ultimate-Guide-To-Getting-Started-With-Jekyll-Part-1/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mijingo.com/products/screencasts/static-websites-with-jekyll/&quot;&gt;A book on building sites with Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yeswejekyll.com/&quot;&gt;http://yeswejekyll.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hellarobots.com/2012/01/06/blogging-with-jekyll-quickstart.html&quot;&gt;http://hellarobots.com/2012/01/06/blogging-with-jekyll-quickstart.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sitepoint.com/zero-to-jekyll-in-20-minutes/&quot;&gt;http://www.sitepoint.com/zero-to-jekyll-in-20-minutes/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<published>2013-11-20 00:00:00 -0800</published>
				<link>http://recology.info//2013/11/jekyll-intro/</link>
			</item>
		
	</channel>
</rss>
